{
  "timestamp" : "2020-02-06T03:18:43.273Z",
  "level" : "INFO",
  "thread" : "http-nio-8080-exec-1",
  "logger" : "org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]",
  "message" : "Initializing Spring DispatcherServlet 'dispatcherServlet'",
  "context" : "default"
}{
  "timestamp" : "2020-02-06T03:18:43.274Z",
  "level" : "INFO",
  "thread" : "http-nio-8080-exec-1",
  "logger" : "org.springframework.web.servlet.DispatcherServlet",
  "message" : "Initializing Servlet 'dispatcherServlet'",
  "context" : "default"
}{
  "timestamp" : "2020-02-06T03:18:43.284Z",
  "level" : "INFO",
  "thread" : "http-nio-8080-exec-1",
  "logger" : "org.springframework.web.servlet.DispatcherServlet",
  "message" : "Completed initialization in 10 ms",
  "context" : "default"
}{
  "timestamp" : "2020-02-06T03:18:48.673Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-1",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "Before request [uri=/acordos_comerciais]",
  "context" : "default"
}{
  "timestamp" : "2020-02-06T03:18:49.115Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-1",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "After request [uri=/acordos_comerciais;payload={\n    \"id_acordo_comercial\": 2,\n    \"id_versao_acordo_comercial\": 1,\n    \"id_parceiro\": 1,\n    \"id_produto\": 1,\n    \"situacao\": \"ativo\",\n    \"data_inicio_vigencia\": \"2020-12-01\",\n    \"vigencia_indeterminada\": false,\n    \"data_fim_vigencia\": \"2020-12-02\",\n    \"configuracoes_canal\": [\n        {\n            \"id_canal\": \"C1\"\n        },\n        {\n            \"id_canal\": \"71\"\n        }\n    ],\n    \"contas_repasse\": [\n        {\n            \"id_conta\": 1,\n            \"codigo_finalidade_spb\": \"12345\",\n            \"percentual_raterio\": 50\n        },\n        {\n            \"id_conta\": 2,\n            \"codigo_finalidade_spb\": \"12345\",\n            \"percentual_raterio\": 50\n        }\n    ]\n}]",
  "context" : "default"
}{
  "timestamp" : "2020-02-14T00:52:05.362Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "br.com.arthur.implementacaoh2.App",
  "message" : "Starting App on DESKTOP-JGRRF34 with PID 4576 (C:\\Users\\nakag\\Documents\\workspace-spring-tool-suite-4-4.3.2.RELEASE\\implementacaoh2\\target\\classes started by nakag in C:\\Users\\nakag\\Documents\\workspace-spring-tool-suite-4-4.3.2.RELEASE\\implementacaoh2)",
  "context" : "default"
}{
  "timestamp" : "2020-02-14T00:52:05.385Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "br.com.arthur.implementacaoh2.App",
  "message" : "No active profile set, falling back to default profiles: default",
  "context" : "default"
}{
  "timestamp" : "2020-02-14T00:52:06.161Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.springframework.data.repository.config.RepositoryConfigurationDelegate",
  "message" : "Bootstrapping Spring Data repositories in DEFAULT mode.",
  "context" : "default"
}{
  "timestamp" : "2020-02-14T00:52:06.282Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.springframework.data.repository.config.RepositoryConfigurationDelegate",
  "message" : "Finished Spring Data repository scanning in 111ms. Found 6 repository interfaces.",
  "context" : "default"
}{
  "timestamp" : "2020-02-14T00:52:06.608Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
  "message" : "Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$9c4ebe38] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)",
  "context" : "default"
}{
  "timestamp" : "2020-02-14T00:52:07.048Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.springframework.boot.web.embedded.tomcat.TomcatWebServer",
  "message" : "Tomcat initialized with port(s): 8080 (http)",
  "context" : "default"
}{
  "timestamp" : "2020-02-14T00:52:07.073Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.apache.coyote.http11.Http11NioProtocol",
  "message" : "Initializing ProtocolHandler [\"http-nio-8080\"]",
  "context" : "default"
}{
  "timestamp" : "2020-02-14T00:52:07.098Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.apache.catalina.core.StandardService",
  "message" : "Starting service [Tomcat]",
  "context" : "default"
}{
  "timestamp" : "2020-02-14T00:52:07.098Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.apache.catalina.core.StandardEngine",
  "message" : "Starting Servlet engine: [Apache Tomcat/9.0.22]",
  "context" : "default"
}{
  "timestamp" : "2020-02-14T00:52:07.278Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]",
  "message" : "Initializing Spring embedded WebApplicationContext",
  "context" : "default"
}{
  "timestamp" : "2020-02-14T00:52:07.278Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.springframework.web.context.ContextLoader",
  "message" : "Root WebApplicationContext: initialization completed in 1845 ms",
  "context" : "default"
}{
  "timestamp" : "2020-02-14T00:52:07.370Z",
  "level" : "DEBUG",
  "thread" : "main",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "Filter 'logFilter' configured for use",
  "context" : "default"
}{
  "timestamp" : "2020-02-14T00:52:07.573Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "com.zaxxer.hikari.HikariDataSource",
  "message" : "HikariPool-1 - Starting...",
  "context" : "default"
}{
  "timestamp" : "2020-02-14T00:52:07.780Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "com.zaxxer.hikari.HikariDataSource",
  "message" : "HikariPool-1 - Start completed.",
  "context" : "default"
}{
  "timestamp" : "2020-02-14T00:52:07.865Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.hibernate.jpa.internal.util.LogHelper",
  "message" : "HHH000204: Processing PersistenceUnitInfo [\n\tname: default\n\t...]",
  "context" : "default"
}{
  "timestamp" : "2020-02-14T00:52:07.969Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.hibernate.Version",
  "message" : "HHH000412: Hibernate Core {5.3.10.Final}",
  "context" : "default"
}{
  "timestamp" : "2020-02-14T00:52:07.969Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.hibernate.cfg.Environment",
  "message" : "HHH000206: hibernate.properties not found",
  "context" : "default"
}{
  "timestamp" : "2020-02-14T00:52:08.148Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.hibernate.annotations.common.Version",
  "message" : "HCANN000001: Hibernate Commons Annotations {5.0.4.Final}",
  "context" : "default"
}{
  "timestamp" : "2020-02-14T00:52:08.348Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.hibernate.dialect.Dialect",
  "message" : "HHH000400: Using dialect: org.hibernate.dialect.H2Dialect",
  "context" : "default"
}{
  "timestamp" : "2020-02-14T00:52:08.628Z",
  "level" : "WARN",
  "thread" : "main",
  "logger" : "org.hibernate.mapping.RootClass",
  "message" : "HHH000038: Composite-id class does not override equals(): br.com.arthur.implementacaoh2.entities.ContaRepasseId",
  "context" : "default"
}{
  "timestamp" : "2020-02-14T00:52:08.628Z",
  "level" : "WARN",
  "thread" : "main",
  "logger" : "org.hibernate.mapping.RootClass",
  "message" : "HHH000039: Composite-id class does not override hashCode(): br.com.arthur.implementacaoh2.entities.ContaRepasseId",
  "context" : "default"
}{
  "timestamp" : "2020-02-14T00:52:09.165Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.hibernate.tool.schema.internal.SchemaCreatorImpl",
  "message" : "HHH000476: Executing import script 'org.hibernate.tool.schema.internal.exec.ScriptSourceInputNonExistentImpl@24691c5'",
  "context" : "default"
}{
  "timestamp" : "2020-02-14T00:52:09.168Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean",
  "message" : "Initialized JPA EntityManagerFactory for persistence unit 'default'",
  "context" : "default"
}{
  "timestamp" : "2020-02-14T00:52:09.523Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.hibernate.hql.internal.QueryTranslatorFactoryInitiator",
  "message" : "HHH000397: Using ASTQueryTranslatorFactory",
  "context" : "default"
}{
  "timestamp" : "2020-02-14T00:52:10.198Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor",
  "message" : "Initializing ExecutorService 'applicationTaskExecutor'",
  "context" : "default"
}{
  "timestamp" : "2020-02-14T00:52:10.252Z",
  "level" : "WARN",
  "thread" : "main",
  "logger" : "org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration$JpaWebMvcConfiguration",
  "message" : "spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning",
  "context" : "default"
}{
  "timestamp" : "2020-02-14T00:52:10.448Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.apache.coyote.http11.Http11NioProtocol",
  "message" : "Starting ProtocolHandler [\"http-nio-8080\"]",
  "context" : "default"
}{
  "timestamp" : "2020-02-14T00:52:10.468Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.springframework.boot.web.embedded.tomcat.TomcatWebServer",
  "message" : "Tomcat started on port(s): 8080 (http) with context path ''",
  "context" : "default"
}{
  "timestamp" : "2020-02-14T00:52:10.468Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "br.com.arthur.implementacaoh2.App",
  "message" : "Started App in 5.435 seconds (JVM running for 6.141)",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T01:30:04.194Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "br.com.arthur.implementacaoh2.App",
  "message" : "Starting App on DESKTOP-JGRRF34 with PID 12028 (C:\\Users\\nakag\\Documents\\workspace-spring-tool-suite-4-4.3.2.RELEASE\\implementacaoh2\\target\\classes started by nakag in C:\\Users\\nakag\\Documents\\workspace-spring-tool-suite-4-4.3.2.RELEASE\\implementacaoh2)",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T01:30:04.214Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "br.com.arthur.implementacaoh2.App",
  "message" : "No active profile set, falling back to default profiles: default",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T01:30:05.015Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.springframework.data.repository.config.RepositoryConfigurationDelegate",
  "message" : "Bootstrapping Spring Data repositories in DEFAULT mode.",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T01:30:05.106Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.springframework.data.repository.config.RepositoryConfigurationDelegate",
  "message" : "Finished Spring Data repository scanning in 80ms. Found 6 repository interfaces.",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T01:30:05.416Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
  "message" : "Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$731dd509] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T01:30:05.934Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.springframework.boot.web.embedded.tomcat.TomcatWebServer",
  "message" : "Tomcat initialized with port(s): 8080 (http)",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T01:30:05.951Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.apache.coyote.http11.Http11NioProtocol",
  "message" : "Initializing ProtocolHandler [\"http-nio-8080\"]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T01:30:05.964Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.apache.catalina.core.StandardService",
  "message" : "Starting service [Tomcat]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T01:30:05.964Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.apache.catalina.core.StandardEngine",
  "message" : "Starting Servlet engine: [Apache Tomcat/9.0.22]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T01:30:06.089Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]",
  "message" : "Initializing Spring embedded WebApplicationContext",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T01:30:06.089Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.springframework.web.context.ContextLoader",
  "message" : "Root WebApplicationContext: initialization completed in 1828 ms",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T01:30:06.170Z",
  "level" : "DEBUG",
  "thread" : "main",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "Filter 'logFilter' configured for use",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T01:30:06.334Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "com.zaxxer.hikari.HikariDataSource",
  "message" : "HikariPool-1 - Starting...",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T01:30:06.501Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "com.zaxxer.hikari.HikariDataSource",
  "message" : "HikariPool-1 - Start completed.",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T01:30:06.579Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.hibernate.jpa.internal.util.LogHelper",
  "message" : "HHH000204: Processing PersistenceUnitInfo [\n\tname: default\n\t...]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T01:30:06.784Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.hibernate.Version",
  "message" : "HHH000412: Hibernate Core {5.3.10.Final}",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T01:30:06.785Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.hibernate.cfg.Environment",
  "message" : "HHH000206: hibernate.properties not found",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T01:30:06.974Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.hibernate.annotations.common.Version",
  "message" : "HCANN000001: Hibernate Commons Annotations {5.0.4.Final}",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T01:30:07.176Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.hibernate.dialect.Dialect",
  "message" : "HHH000400: Using dialect: org.hibernate.dialect.H2Dialect",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T01:30:07.480Z",
  "level" : "WARN",
  "thread" : "main",
  "logger" : "org.hibernate.mapping.RootClass",
  "message" : "HHH000038: Composite-id class does not override equals(): br.com.arthur.implementacaoh2.entities.ContaRepasseId",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T01:30:07.481Z",
  "level" : "WARN",
  "thread" : "main",
  "logger" : "org.hibernate.mapping.RootClass",
  "message" : "HHH000039: Composite-id class does not override hashCode(): br.com.arthur.implementacaoh2.entities.ContaRepasseId",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T01:30:08.016Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.hibernate.tool.schema.internal.SchemaCreatorImpl",
  "message" : "HHH000476: Executing import script 'org.hibernate.tool.schema.internal.exec.ScriptSourceInputNonExistentImpl@1aedf08d'",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T01:30:08.018Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean",
  "message" : "Initialized JPA EntityManagerFactory for persistence unit 'default'",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T01:30:08.322Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.hibernate.hql.internal.QueryTranslatorFactoryInitiator",
  "message" : "HHH000397: Using ASTQueryTranslatorFactory",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T01:30:08.941Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor",
  "message" : "Initializing ExecutorService 'applicationTaskExecutor'",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T01:30:08.988Z",
  "level" : "WARN",
  "thread" : "main",
  "logger" : "org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration$JpaWebMvcConfiguration",
  "message" : "spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T01:30:09.187Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.apache.coyote.http11.Http11NioProtocol",
  "message" : "Starting ProtocolHandler [\"http-nio-8080\"]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T01:30:09.217Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.springframework.boot.web.embedded.tomcat.TomcatWebServer",
  "message" : "Tomcat started on port(s): 8080 (http) with context path ''",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T01:30:09.220Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "br.com.arthur.implementacaoh2.App",
  "message" : "Started App in 5.355 seconds (JVM running for 6.084)",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T01:30:12.279Z",
  "level" : "INFO",
  "thread" : "http-nio-8080-exec-2",
  "logger" : "org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]",
  "message" : "Initializing Spring DispatcherServlet 'dispatcherServlet'",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T01:30:12.280Z",
  "level" : "INFO",
  "thread" : "http-nio-8080-exec-2",
  "logger" : "org.springframework.web.servlet.DispatcherServlet",
  "message" : "Initializing Servlet 'dispatcherServlet'",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T01:30:12.287Z",
  "level" : "INFO",
  "thread" : "http-nio-8080-exec-2",
  "logger" : "org.springframework.web.servlet.DispatcherServlet",
  "message" : "Completed initialization in 7 ms",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T01:30:12.303Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-2",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "Before request [uri=/acordos_comerciais]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T01:30:12.700Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-2",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "After request [uri=/acordos_comerciais;payload={\n    \"id_acordo_comercial\": 1,\n    \"id_versao_acordo_comercial\": 1,\n    \"id_parceiro\": 1,\n    \"id_produto\": 1,\n    \"situacao\": \"ativo\",\n    \"data_inicio_vigencia\": \"2020-12-01\",\n    \"vigencia_indeterminada\": false,\n    \"data_fim_vigencia\": \"2020-12-02\",\n    \"configuracoes_canal\": [\n        {\n            \"id_canal\": \"C1\"\n        },\n        {\n            \"id_canal\": \"71\"\n        }\n    ],\n    \"contas_repasse\": [\n        {\n            \"id_conta\": 1,\n            \"codigo_finalidade_spb\": \"12345\",\n            \"percentual_raterio\": 50\n        },\n        {\n            \"id_conta\": 2,\n            \"codigo_finalidade_spb\": \"12345\",\n            \"percentual_raterio\": 50\n        }\n    ]\n}]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T01:30:20.833Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-3",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "Before request [uri=/acordos_comerciais]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T01:30:20.849Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-3",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "After request [uri=/acordos_comerciais;payload={\n    \"id_acordo_comercial\": 1,\n    \"id_versao_acordo_comercial\": 2,\n    \"id_parceiro\": 1,\n    \"id_produto\": 1,\n    \"situacao\": \"ativo\",\n    \"data_inicio_vigencia\": \"2020-12-01\",\n    \"vigencia_indeterminada\": false,\n    \"data_fim_vigencia\": \"2020-12-02\",\n    \"configuracoes_canal\": [\n        {\n            \"id_canal\": \"C1\"\n        },\n        {\n            \"id_canal\": \"71\"\n        }\n    ],\n    \"contas_repasse\": [\n        {\n            \"id_conta\": 1,\n            \"codigo_finalidade_spb\": \"12345\",\n            \"percentual_raterio\": 50\n        },\n        {\n            \"id_conta\": 2,\n            \"codigo_finalidade_spb\": \"12345\",\n            \"percentual_raterio\": 50\n        }\n    ]\n}]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T01:30:28.259Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-4",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "Before request [uri=/h2-console]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T01:30:28.260Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-4",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "After request [uri=/h2-console]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T01:30:28.263Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-5",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "Before request [uri=/h2-console/]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T01:30:28.282Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-5",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "After request [uri=/h2-console/]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T01:30:28.313Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-6",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "Before request [uri=/h2-console/stylesheet.css]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T01:30:28.317Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-6",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "After request [uri=/h2-console/stylesheet.css]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T01:30:28.326Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-7",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "Before request [uri=/h2-console/login.jsp?jsessionid=d5b21a4075267d9e882115c2df858875]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T01:30:28.330Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-7",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "After request [uri=/h2-console/login.jsp?jsessionid=d5b21a4075267d9e882115c2df858875]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T01:30:28.345Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-8",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "Before request [uri=/h2-console/background.gif]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T01:30:28.348Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-8",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "After request [uri=/h2-console/background.gif]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T01:30:28.415Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-9",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "Before request [uri=/favicon.ico]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T01:30:28.437Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-9",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "After request [uri=/favicon.ico]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T01:30:29.861Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-10",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "Before request [uri=/h2-console/login.do?jsessionid=d5b21a4075267d9e882115c2df858875]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T01:30:29.869Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-10",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "After request [uri=/h2-console/login.do?jsessionid=d5b21a4075267d9e882115c2df858875;payload=jsessionid=d5b21a4075267d9e882115c2df858875&language=en&setting=Generic+H2+%28Embedded%29&name=Generic+H2+%28Embedded%29&driver=org.h2.Driver&url=jdbc%3Ah2%3Amem%3Atestdb&user=sa&password=password]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T01:30:29.889Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-1",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "Before request [uri=/h2-console/header.jsp?jsessionid=d5b21a4075267d9e882115c2df858875]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T01:30:29.892Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-2",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "Before request [uri=/h2-console/tables.do?jsessionid=d5b21a4075267d9e882115c2df858875]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T01:30:29.894Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-3",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "Before request [uri=/h2-console/query.jsp?jsessionid=d5b21a4075267d9e882115c2df858875]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T01:30:29.894Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-4",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "Before request [uri=/h2-console/help.jsp?jsessionid=d5b21a4075267d9e882115c2df858875]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T01:30:29.894Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-1",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "After request [uri=/h2-console/header.jsp?jsessionid=d5b21a4075267d9e882115c2df858875]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T01:30:29.897Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-4",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "After request [uri=/h2-console/help.jsp?jsessionid=d5b21a4075267d9e882115c2df858875]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T01:30:29.900Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-3",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "After request [uri=/h2-console/query.jsp?jsessionid=d5b21a4075267d9e882115c2df858875]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T01:30:29.917Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-5",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "Before request [uri=/h2-console/icon_disconnect.gif]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T01:30:29.918Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-6",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "Before request [uri=/h2-console/icon_line.gif]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T01:30:29.923Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-8",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "Before request [uri=/h2-console/icon_rollback.gif]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T01:30:29.923Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-7",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "Before request [uri=/h2-console/icon_refresh.gif]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T01:30:29.925Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-5",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "After request [uri=/h2-console/icon_disconnect.gif]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T01:30:29.925Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-6",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "After request [uri=/h2-console/icon_line.gif]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T01:30:29.928Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-9",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "Before request [uri=/h2-console/icon_commit.gif]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T01:30:29.929Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-8",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "After request [uri=/h2-console/icon_rollback.gif]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T01:30:29.930Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-7",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "After request [uri=/h2-console/icon_refresh.gif]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T01:30:29.931Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-10",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "Before request [uri=/h2-console/icon_run.gif]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T01:30:29.932Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-9",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "After request [uri=/h2-console/icon_commit.gif]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T01:30:29.935Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-1",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "Before request [uri=/h2-console/icon_run_selected.gif]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T01:30:29.937Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-10",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "After request [uri=/h2-console/icon_run.gif]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T01:30:29.939Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-4",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "Before request [uri=/h2-console/icon_stop.gif]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T01:30:29.942Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-3",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "Before request [uri=/h2-console/icon_history.gif]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T01:30:29.942Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-5",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "Before request [uri=/h2-console/icon_help.gif]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T01:30:29.942Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-1",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "After request [uri=/h2-console/icon_run_selected.gif]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T01:30:29.944Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-4",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "After request [uri=/h2-console/icon_stop.gif]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T01:30:29.946Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-5",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "After request [uri=/h2-console/icon_help.gif]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T01:30:29.947Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-3",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "After request [uri=/h2-console/icon_history.gif]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T01:30:29.999Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-2",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "After request [uri=/h2-console/tables.do?jsessionid=d5b21a4075267d9e882115c2df858875]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T01:30:30.014Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-6",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "Before request [uri=/h2-console/tree.js]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T01:30:30.017Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-6",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "After request [uri=/h2-console/tree.js]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T01:30:30.030Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-8",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "Before request [uri=/h2-console/tree_minus.gif]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T01:30:30.030Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-7",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "Before request [uri=/h2-console/tree_plus.gif]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T01:30:30.031Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-9",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "Before request [uri=/h2-console/tree_database.gif]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T01:30:30.032Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-1",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "Before request [uri=/h2-console/tree_empty.gif]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T01:30:30.032Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-10",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "Before request [uri=/h2-console/tree_table.gif]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T01:30:30.032Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-4",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "Before request [uri=/h2-console/tree_column.gif]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T01:30:30.035Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-7",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "After request [uri=/h2-console/tree_plus.gif]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T01:30:30.035Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-8",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "After request [uri=/h2-console/tree_minus.gif]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T01:30:30.036Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-10",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "After request [uri=/h2-console/tree_table.gif]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T01:30:30.036Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-9",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "After request [uri=/h2-console/tree_database.gif]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T01:30:30.039Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-4",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "After request [uri=/h2-console/tree_column.gif]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T01:30:30.039Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-1",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "After request [uri=/h2-console/tree_empty.gif]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T01:30:30.040Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-4",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "Before request [uri=/h2-console/tree_type.gif]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T01:30:30.042Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-1",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "Before request [uri=/h2-console/tree_index_az.gif]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T01:30:30.044Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-5",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "Before request [uri=/h2-console/tree_index.gif]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T01:30:30.044Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-4",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "After request [uri=/h2-console/tree_type.gif]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T01:30:30.046Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-1",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "After request [uri=/h2-console/tree_index_az.gif]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T01:30:30.047Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-5",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "After request [uri=/h2-console/tree_index.gif]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T01:30:30.066Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-6",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "Before request [uri=/h2-console/tree_folder.gif]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T01:30:30.070Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-8",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "Before request [uri=/h2-console/tree_user.gif]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T01:30:30.071Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-7",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "Before request [uri=/h2-console/tree_users.gif]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T01:30:30.073Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-10",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "Before request [uri=/h2-console/tree_info.gif]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T01:30:30.075Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-6",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "After request [uri=/h2-console/tree_folder.gif]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T01:30:30.077Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-8",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "After request [uri=/h2-console/tree_user.gif]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T01:30:30.077Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-10",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "After request [uri=/h2-console/tree_info.gif]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T01:30:30.079Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-7",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "After request [uri=/h2-console/tree_users.gif]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T01:30:32.878Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-9",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "Before request [uri=/h2-console/query.do?jsessionid=d5b21a4075267d9e882115c2df858875]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T01:30:32.886Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-9",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "After request [uri=/h2-console/query.do?jsessionid=d5b21a4075267d9e882115c2df858875;payload=jsessionid=d5b21a4075267d9e882115c2df858875&sql=SELECT+*+FROM+ACORDO_COMERCIAL+]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T01:30:32.900Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-3",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "Before request [uri=/h2-console/table.js]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T01:30:32.905Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-3",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "After request [uri=/h2-console/table.js]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:07:25.760Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "br.com.arthur.implementacaoh2.App",
  "message" : "Starting App on DESKTOP-JGRRF34 with PID 1420 (C:\\Users\\nakag\\Documents\\workspace-spring-tool-suite-4-4.3.2.RELEASE\\implementacaoh2\\target\\classes started by nakag in C:\\Users\\nakag\\Documents\\workspace-spring-tool-suite-4-4.3.2.RELEASE\\implementacaoh2)",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:07:25.776Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "br.com.arthur.implementacaoh2.App",
  "message" : "No active profile set, falling back to default profiles: default",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:07:26.355Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.springframework.data.repository.config.RepositoryConfigurationDelegate",
  "message" : "Bootstrapping Spring Data repositories in DEFAULT mode.",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:07:26.451Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.springframework.data.repository.config.RepositoryConfigurationDelegate",
  "message" : "Finished Spring Data repository scanning in 89ms. Found 6 repository interfaces.",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:07:26.783Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
  "message" : "Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$587b0ccf] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:07:27.262Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.springframework.boot.web.embedded.tomcat.TomcatWebServer",
  "message" : "Tomcat initialized with port(s): 8080 (http)",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:07:27.277Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.apache.coyote.http11.Http11NioProtocol",
  "message" : "Initializing ProtocolHandler [\"http-nio-8080\"]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:07:27.286Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.apache.catalina.core.StandardService",
  "message" : "Starting service [Tomcat]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:07:27.287Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.apache.catalina.core.StandardEngine",
  "message" : "Starting Servlet engine: [Apache Tomcat/9.0.22]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:07:27.394Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]",
  "message" : "Initializing Spring embedded WebApplicationContext",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:07:27.394Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.springframework.web.context.ContextLoader",
  "message" : "Root WebApplicationContext: initialization completed in 1582 ms",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:07:27.454Z",
  "level" : "DEBUG",
  "thread" : "main",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "Filter 'logFilter' configured for use",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:07:27.608Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "com.zaxxer.hikari.HikariDataSource",
  "message" : "HikariPool-1 - Starting...",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:07:27.781Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "com.zaxxer.hikari.HikariDataSource",
  "message" : "HikariPool-1 - Start completed.",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:07:27.852Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.hibernate.jpa.internal.util.LogHelper",
  "message" : "HHH000204: Processing PersistenceUnitInfo [\n\tname: default\n\t...]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:07:27.922Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.hibernate.Version",
  "message" : "HHH000412: Hibernate Core {5.3.10.Final}",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:07:27.923Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.hibernate.cfg.Environment",
  "message" : "HHH000206: hibernate.properties not found",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:07:28.073Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.hibernate.annotations.common.Version",
  "message" : "HCANN000001: Hibernate Commons Annotations {5.0.4.Final}",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:07:28.219Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.hibernate.dialect.Dialect",
  "message" : "HHH000400: Using dialect: org.hibernate.dialect.H2Dialect",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:07:28.465Z",
  "level" : "WARN",
  "thread" : "main",
  "logger" : "org.hibernate.mapping.RootClass",
  "message" : "HHH000038: Composite-id class does not override equals(): br.com.arthur.implementacaoh2.entities.ContaRepasseId",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:07:28.465Z",
  "level" : "WARN",
  "thread" : "main",
  "logger" : "org.hibernate.mapping.RootClass",
  "message" : "HHH000039: Composite-id class does not override hashCode(): br.com.arthur.implementacaoh2.entities.ContaRepasseId",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:07:28.945Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.hibernate.tool.schema.internal.SchemaCreatorImpl",
  "message" : "HHH000476: Executing import script 'org.hibernate.tool.schema.internal.exec.ScriptSourceInputNonExistentImpl@13e00016'",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:07:28.948Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean",
  "message" : "Initialized JPA EntityManagerFactory for persistence unit 'default'",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:07:29.240Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.hibernate.hql.internal.QueryTranslatorFactoryInitiator",
  "message" : "HHH000397: Using ASTQueryTranslatorFactory",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:07:29.870Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor",
  "message" : "Initializing ExecutorService 'applicationTaskExecutor'",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:07:29.923Z",
  "level" : "WARN",
  "thread" : "main",
  "logger" : "org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration$JpaWebMvcConfiguration",
  "message" : "spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:07:30.136Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.apache.coyote.http11.Http11NioProtocol",
  "message" : "Starting ProtocolHandler [\"http-nio-8080\"]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:07:30.156Z",
  "level" : "ERROR",
  "thread" : "main",
  "logger" : "org.apache.catalina.util.LifecycleBase",
  "message" : "Failed to start component [Connector[HTTP/1.1-8080]]",
  "context" : "default",
  "exception" : "org.apache.catalina.LifecycleException: Protocol handler start failed\r\n\tat org.apache.catalina.connector.Connector.startInternal(Connector.java:1008)\r\n\tat org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)\r\n\tat org.apache.catalina.core.StandardService.addConnector(StandardService.java:227)\r\n\tat org.springframework.boot.web.embedded.tomcat.TomcatWebServer.addPreviouslyRemovedConnectors(TomcatWebServer.java:263)\r\n\tat org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:195)\r\n\tat org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.startWebServer(ServletWebServerApplicationContext.java:297)\r\n\tat org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.finishRefresh(ServletWebServerApplicationContext.java:163)\r\n\tat org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:552)\r\n\tat org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141)\r\n\tat org.springframework.boot.SpringApplication.refresh(SpringApplication.java:743)\r\n\tat org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:390)\r\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:312)\r\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:1214)\r\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:1203)\r\n\tat br.com.arthur.implementacaoh2.App.main(App.java:10)\r\nCaused by: java.net.BindException: Address already in use: bind\r\n\tat sun.nio.ch.Net.bind0(Native Method)\r\n\tat sun.nio.ch.Net.bind(Net.java:433)\r\n\tat sun.nio.ch.Net.bind(Net.java:425)\r\n\tat sun.nio.ch.ServerSocketChannelImpl.bind(ServerSocketChannelImpl.java:223)\r\n\tat sun.nio.ch.ServerSocketAdaptor.bind(ServerSocketAdaptor.java:74)\r\n\tat org.apache.tomcat.util.net.NioEndpoint.initServerSocket(NioEndpoint.java:230)\r\n\tat org.apache.tomcat.util.net.NioEndpoint.bind(NioEndpoint.java:213)\r\n\tat org.apache.tomcat.util.net.AbstractEndpoint.bindWithCleanup(AbstractEndpoint.java:1124)\r\n\tat org.apache.tomcat.util.net.AbstractEndpoint.start(AbstractEndpoint.java:1210)\r\n\tat org.apache.coyote.AbstractProtocol.start(AbstractProtocol.java:585)\r\n\tat org.apache.catalina.connector.Connector.startInternal(Connector.java:1005)\r\n\t... 14 common frames omitted\r\n"
}{
  "timestamp" : "2020-03-12T02:07:30.162Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.apache.coyote.http11.Http11NioProtocol",
  "message" : "Pausing ProtocolHandler [\"http-nio-8080\"]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:07:30.162Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.apache.catalina.core.StandardService",
  "message" : "Stopping service [Tomcat]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:07:30.168Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.apache.catalina.util.LifecycleBase",
  "message" : "The stop() method was called on component [StandardServer[-1]] after stop() had already been called. The second call will be ignored.",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:07:30.168Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.apache.coyote.http11.Http11NioProtocol",
  "message" : "Stopping ProtocolHandler [\"http-nio-8080\"]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:07:30.169Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.apache.coyote.http11.Http11NioProtocol",
  "message" : "Destroying ProtocolHandler [\"http-nio-8080\"]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:07:30.171Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener",
  "message" : "\r\n\r\nError starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:07:30.173Z",
  "level" : "ERROR",
  "thread" : "main",
  "logger" : "org.springframework.boot.diagnostics.LoggingFailureAnalysisReporter",
  "message" : "\r\n\r\n***************************\r\nAPPLICATION FAILED TO START\r\n***************************\r\n\r\nDescription:\r\n\r\nThe Tomcat connector configured to listen on port 8080 failed to start. The port may already be in use or the connector may be misconfigured.\r\n\r\nAction:\r\n\r\nVerify the connector's configuration, identify and stop any process that's listening on port 8080, or configure this application to listen on another port.\r\n",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:07:30.176Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor",
  "message" : "Shutting down ExecutorService 'applicationTaskExecutor'",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:07:30.177Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean",
  "message" : "Closing JPA EntityManagerFactory for persistence unit 'default'",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:07:30.178Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl",
  "message" : "HHH000477: Starting delayed evictData of schema as part of SessionFactory shut-down'",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:07:30.188Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "com.zaxxer.hikari.HikariDataSource",
  "message" : "HikariPool-1 - Shutdown initiated...",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:07:30.190Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "com.zaxxer.hikari.HikariDataSource",
  "message" : "HikariPool-1 - Shutdown completed.",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:07:41.331Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "br.com.arthur.implementacaoh2.App",
  "message" : "Starting App on DESKTOP-JGRRF34 with PID 2828 (C:\\Users\\nakag\\Documents\\workspace-spring-tool-suite-4-4.3.2.RELEASE\\implementacaoh2\\target\\classes started by nakag in C:\\Users\\nakag\\Documents\\workspace-spring-tool-suite-4-4.3.2.RELEASE\\implementacaoh2)",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:07:41.347Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "br.com.arthur.implementacaoh2.App",
  "message" : "No active profile set, falling back to default profiles: default",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:07:41.949Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.springframework.data.repository.config.RepositoryConfigurationDelegate",
  "message" : "Bootstrapping Spring Data repositories in DEFAULT mode.",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:07:42.041Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.springframework.data.repository.config.RepositoryConfigurationDelegate",
  "message" : "Finished Spring Data repository scanning in 85ms. Found 6 repository interfaces.",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:07:42.360Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
  "message" : "Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$7901f927] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:07:42.825Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.springframework.boot.web.embedded.tomcat.TomcatWebServer",
  "message" : "Tomcat initialized with port(s): 8080 (http)",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:07:42.839Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.apache.coyote.http11.Http11NioProtocol",
  "message" : "Initializing ProtocolHandler [\"http-nio-8080\"]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:07:42.851Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.apache.catalina.core.StandardService",
  "message" : "Starting service [Tomcat]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:07:42.851Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.apache.catalina.core.StandardEngine",
  "message" : "Starting Servlet engine: [Apache Tomcat/9.0.22]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:07:42.967Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]",
  "message" : "Initializing Spring embedded WebApplicationContext",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:07:42.967Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.springframework.web.context.ContextLoader",
  "message" : "Root WebApplicationContext: initialization completed in 1582 ms",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:07:43.035Z",
  "level" : "DEBUG",
  "thread" : "main",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "Filter 'logFilter' configured for use",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:07:43.176Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "com.zaxxer.hikari.HikariDataSource",
  "message" : "HikariPool-1 - Starting...",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:07:43.321Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "com.zaxxer.hikari.HikariDataSource",
  "message" : "HikariPool-1 - Start completed.",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:07:43.388Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.hibernate.jpa.internal.util.LogHelper",
  "message" : "HHH000204: Processing PersistenceUnitInfo [\n\tname: default\n\t...]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:07:43.459Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.hibernate.Version",
  "message" : "HHH000412: Hibernate Core {5.3.10.Final}",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:07:43.461Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.hibernate.cfg.Environment",
  "message" : "HHH000206: hibernate.properties not found",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:07:43.596Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.hibernate.annotations.common.Version",
  "message" : "HCANN000001: Hibernate Commons Annotations {5.0.4.Final}",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:07:43.749Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.hibernate.dialect.Dialect",
  "message" : "HHH000400: Using dialect: org.hibernate.dialect.H2Dialect",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:07:43.995Z",
  "level" : "WARN",
  "thread" : "main",
  "logger" : "org.hibernate.mapping.RootClass",
  "message" : "HHH000038: Composite-id class does not override equals(): br.com.arthur.implementacaoh2.entities.ContaRepasseId",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:07:43.995Z",
  "level" : "WARN",
  "thread" : "main",
  "logger" : "org.hibernate.mapping.RootClass",
  "message" : "HHH000039: Composite-id class does not override hashCode(): br.com.arthur.implementacaoh2.entities.ContaRepasseId",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:07:44.467Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.hibernate.tool.schema.internal.SchemaCreatorImpl",
  "message" : "HHH000476: Executing import script 'org.hibernate.tool.schema.internal.exec.ScriptSourceInputNonExistentImpl@72b2c5ed'",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:07:44.469Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean",
  "message" : "Initialized JPA EntityManagerFactory for persistence unit 'default'",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:07:44.744Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.hibernate.hql.internal.QueryTranslatorFactoryInitiator",
  "message" : "HHH000397: Using ASTQueryTranslatorFactory",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:07:45.361Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor",
  "message" : "Initializing ExecutorService 'applicationTaskExecutor'",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:07:45.408Z",
  "level" : "WARN",
  "thread" : "main",
  "logger" : "org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration$JpaWebMvcConfiguration",
  "message" : "spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:07:45.571Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.apache.coyote.http11.Http11NioProtocol",
  "message" : "Starting ProtocolHandler [\"http-nio-8080\"]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:07:45.595Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.springframework.boot.web.embedded.tomcat.TomcatWebServer",
  "message" : "Tomcat started on port(s): 8080 (http) with context path ''",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:07:45.597Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "br.com.arthur.implementacaoh2.App",
  "message" : "Started App in 4.536 seconds (JVM running for 5.091)",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:07:55.386Z",
  "level" : "INFO",
  "thread" : "http-nio-8080-exec-1",
  "logger" : "org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]",
  "message" : "Initializing Spring DispatcherServlet 'dispatcherServlet'",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:07:55.386Z",
  "level" : "INFO",
  "thread" : "http-nio-8080-exec-1",
  "logger" : "org.springframework.web.servlet.DispatcherServlet",
  "message" : "Initializing Servlet 'dispatcherServlet'",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:07:55.394Z",
  "level" : "INFO",
  "thread" : "http-nio-8080-exec-1",
  "logger" : "org.springframework.web.servlet.DispatcherServlet",
  "message" : "Completed initialization in 8 ms",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:07:55.405Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-1",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "Before request [uri=/acordos_comerciais]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:07:55.675Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-1",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "After request [uri=/acordos_comerciais;payload={\n    \"id_acordo_comercial\": 1,\n    \"id_versao_acordo_comercial\": 2,\n    \"id_parceiro\": 1,\n    \"id_produto\": 1,\n    \"situacao\": \"ativo\",\n    \"data_inicio_vigencia\": \"2020-12-01\",\n    \"vigencia_indeterminada\": false,\n    \"data_fim_vigencia\": \"2020-12-02\",\n    \"configuracoes_canal\": [\n        {\n            \"id_canal\": \"C1\"\n        },\n        {\n            \"id_canal\": \"71\"\n        }\n    ],\n    \"contas_repasse\": [\n        {\n            \"id_conta\": 1,\n            \"codigo_finalidade_spb\": \"12345\",\n            \"percentual_raterio\": 50\n        },\n        {\n            \"id_conta\": 2,\n            \"codigo_finalidade_spb\": \"12345\",\n            \"percentual_raterio\": 50\n        }\n    ]\n}]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:08:01.059Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-3",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "Before request [uri=/acordos_comerciais]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:08:01.073Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-3",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "After request [uri=/acordos_comerciais;payload={\n    \"id_acordo_comercial\": 1,\n    \"id_versao_acordo_comercial\": 3,\n    \"id_parceiro\": 1,\n    \"id_produto\": 1,\n    \"situacao\": \"ativo\",\n    \"data_inicio_vigencia\": \"2020-12-01\",\n    \"vigencia_indeterminada\": false,\n    \"data_fim_vigencia\": \"2020-12-02\",\n    \"configuracoes_canal\": [\n        {\n            \"id_canal\": \"C1\"\n        },\n        {\n            \"id_canal\": \"71\"\n        }\n    ],\n    \"contas_repasse\": [\n        {\n            \"id_conta\": 1,\n            \"codigo_finalidade_spb\": \"12345\",\n            \"percentual_raterio\": 50\n        },\n        {\n            \"id_conta\": 2,\n            \"codigo_finalidade_spb\": \"12345\",\n            \"percentual_raterio\": 50\n        }\n    ]\n}]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:08:15.714Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-4",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "Before request [uri=/acordos_comerciais]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:08:15.730Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-4",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "After request [uri=/acordos_comerciais]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:08:15.733Z",
  "level" : "ERROR",
  "thread" : "http-nio-8080-exec-4",
  "logger" : "org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]",
  "message" : "Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.RuntimeException] with root cause",
  "context" : "default",
  "exception" : "java.lang.RuntimeException: null\r\n\tat br.com.arthur.implementacaoh2.services.AcordoComercialRepositoryImpl.lambda$0(AcordoComercialRepositoryImpl.java:26)\r\n\tat java.util.Optional.orElseThrow(Optional.java:290)\r\n\tat br.com.arthur.implementacaoh2.services.AcordoComercialRepositoryImpl.consultaAcordoComercial(AcordoComercialRepositoryImpl.java:26)\r\n\tat br.com.arthur.implementacaoh2.services.AcordoComercialRepositoryImpl$$FastClassBySpringCGLIB$$96d08d3b.invoke(<generated>)\r\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\r\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\r\n\tat org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\r\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)\r\n\tat br.com.arthur.implementacaoh2.services.AcordoComercialRepositoryImpl$$EnhancerBySpringCGLIB$$caf279ce.consultaAcordoComercial(<generated>)\r\n\tat br.com.arthur.implementacaoh2.entrypoints.AcordosComerciaisController.consulta(AcordosComerciaisController.java:34)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)\r\n\tat org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)\r\n\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)\r\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)\r\n\tat org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:897)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:634)\r\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:741)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.web.filter.AbstractRequestLoggingFilter.doFilterInternal(AbstractRequestLoggingFilter.java:262)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)\r\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)\r\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)\r\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)\r\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\r\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)\r\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)\r\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)\r\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)\r\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)\r\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)\r\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"
}{
  "timestamp" : "2020-03-12T02:08:55.312Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-5",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "Before request [uri=/acordos_comerciais]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:08:55.321Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-5",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "After request [uri=/acordos_comerciais]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:08:55.323Z",
  "level" : "ERROR",
  "thread" : "http-nio-8080-exec-5",
  "logger" : "org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]",
  "message" : "Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.RuntimeException] with root cause",
  "context" : "default",
  "exception" : "java.lang.RuntimeException: null\r\n\tat br.com.arthur.implementacaoh2.services.AcordoComercialRepositoryImpl.lambda$0(AcordoComercialRepositoryImpl.java:26)\r\n\tat java.util.Optional.orElseThrow(Optional.java:290)\r\n\tat br.com.arthur.implementacaoh2.services.AcordoComercialRepositoryImpl.consultaAcordoComercial(AcordoComercialRepositoryImpl.java:26)\r\n\tat br.com.arthur.implementacaoh2.services.AcordoComercialRepositoryImpl$$FastClassBySpringCGLIB$$96d08d3b.invoke(<generated>)\r\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\r\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\r\n\tat org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\r\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)\r\n\tat br.com.arthur.implementacaoh2.services.AcordoComercialRepositoryImpl$$EnhancerBySpringCGLIB$$caf279ce.consultaAcordoComercial(<generated>)\r\n\tat br.com.arthur.implementacaoh2.entrypoints.AcordosComerciaisController.consulta(AcordosComerciaisController.java:34)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)\r\n\tat org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)\r\n\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)\r\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)\r\n\tat org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:897)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:634)\r\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:741)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.web.filter.AbstractRequestLoggingFilter.doFilterInternal(AbstractRequestLoggingFilter.java:262)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)\r\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)\r\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)\r\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)\r\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\r\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)\r\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)\r\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)\r\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)\r\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)\r\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)\r\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"
}{
  "timestamp" : "2020-03-12T02:09:54.967Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "br.com.arthur.implementacaoh2.App",
  "message" : "Starting App on DESKTOP-JGRRF34 with PID 4616 (C:\\Users\\nakag\\Documents\\workspace-spring-tool-suite-4-4.3.2.RELEASE\\implementacaoh2\\target\\classes started by nakag in C:\\Users\\nakag\\Documents\\workspace-spring-tool-suite-4-4.3.2.RELEASE\\implementacaoh2)",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:09:54.987Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "br.com.arthur.implementacaoh2.App",
  "message" : "No active profile set, falling back to default profiles: default",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:09:55.596Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.springframework.data.repository.config.RepositoryConfigurationDelegate",
  "message" : "Bootstrapping Spring Data repositories in DEFAULT mode.",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:09:55.689Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.springframework.data.repository.config.RepositoryConfigurationDelegate",
  "message" : "Finished Spring Data repository scanning in 86ms. Found 6 repository interfaces.",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:09:56.021Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
  "message" : "Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$2d2f5bec] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:09:56.502Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.springframework.boot.web.embedded.tomcat.TomcatWebServer",
  "message" : "Tomcat initialized with port(s): 8080 (http)",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:09:56.516Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.apache.coyote.http11.Http11NioProtocol",
  "message" : "Initializing ProtocolHandler [\"http-nio-8080\"]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:09:56.526Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.apache.catalina.core.StandardService",
  "message" : "Starting service [Tomcat]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:09:56.526Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.apache.catalina.core.StandardEngine",
  "message" : "Starting Servlet engine: [Apache Tomcat/9.0.22]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:09:56.638Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]",
  "message" : "Initializing Spring embedded WebApplicationContext",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:09:56.639Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.springframework.web.context.ContextLoader",
  "message" : "Root WebApplicationContext: initialization completed in 1615 ms",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:09:56.704Z",
  "level" : "DEBUG",
  "thread" : "main",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "Filter 'logFilter' configured for use",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:09:56.864Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "com.zaxxer.hikari.HikariDataSource",
  "message" : "HikariPool-1 - Starting...",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:09:57.012Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "com.zaxxer.hikari.HikariDataSource",
  "message" : "HikariPool-1 - Start completed.",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:09:57.087Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.hibernate.jpa.internal.util.LogHelper",
  "message" : "HHH000204: Processing PersistenceUnitInfo [\n\tname: default\n\t...]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:09:57.165Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.hibernate.Version",
  "message" : "HHH000412: Hibernate Core {5.3.10.Final}",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:09:57.167Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.hibernate.cfg.Environment",
  "message" : "HHH000206: hibernate.properties not found",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:09:57.305Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.hibernate.annotations.common.Version",
  "message" : "HCANN000001: Hibernate Commons Annotations {5.0.4.Final}",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:09:57.466Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.hibernate.dialect.Dialect",
  "message" : "HHH000400: Using dialect: org.hibernate.dialect.H2Dialect",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:09:57.738Z",
  "level" : "WARN",
  "thread" : "main",
  "logger" : "org.hibernate.mapping.RootClass",
  "message" : "HHH000038: Composite-id class does not override equals(): br.com.arthur.implementacaoh2.entities.ContaRepasseId",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:09:57.738Z",
  "level" : "WARN",
  "thread" : "main",
  "logger" : "org.hibernate.mapping.RootClass",
  "message" : "HHH000039: Composite-id class does not override hashCode(): br.com.arthur.implementacaoh2.entities.ContaRepasseId",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:09:58.229Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.hibernate.tool.schema.internal.SchemaCreatorImpl",
  "message" : "HHH000476: Executing import script 'org.hibernate.tool.schema.internal.exec.ScriptSourceInputNonExistentImpl@727986ad'",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:09:58.232Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean",
  "message" : "Initialized JPA EntityManagerFactory for persistence unit 'default'",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:09:58.541Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.hibernate.hql.internal.QueryTranslatorFactoryInitiator",
  "message" : "HHH000397: Using ASTQueryTranslatorFactory",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:09:59.178Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor",
  "message" : "Initializing ExecutorService 'applicationTaskExecutor'",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:09:59.229Z",
  "level" : "WARN",
  "thread" : "main",
  "logger" : "org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration$JpaWebMvcConfiguration",
  "message" : "spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:09:59.414Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.apache.coyote.http11.Http11NioProtocol",
  "message" : "Starting ProtocolHandler [\"http-nio-8080\"]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:09:59.437Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.springframework.boot.web.embedded.tomcat.TomcatWebServer",
  "message" : "Tomcat started on port(s): 8080 (http) with context path ''",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:09:59.439Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "br.com.arthur.implementacaoh2.App",
  "message" : "Started App in 4.748 seconds (JVM running for 5.307)",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:10:05.678Z",
  "level" : "INFO",
  "thread" : "http-nio-8080-exec-1",
  "logger" : "org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]",
  "message" : "Initializing Spring DispatcherServlet 'dispatcherServlet'",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:10:05.679Z",
  "level" : "INFO",
  "thread" : "http-nio-8080-exec-1",
  "logger" : "org.springframework.web.servlet.DispatcherServlet",
  "message" : "Initializing Servlet 'dispatcherServlet'",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:10:05.688Z",
  "level" : "INFO",
  "thread" : "http-nio-8080-exec-1",
  "logger" : "org.springframework.web.servlet.DispatcherServlet",
  "message" : "Completed initialization in 9 ms",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:10:05.704Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-1",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "Before request [uri=/acordos_comerciais]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:10:05.978Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-1",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "After request [uri=/acordos_comerciais;payload={\n    \"id_acordo_comercial\": 1,\n    \"id_versao_acordo_comercial\": 1,\n    \"id_parceiro\": 1,\n    \"id_produto\": 1,\n    \"situacao\": \"ativo\",\n    \"data_inicio_vigencia\": \"2020-12-01\",\n    \"vigencia_indeterminada\": false,\n    \"data_fim_vigencia\": \"2020-12-02\",\n    \"configuracoes_canal\": [\n        {\n            \"id_canal\": \"C1\"\n        },\n        {\n            \"id_canal\": \"71\"\n        }\n    ],\n    \"contas_repasse\": [\n        {\n            \"id_conta\": 1,\n            \"codigo_finalidade_spb\": \"12345\",\n            \"percentual_raterio\": 50\n        },\n        {\n            \"id_conta\": 2,\n            \"codigo_finalidade_spb\": \"12345\",\n            \"percentual_raterio\": 50\n        }\n    ]\n}]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:10:10.456Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-3",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "Before request [uri=/acordos_comerciais]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:10:10.472Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-3",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "After request [uri=/acordos_comerciais;payload={\n    \"id_acordo_comercial\": 1,\n    \"id_versao_acordo_comercial\": 2,\n    \"id_parceiro\": 1,\n    \"id_produto\": 1,\n    \"situacao\": \"ativo\",\n    \"data_inicio_vigencia\": \"2020-12-01\",\n    \"vigencia_indeterminada\": false,\n    \"data_fim_vigencia\": \"2020-12-02\",\n    \"configuracoes_canal\": [\n        {\n            \"id_canal\": \"C1\"\n        },\n        {\n            \"id_canal\": \"71\"\n        }\n    ],\n    \"contas_repasse\": [\n        {\n            \"id_conta\": 1,\n            \"codigo_finalidade_spb\": \"12345\",\n            \"percentual_raterio\": 50\n        },\n        {\n            \"id_conta\": 2,\n            \"codigo_finalidade_spb\": \"12345\",\n            \"percentual_raterio\": 50\n        }\n    ]\n}]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:10:12.989Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-4",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "Before request [uri=/acordos_comerciais]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:10:13.030Z",
  "level" : "WARN",
  "thread" : "http-nio-8080-exec-4",
  "logger" : "org.hibernate.engine.jdbc.spi.SqlExceptionHelper",
  "message" : "SQL Error: 42000, SQLState: 42000",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:10:13.031Z",
  "level" : "ERROR",
  "thread" : "http-nio-8080-exec-4",
  "logger" : "org.hibernate.engine.jdbc.spi.SqlExceptionHelper",
  "message" : "Syntax error in SQL statement \"SELECT AC.ID_ACORDO_COMERCIAL, AC.ID_VERSAO_ACORDO_COMERCIAL FROM (SELECT ID_ACORDO_COMERCIAL, MAX(ID_VERSAO_ACORDO_COMERCIAL) AS MAIOR_VERSAO         FROM ACORDO_COMERCIAL          GROUP BY ID_ACORDO_COMERCIAL) AS RESULT INNER JOIN ACORDO_COMERCIAL AS ACON RESULT[*].ID_ACORDO_COMERCIAL = AC.ID_ACORDO_COMERCIAL AND   RESULT.MAIOR_VERSAO = AC.ID_VERSAO_ACORDO_COMERCIALORDER BY DATA_INCLUSAO DESC\"; SQL statement:\nSELECT AC.ID_ACORDO_COMERCIAL, AC.ID_VERSAO_ACORDO_COMERCIAL FROM (SELECT ID_ACORDO_COMERCIAL, MAX(ID_VERSAO_ACORDO_COMERCIAL) AS MAIOR_VERSAO         FROM ACORDO_COMERCIAL          GROUP BY ID_ACORDO_COMERCIAL) AS RESULT INNER JOIN ACORDO_COMERCIAL AS ACON RESULT.ID_ACORDO_COMERCIAL = AC.ID_ACORDO_COMERCIAL AND   RESULT.MAIOR_VERSAO = AC.ID_VERSAO_ACORDO_COMERCIALORDER BY DATA_INCLUSAO DESC [42000-199]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:10:13.040Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-4",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "After request [uri=/acordos_comerciais]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:10:13.045Z",
  "level" : "ERROR",
  "thread" : "http-nio-8080-exec-4",
  "logger" : "org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]",
  "message" : "Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.dao.InvalidDataAccessResourceUsageException: could not prepare statement; SQL [SELECT AC.ID_ACORDO_COMERCIAL, AC.ID_VERSAO_ACORDO_COMERCIAL FROM (SELECT ID_ACORDO_COMERCIAL, MAX(ID_VERSAO_ACORDO_COMERCIAL) AS MAIOR_VERSAO         FROM ACORDO_COMERCIAL          GROUP BY ID_ACORDO_COMERCIAL) AS RESULT INNER JOIN ACORDO_COMERCIAL AS ACON RESULT.ID_ACORDO_COMERCIAL = AC.ID_ACORDO_COMERCIAL AND   RESULT.MAIOR_VERSAO = AC.ID_VERSAO_ACORDO_COMERCIALORDER BY DATA_INCLUSAO DESC]; nested exception is org.hibernate.exception.SQLGrammarException: could not prepare statement] with root cause",
  "context" : "default",
  "exception" : "org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement \"SELECT AC.ID_ACORDO_COMERCIAL, AC.ID_VERSAO_ACORDO_COMERCIAL FROM (SELECT ID_ACORDO_COMERCIAL, MAX(ID_VERSAO_ACORDO_COMERCIAL) AS MAIOR_VERSAO         FROM ACORDO_COMERCIAL          GROUP BY ID_ACORDO_COMERCIAL) AS RESULT INNER JOIN ACORDO_COMERCIAL AS ACON RESULT[*].ID_ACORDO_COMERCIAL = AC.ID_ACORDO_COMERCIAL AND   RESULT.MAIOR_VERSAO = AC.ID_VERSAO_ACORDO_COMERCIALORDER BY DATA_INCLUSAO DESC\"; SQL statement:\nSELECT AC.ID_ACORDO_COMERCIAL, AC.ID_VERSAO_ACORDO_COMERCIAL FROM (SELECT ID_ACORDO_COMERCIAL, MAX(ID_VERSAO_ACORDO_COMERCIAL) AS MAIOR_VERSAO         FROM ACORDO_COMERCIAL          GROUP BY ID_ACORDO_COMERCIAL) AS RESULT INNER JOIN ACORDO_COMERCIAL AS ACON RESULT.ID_ACORDO_COMERCIAL = AC.ID_ACORDO_COMERCIAL AND   RESULT.MAIOR_VERSAO = AC.ID_VERSAO_ACORDO_COMERCIALORDER BY DATA_INCLUSAO DESC [42000-199]\r\n\tat org.h2.message.DbException.getJdbcSQLException(DbException.java:451)\r\n\tat org.h2.message.DbException.getJdbcSQLException(DbException.java:427)\r\n\tat org.h2.message.DbException.get(DbException.java:205)\r\n\tat org.h2.message.DbException.get(DbException.java:181)\r\n\tat org.h2.message.DbException.getSyntaxError(DbException.java:229)\r\n\tat org.h2.command.Parser.getSyntaxError(Parser.java:989)\r\n\tat org.h2.command.Parser.prepareCommand(Parser.java:686)\r\n\tat org.h2.engine.Session.prepareLocal(Session.java:627)\r\n\tat org.h2.engine.Session.prepareCommand(Session.java:565)\r\n\tat org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1292)\r\n\tat org.h2.jdbc.JdbcPreparedStatement.<init>(JdbcPreparedStatement.java:77)\r\n\tat org.h2.jdbc.JdbcConnection.prepareStatement(JdbcConnection.java:349)\r\n\tat com.zaxxer.hikari.pool.ProxyConnection.prepareStatement(ProxyConnection.java:311)\r\n\tat com.zaxxer.hikari.pool.HikariProxyConnection.prepareStatement(HikariProxyConnection.java)\r\n\tat org.hibernate.engine.jdbc.internal.StatementPreparerImpl$5.doPrepare(StatementPreparerImpl.java:146)\r\n\tat org.hibernate.engine.jdbc.internal.StatementPreparerImpl$StatementPreparationTemplate.prepareStatement(StatementPreparerImpl.java:172)\r\n\tat org.hibernate.engine.jdbc.internal.StatementPreparerImpl.prepareQueryStatement(StatementPreparerImpl.java:148)\r\n\tat org.hibernate.loader.Loader.prepareQueryStatement(Loader.java:1984)\r\n\tat org.hibernate.loader.Loader.executeQueryStatement(Loader.java:1914)\r\n\tat org.hibernate.loader.Loader.executeQueryStatement(Loader.java:1892)\r\n\tat org.hibernate.loader.Loader.doQuery(Loader.java:937)\r\n\tat org.hibernate.loader.Loader.doQueryAndInitializeNonLazyCollections(Loader.java:340)\r\n\tat org.hibernate.loader.Loader.doList(Loader.java:2689)\r\n\tat org.hibernate.loader.Loader.doList(Loader.java:2672)\r\n\tat org.hibernate.loader.Loader.listIgnoreQueryCache(Loader.java:2506)\r\n\tat org.hibernate.loader.Loader.list(Loader.java:2501)\r\n\tat org.hibernate.loader.custom.CustomLoader.list(CustomLoader.java:338)\r\n\tat org.hibernate.internal.SessionImpl.listCustomQuery(SessionImpl.java:2223)\r\n\tat org.hibernate.internal.AbstractSharedSessionContract.list(AbstractSharedSessionContract.java:1069)\r\n\tat org.hibernate.query.internal.NativeQueryImpl.doList(NativeQueryImpl.java:170)\r\n\tat org.hibernate.query.internal.AbstractProducedQuery.list(AbstractProducedQuery.java:1505)\r\n\tat org.hibernate.query.Query.getResultList(Query.java:132)\r\n\tat org.springframework.data.jpa.repository.query.JpaQueryExecution$CollectionExecution.doExecute(JpaQueryExecution.java:129)\r\n\tat org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:91)\r\n\tat org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:136)\r\n\tat org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:125)\r\n\tat org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.doInvoke(RepositoryFactorySupport.java:605)\r\n\tat org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.lambda$invoke$3(RepositoryFactorySupport.java:595)\r\n\tat org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.invoke(RepositoryFactorySupport.java:595)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\r\n\tat org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:59)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\r\n\tat org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:295)\r\n\tat org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\r\n\tat org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\r\n\tat org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:144)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\r\n\tat org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$ExposeRepositoryInvocationInterceptor.invoke(CrudMethodMetadataPostProcessor.java:364)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\r\n\tat org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\r\n\tat org.springframework.data.repository.core.support.SurroundingTransactionDetectorMethodInterceptor.invoke(SurroundingTransactionDetectorMethodInterceptor.java:61)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\r\n\tat org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)\r\n\tat com.sun.proxy.$Proxy97.consultarAcordosComerciais(Unknown Source)\r\n\tat br.com.arthur.implementacaoh2.services.AcordoComercialRepositoryImpl.consultaAcordosComerciais(AcordoComercialRepositoryImpl.java:46)\r\n\tat br.com.arthur.implementacaoh2.services.AcordoComercialRepositoryImpl$$FastClassBySpringCGLIB$$96d08d3b.invoke(<generated>)\r\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\r\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\r\n\tat org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\r\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)\r\n\tat br.com.arthur.implementacaoh2.services.AcordoComercialRepositoryImpl$$EnhancerBySpringCGLIB$$fdeea2fe.consultaAcordosComerciais(<generated>)\r\n\tat br.com.arthur.implementacaoh2.entrypoints.AcordosComerciaisController.consulta(AcordosComerciaisController.java:34)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)\r\n\tat org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)\r\n\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)\r\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)\r\n\tat org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:897)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:634)\r\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:741)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.web.filter.AbstractRequestLoggingFilter.doFilterInternal(AbstractRequestLoggingFilter.java:262)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)\r\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)\r\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)\r\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)\r\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\r\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)\r\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)\r\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)\r\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)\r\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)\r\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)\r\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"
}{
  "timestamp" : "2020-03-12T02:10:43.838Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-5",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "Before request [uri=/h2-console/login.do?jsessionid=d5b21a4075267d9e882115c2df858875]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:10:43.859Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-5",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "After request [uri=/h2-console/login.do?jsessionid=d5b21a4075267d9e882115c2df858875;payload=jsessionid=d5b21a4075267d9e882115c2df858875&language=en&setting=Generic+H2+%28Embedded%29&name=Generic+H2+%28Embedded%29&driver=org.h2.Driver&url=jdbc%3Ah2%3Amem%3Atestdb&user=sa&password=password]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:10:43.880Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-6",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "Before request [uri=/h2-console/stylesheet.css]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:10:43.885Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-6",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "After request [uri=/h2-console/stylesheet.css]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:10:43.892Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-7",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "Before request [uri=/h2-console/login.jsp?jsessionid=d14e9c8ccaeab105256eb1e46c57f302]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:10:43.897Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-7",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "After request [uri=/h2-console/login.jsp?jsessionid=d14e9c8ccaeab105256eb1e46c57f302]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:10:43.914Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-8",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "Before request [uri=/h2-console/background.gif]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:10:43.918Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-8",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "After request [uri=/h2-console/background.gif]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:10:45.144Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-9",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "Before request [uri=/h2-console/login.do?jsessionid=d14e9c8ccaeab105256eb1e46c57f302]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:10:45.150Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-9",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "After request [uri=/h2-console/login.do?jsessionid=d14e9c8ccaeab105256eb1e46c57f302;payload=jsessionid=d14e9c8ccaeab105256eb1e46c57f302&language=en&setting=Generic+H2+%28Embedded%29&name=Generic+H2+%28Embedded%29&driver=org.h2.Driver&url=jdbc%3Ah2%3Amem%3Atestdb&user=sa&password=password]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:10:45.170Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-10",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "Before request [uri=/h2-console/header.jsp?jsessionid=d14e9c8ccaeab105256eb1e46c57f302]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:10:45.171Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-2",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "Before request [uri=/h2-console/tables.do?jsessionid=d14e9c8ccaeab105256eb1e46c57f302]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:10:45.172Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-1",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "Before request [uri=/h2-console/query.jsp?jsessionid=d14e9c8ccaeab105256eb1e46c57f302]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:10:45.172Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-3",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "Before request [uri=/h2-console/help.jsp?jsessionid=d14e9c8ccaeab105256eb1e46c57f302]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:10:45.173Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-10",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "After request [uri=/h2-console/header.jsp?jsessionid=d14e9c8ccaeab105256eb1e46c57f302]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:10:45.175Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-3",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "After request [uri=/h2-console/help.jsp?jsessionid=d14e9c8ccaeab105256eb1e46c57f302]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:10:45.176Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-1",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "After request [uri=/h2-console/query.jsp?jsessionid=d14e9c8ccaeab105256eb1e46c57f302]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:10:45.195Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-4",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "Before request [uri=/h2-console/icon_disconnect.gif]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:10:45.196Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-5",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "Before request [uri=/h2-console/icon_line.gif]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:10:45.200Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-6",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "Before request [uri=/h2-console/icon_refresh.gif]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:10:45.200Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-5",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "After request [uri=/h2-console/icon_line.gif]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:10:45.203Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-4",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "After request [uri=/h2-console/icon_disconnect.gif]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:10:45.202Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-7",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "Before request [uri=/h2-console/icon_rollback.gif]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:10:45.203Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-8",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "Before request [uri=/h2-console/icon_commit.gif]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:10:45.204Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-9",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "Before request [uri=/h2-console/icon_run.gif]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:10:45.206Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-10",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "Before request [uri=/h2-console/icon_run_selected.gif]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:10:45.212Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-9",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "After request [uri=/h2-console/icon_run.gif]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:10:45.213Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-10",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "After request [uri=/h2-console/icon_run_selected.gif]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:10:45.213Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-7",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "After request [uri=/h2-console/icon_rollback.gif]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:10:45.213Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-8",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "After request [uri=/h2-console/icon_commit.gif]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:10:45.214Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-6",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "After request [uri=/h2-console/icon_refresh.gif]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:10:45.216Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-3",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "Before request [uri=/h2-console/icon_help.gif]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:10:45.219Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-5",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "Before request [uri=/h2-console/icon_stop.gif]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:10:45.221Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-1",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "Before request [uri=/h2-console/icon_history.gif]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:10:45.223Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-5",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "After request [uri=/h2-console/icon_stop.gif]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:10:45.223Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-3",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "After request [uri=/h2-console/icon_help.gif]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:10:45.226Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-1",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "After request [uri=/h2-console/icon_history.gif]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:10:45.271Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-2",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "After request [uri=/h2-console/tables.do?jsessionid=d14e9c8ccaeab105256eb1e46c57f302]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:10:45.282Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-4",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "Before request [uri=/h2-console/tree.js]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:10:45.284Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-4",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "After request [uri=/h2-console/tree.js]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:10:45.290Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-9",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "Before request [uri=/h2-console/tree_minus.gif]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:10:45.291Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-10",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "Before request [uri=/h2-console/tree_plus.gif]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:10:45.292Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-8",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "Before request [uri=/h2-console/tree_database.gif]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:10:45.293Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-6",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "Before request [uri=/h2-console/tree_empty.gif]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:10:45.293Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-7",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "Before request [uri=/h2-console/tree_table.gif]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:10:45.293Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-5",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "Before request [uri=/h2-console/tree_column.gif]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:10:45.295Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-9",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "After request [uri=/h2-console/tree_minus.gif]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:10:45.297Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-10",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "After request [uri=/h2-console/tree_plus.gif]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:10:45.297Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-6",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "After request [uri=/h2-console/tree_empty.gif]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:10:45.298Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-8",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "After request [uri=/h2-console/tree_database.gif]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:10:45.298Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-3",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "Before request [uri=/h2-console/tree_type.gif]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:10:45.299Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-5",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "After request [uri=/h2-console/tree_column.gif]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:10:45.300Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-7",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "After request [uri=/h2-console/tree_table.gif]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:10:45.303Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-3",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "After request [uri=/h2-console/tree_type.gif]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:10:45.304Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-1",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "Before request [uri=/h2-console/tree_index_az.gif]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:10:45.304Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-2",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "Before request [uri=/h2-console/tree_index.gif]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:10:45.307Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-2",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "After request [uri=/h2-console/tree_index.gif]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:10:45.307Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-1",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "After request [uri=/h2-console/tree_index_az.gif]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:10:45.330Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-4",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "Before request [uri=/h2-console/tree_folder.gif]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:10:45.333Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-4",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "After request [uri=/h2-console/tree_folder.gif]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:10:45.338Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-10",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "Before request [uri=/h2-console/tree_user.gif]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:10:45.338Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-6",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "Before request [uri=/h2-console/tree_info.gif]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:10:45.338Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-9",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "Before request [uri=/h2-console/tree_users.gif]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:10:45.341Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-9",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "After request [uri=/h2-console/tree_users.gif]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:10:45.341Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-6",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "After request [uri=/h2-console/tree_info.gif]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:10:45.341Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-10",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "After request [uri=/h2-console/tree_user.gif]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:10:46.914Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-8",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "Before request [uri=/h2-console/query.do?jsessionid=d14e9c8ccaeab105256eb1e46c57f302]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:10:46.919Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-8",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "After request [uri=/h2-console/query.do?jsessionid=d14e9c8ccaeab105256eb1e46c57f302;payload=jsessionid=d14e9c8ccaeab105256eb1e46c57f302&sql=]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:10:46.932Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-5",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "Before request [uri=/h2-console/table.js]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:10:46.935Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-5",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "After request [uri=/h2-console/table.js]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:10:49.007Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-7",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "Before request [uri=/h2-console/query.do?jsessionid=d14e9c8ccaeab105256eb1e46c57f302]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:10:49.011Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-7",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "After request [uri=/h2-console/query.do?jsessionid=d14e9c8ccaeab105256eb1e46c57f302;payload=jsessionid=d14e9c8ccaeab105256eb1e46c57f302&sql=SELECT+*+FROM+ACORDO_COMERCIAL+]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:10:52.113Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-3",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "Before request [uri=/h2-console/query.do?jsessionid=d14e9c8ccaeab105256eb1e46c57f302]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:10:52.118Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-3",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "After request [uri=/h2-console/query.do?jsessionid=d14e9c8ccaeab105256eb1e46c57f302;payload=jsessionid=d14e9c8ccaeab105256eb1e46c57f302&sql=SELECT%0D%0A++++++++AC.ID_ACORDO_COMERCIAL%2C%0D%0A++++++++AC.ID_VERSAO_ACORDO_COMERCIAL+%0D%0A++++FROM%0D%0A++++++++%28SELECT%0D%0A++++++++++++ID_ACORDO_COMERCIAL%2C%0D%0A++++++++++++MAX%28ID_VERSAO_ACORDO_COMERCIAL%29+AS+MAIOR_VERSAO+++++++++%0D%0A++++++++FROM%0D%0A++++++++++++ACORDO_COMERCIAL++++++++++%0D%0A++++++++GROUP+BY%0D%0A++++++++++++ID_ACORDO_COMERCIAL%29+AS+RESULT+%0D%0A++++INNER+JOIN%0D%0A++++++++ACORDO_COMERCIAL+AS+ACON+RESULT.ID_ACORDO_COMERCIAL+%3D+AC.ID_ACORDO_COMERCIAL+%0D%0A++++++++AND+++RESULT.MAIOR_VERSAO+%3D+AC.ID_VERSAO_ACORDO_COMERCIALORDER+%0D%0A++++BY%0D%0A++++++++DATA_INCLUSAO+DESC]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:11:17.665Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-2",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "Before request [uri=/h2-console/query.do?jsessionid=d14e9c8ccaeab105256eb1e46c57f302]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:11:17.668Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-2",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "After request [uri=/h2-console/query.do?jsessionid=d14e9c8ccaeab105256eb1e46c57f302;payload=jsessionid=d14e9c8ccaeab105256eb1e46c57f302&sql=SELECT%0D%0A++++++++++++ID_ACORDO_COMERCIAL%2C%0D%0A++++++++++++MAX%28ID_VERSAO_ACORDO_COMERCIAL%29+AS+MAIOR_VERSAO+++++++++%0D%0A++++++++FROM%0D%0A++++++++++++ACORDO_COMERCIAL++++++++++%0D%0A++++++++GROUP+BY%0D%0A++++++++++++ID_ACORDO_COMERCIAL%29+AS+RESULT+]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:11:17.680Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-1",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "Before request [uri=/h2-console/stylesheet.css]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:11:17.680Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-4",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "Before request [uri=/h2-console/table.js]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:11:17.680Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-4",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "After request [uri=/h2-console/table.js]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:11:17.680Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-1",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "After request [uri=/h2-console/stylesheet.css]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:11:24.551Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-9",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "Before request [uri=/h2-console/query.do?jsessionid=d14e9c8ccaeab105256eb1e46c57f302]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:11:24.557Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-9",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "After request [uri=/h2-console/query.do?jsessionid=d14e9c8ccaeab105256eb1e46c57f302;payload=jsessionid=d14e9c8ccaeab105256eb1e46c57f302&sql=SELECT%0D%0A++++++++++++ID_ACORDO_COMERCIAL%2C%0D%0A++++++++++++MAX%28ID_VERSAO_ACORDO_COMERCIAL%29+AS+MAIOR_VERSAO+++++++++%0D%0A++++++++FROM%0D%0A++++++++++++ACORDO_COMERCIAL++++++++++%0D%0A++++++++GROUP+BY%0D%0A++++++++++++ID_ACORDO_COMERCIAL]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:11:38.902Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-10",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "Before request [uri=/acordos_comerciais]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:11:38.919Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-10",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "After request [uri=/acordos_comerciais;payload={\n    \"id_acordo_comercial\": 2,\n    \"id_versao_acordo_comercial\": 1,\n    \"id_parceiro\": 1,\n    \"id_produto\": 1,\n    \"situacao\": \"ativo\",\n    \"data_inicio_vigencia\": \"2020-12-01\",\n    \"vigencia_indeterminada\": false,\n    \"data_fim_vigencia\": \"2020-12-02\",\n    \"configuracoes_canal\": [\n        {\n            \"id_canal\": \"C1\"\n        },\n        {\n            \"id_canal\": \"71\"\n        }\n    ],\n    \"contas_repasse\": [\n        {\n            \"id_conta\": 1,\n            \"codigo_finalidade_spb\": \"12345\",\n            \"percentual_raterio\": 50\n        },\n        {\n            \"id_conta\": 2,\n            \"codigo_finalidade_spb\": \"12345\",\n            \"percentual_raterio\": 50\n        }\n    ]\n}]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:11:40.619Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-8",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "Before request [uri=/h2-console/query.do?jsessionid=d14e9c8ccaeab105256eb1e46c57f302]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:11:40.621Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-8",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "After request [uri=/h2-console/query.do?jsessionid=d14e9c8ccaeab105256eb1e46c57f302;payload=jsessionid=d14e9c8ccaeab105256eb1e46c57f302&sql=SELECT%0D%0A++++++++++++ID_ACORDO_COMERCIAL%2C%0D%0A++++++++++++MAX%28ID_VERSAO_ACORDO_COMERCIAL%29+AS+MAIOR_VERSAO+++++++++%0D%0A++++++++FROM%0D%0A++++++++++++ACORDO_COMERCIAL++++++++++%0D%0A++++++++GROUP+BY%0D%0A++++++++++++ID_ACORDO_COMERCIAL]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:11:40.635Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-5",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "Before request [uri=/h2-console/stylesheet.css]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:11:40.635Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-7",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "Before request [uri=/h2-console/table.js]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:11:40.636Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-7",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "After request [uri=/h2-console/table.js]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:11:40.636Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-5",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "After request [uri=/h2-console/stylesheet.css]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:11:44.122Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-3",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "Before request [uri=/acordos_comerciais]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:11:44.135Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-3",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "After request [uri=/acordos_comerciais;payload={\n    \"id_acordo_comercial\": 2,\n    \"id_versao_acordo_comercial\": 2,\n    \"id_parceiro\": 1,\n    \"id_produto\": 1,\n    \"situacao\": \"ativo\",\n    \"data_inicio_vigencia\": \"2020-12-01\",\n    \"vigencia_indeterminada\": false,\n    \"data_fim_vigencia\": \"2020-12-02\",\n    \"configuracoes_canal\": [\n        {\n            \"id_canal\": \"C1\"\n        },\n        {\n            \"id_canal\": \"71\"\n        }\n    ],\n    \"contas_repasse\": [\n        {\n            \"id_conta\": 1,\n            \"codigo_finalidade_spb\": \"12345\",\n            \"percentual_raterio\": 50\n        },\n        {\n            \"id_conta\": 2,\n            \"codigo_finalidade_spb\": \"12345\",\n            \"percentual_raterio\": 50\n        }\n    ]\n}]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:11:45.636Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-2",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "Before request [uri=/h2-console/query.do?jsessionid=d14e9c8ccaeab105256eb1e46c57f302]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:11:45.637Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-2",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "After request [uri=/h2-console/query.do?jsessionid=d14e9c8ccaeab105256eb1e46c57f302;payload=jsessionid=d14e9c8ccaeab105256eb1e46c57f302&sql=SELECT%0D%0A++++++++++++ID_ACORDO_COMERCIAL%2C%0D%0A++++++++++++MAX%28ID_VERSAO_ACORDO_COMERCIAL%29+AS+MAIOR_VERSAO+++++++++%0D%0A++++++++FROM%0D%0A++++++++++++ACORDO_COMERCIAL++++++++++%0D%0A++++++++GROUP+BY%0D%0A++++++++++++ID_ACORDO_COMERCIAL]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:12:24.063Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-10",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "Before request [uri=/h2-console/query.do?jsessionid=d14e9c8ccaeab105256eb1e46c57f302]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:12:24.064Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-10",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "After request [uri=/h2-console/query.do?jsessionid=d14e9c8ccaeab105256eb1e46c57f302;payload=jsessionid=d14e9c8ccaeab105256eb1e46c57f302&sql=%0D%0A%0D%0ASELECT+ID_ACORDO_COMERCIAL%2C+MAX%28ID_VERSAO_ACORDO_COMERCIAL%29+AS+MAIOR_VERSAO+++++++++%0D%0AFROM+ACORDO_COMERCIAL++++++++++%0D%0AGROUP+BY+ID_ACORDO_COMERCIAL]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:12:24.077Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-8",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "Before request [uri=/h2-console/stylesheet.css]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:12:24.077Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-5",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "Before request [uri=/h2-console/table.js]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:12:24.077Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-8",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "After request [uri=/h2-console/stylesheet.css]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:12:24.077Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-5",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "After request [uri=/h2-console/table.js]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:13:42.488Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-4",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "Before request [uri=/h2-console/query.do?jsessionid=d14e9c8ccaeab105256eb1e46c57f302]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:13:42.492Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-4",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "After request [uri=/h2-console/query.do?jsessionid=d14e9c8ccaeab105256eb1e46c57f302;payload=jsessionid=d14e9c8ccaeab105256eb1e46c57f302&sql=%0D%0ASELECT+*+FROM%0D%0A%28SELECT+ID_ACORDO_COMERCIAL%2C+MAX%28ID_VERSAO_ACORDO_COMERCIAL%29+AS+MAIOR_VERSAO+++++++++%0D%0AFROM+ACORDO_COMERCIAL++++++++++%0D%0AGROUP+BY+ID_ACORDO_COMERCIAL%29+%0D%0Aas+x+IINNER+JOIN+ACORDO_COMERCIAL+as+AC%0D%0AON+x.ID_ACORDO_COMERCIAL+%3D+AC.ID_ACORDO_COMERCIAL+AND%0D%0Ax.MAIOR_VERSAO+%3D+AC.ID_VERSAO_ACORDO_COMERCIAL]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:13:42.507Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-1",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "Before request [uri=/h2-console/table.js]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:13:42.507Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-9",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "Before request [uri=/h2-console/stylesheet.css]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:13:42.508Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-9",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "After request [uri=/h2-console/stylesheet.css]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:13:42.508Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-1",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "After request [uri=/h2-console/table.js]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:14:13.700Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-6",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "Before request [uri=/h2-console/query.do?jsessionid=d14e9c8ccaeab105256eb1e46c57f302]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:14:13.704Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-6",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "After request [uri=/h2-console/query.do?jsessionid=d14e9c8ccaeab105256eb1e46c57f302;payload=jsessionid=d14e9c8ccaeab105256eb1e46c57f302&sql=%0D%0ASELECT+*+FROM%0D%0A%28SELECT+ID_ACORDO_COMERCIAL%2C+MAX%28ID_VERSAO_ACORDO_COMERCIAL%29+AS+MAIOR_VERSAO+++++++++%0D%0AFROM+ACORDO_COMERCIAL++++++++++%0D%0AGROUP+BY+ID_ACORDO_COMERCIAL%29+%0D%0Aas+x+INNER+JOIN+ACORDO_COMERCIAL+as+AC%0D%0AON+x.ID_ACORDO_COMERCIAL+%3D+AC.ID_ACORDO_COMERCIAL+AND%0D%0Ax.MAIOR_VERSAO+%3D+AC.ID_VERSAO_ACORDO_COMERCIAL]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:14:13.719Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-10",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "Before request [uri=/h2-console/stylesheet.css]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:14:13.720Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-5",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "Before request [uri=/h2-console/table.js]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:14:13.720Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-10",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "After request [uri=/h2-console/stylesheet.css]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:14:13.720Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-5",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "After request [uri=/h2-console/table.js]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:14:31.475Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-8",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "Before request [uri=/h2-console/query.do?jsessionid=d14e9c8ccaeab105256eb1e46c57f302]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:14:31.477Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-8",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "After request [uri=/h2-console/query.do?jsessionid=d14e9c8ccaeab105256eb1e46c57f302;payload=jsessionid=d14e9c8ccaeab105256eb1e46c57f302&sql=%0D%0ASELECT+AC+FROM%0D%0A%28SELECT+ID_ACORDO_COMERCIAL%2C+MAX%28ID_VERSAO_ACORDO_COMERCIAL%29+AS+MAIOR_VERSAO+++++++++%0D%0AFROM+ACORDO_COMERCIAL++++++++++%0D%0AGROUP+BY+ID_ACORDO_COMERCIAL%29+%0D%0Aas+x+INNER+JOIN+ACORDO_COMERCIAL+as+AC%0D%0AON+x.ID_ACORDO_COMERCIAL+%3D+AC.ID_ACORDO_COMERCIAL+AND%0D%0Ax.MAIOR_VERSAO+%3D+AC.ID_VERSAO_ACORDO_COMERCIAL]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:14:31.490Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-7",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "Before request [uri=/h2-console/stylesheet.css]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:14:31.491Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-2",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "Before request [uri=/h2-console/table.js]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:14:31.491Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-7",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "After request [uri=/h2-console/stylesheet.css]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:14:31.491Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-2",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "After request [uri=/h2-console/table.js]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:14:54.016Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-3",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "Before request [uri=/h2-console/query.do?jsessionid=d14e9c8ccaeab105256eb1e46c57f302]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:14:54.019Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-3",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "After request [uri=/h2-console/query.do?jsessionid=d14e9c8ccaeab105256eb1e46c57f302;payload=jsessionid=d14e9c8ccaeab105256eb1e46c57f302&sql=%0D%0ASELECT+AC.ID_ACORDO_COMERCIAL%2C+AC.ID_VERSAO_ACORDO_COMERCIAL+FROM%0D%0A%28SELECT+ID_ACORDO_COMERCIAL%2C+MAX%28ID_VERSAO_ACORDO_COMERCIAL%29+AS+MAIOR_VERSAO+++++++++%0D%0AFROM+ACORDO_COMERCIAL++++++++++%0D%0AGROUP+BY+ID_ACORDO_COMERCIAL%29+%0D%0Aas+x+INNER+JOIN+ACORDO_COMERCIAL+as+AC%0D%0AON+x.ID_ACORDO_COMERCIAL+%3D+AC.ID_ACORDO_COMERCIAL+AND%0D%0Ax.MAIOR_VERSAO+%3D+AC.ID_VERSAO_ACORDO_COMERCIAL]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:14:54.034Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-4",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "Before request [uri=/h2-console/stylesheet.css]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:14:54.034Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-9",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "Before request [uri=/h2-console/table.js]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:14:54.035Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-4",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "After request [uri=/h2-console/stylesheet.css]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:14:54.035Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-9",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "After request [uri=/h2-console/table.js]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:15:03.072Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-1",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "Before request [uri=/h2-console/query.do?jsessionid=d14e9c8ccaeab105256eb1e46c57f302]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:15:03.078Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-1",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "After request [uri=/h2-console/query.do?jsessionid=d14e9c8ccaeab105256eb1e46c57f302;payload=jsessionid=d14e9c8ccaeab105256eb1e46c57f302&sql=%0D%0ASELECT+AC.ID_ACORDO_COMERCIAL%2C+AC.ID_VERSAO_ACORDO_COMERCIAL%2C+AC.DATA_INCLUSAO+FROM%0D%0A%28SELECT+ID_ACORDO_COMERCIAL%2C+MAX%28ID_VERSAO_ACORDO_COMERCIAL%29+AS+MAIOR_VERSAO+++++++++%0D%0AFROM+ACORDO_COMERCIAL++++++++++%0D%0AGROUP+BY+ID_ACORDO_COMERCIAL%29+%0D%0Aas+x+INNER+JOIN+ACORDO_COMERCIAL+as+AC%0D%0AON+x.ID_ACORDO_COMERCIAL+%3D+AC.ID_ACORDO_COMERCIAL+AND%0D%0Ax.MAIOR_VERSAO+%3D+AC.ID_VERSAO_ACORDO_COMERCIAL]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:17:35.214Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "br.com.arthur.implementacaoh2.App",
  "message" : "Starting App on DESKTOP-JGRRF34 with PID 7980 (C:\\Users\\nakag\\Documents\\workspace-spring-tool-suite-4-4.3.2.RELEASE\\implementacaoh2\\target\\classes started by nakag in C:\\Users\\nakag\\Documents\\workspace-spring-tool-suite-4-4.3.2.RELEASE\\implementacaoh2)",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:17:35.230Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "br.com.arthur.implementacaoh2.App",
  "message" : "No active profile set, falling back to default profiles: default",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:17:35.854Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.springframework.data.repository.config.RepositoryConfigurationDelegate",
  "message" : "Bootstrapping Spring Data repositories in DEFAULT mode.",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:17:35.964Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.springframework.data.repository.config.RepositoryConfigurationDelegate",
  "message" : "Finished Spring Data repository scanning in 102ms. Found 6 repository interfaces.",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:17:36.308Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
  "message" : "Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$a268308d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:17:36.800Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.springframework.boot.web.embedded.tomcat.TomcatWebServer",
  "message" : "Tomcat initialized with port(s): 8080 (http)",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:17:36.815Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.apache.coyote.http11.Http11NioProtocol",
  "message" : "Initializing ProtocolHandler [\"http-nio-8080\"]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:17:36.824Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.apache.catalina.core.StandardService",
  "message" : "Starting service [Tomcat]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:17:36.825Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.apache.catalina.core.StandardEngine",
  "message" : "Starting Servlet engine: [Apache Tomcat/9.0.22]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:17:36.929Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]",
  "message" : "Initializing Spring embedded WebApplicationContext",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:17:36.930Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.springframework.web.context.ContextLoader",
  "message" : "Root WebApplicationContext: initialization completed in 1662 ms",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:17:36.991Z",
  "level" : "DEBUG",
  "thread" : "main",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "Filter 'logFilter' configured for use",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:17:37.157Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "com.zaxxer.hikari.HikariDataSource",
  "message" : "HikariPool-1 - Starting...",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:17:37.315Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "com.zaxxer.hikari.HikariDataSource",
  "message" : "HikariPool-1 - Start completed.",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:17:37.388Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.hibernate.jpa.internal.util.LogHelper",
  "message" : "HHH000204: Processing PersistenceUnitInfo [\n\tname: default\n\t...]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:17:37.455Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.hibernate.Version",
  "message" : "HHH000412: Hibernate Core {5.3.10.Final}",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:17:37.457Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.hibernate.cfg.Environment",
  "message" : "HHH000206: hibernate.properties not found",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:17:37.589Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.hibernate.annotations.common.Version",
  "message" : "HCANN000001: Hibernate Commons Annotations {5.0.4.Final}",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:17:37.749Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.hibernate.dialect.Dialect",
  "message" : "HHH000400: Using dialect: org.hibernate.dialect.H2Dialect",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:17:38.048Z",
  "level" : "WARN",
  "thread" : "main",
  "logger" : "org.hibernate.mapping.RootClass",
  "message" : "HHH000038: Composite-id class does not override equals(): br.com.arthur.implementacaoh2.entities.ContaRepasseId",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:17:38.049Z",
  "level" : "WARN",
  "thread" : "main",
  "logger" : "org.hibernate.mapping.RootClass",
  "message" : "HHH000039: Composite-id class does not override hashCode(): br.com.arthur.implementacaoh2.entities.ContaRepasseId",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:17:38.607Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.hibernate.tool.schema.internal.SchemaCreatorImpl",
  "message" : "HHH000476: Executing import script 'org.hibernate.tool.schema.internal.exec.ScriptSourceInputNonExistentImpl@3f866f50'",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:17:38.610Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean",
  "message" : "Initialized JPA EntityManagerFactory for persistence unit 'default'",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:17:38.946Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.hibernate.hql.internal.QueryTranslatorFactoryInitiator",
  "message" : "HHH000397: Using ASTQueryTranslatorFactory",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:17:39.642Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor",
  "message" : "Initializing ExecutorService 'applicationTaskExecutor'",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:17:39.699Z",
  "level" : "WARN",
  "thread" : "main",
  "logger" : "org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration$JpaWebMvcConfiguration",
  "message" : "spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:17:39.878Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.apache.coyote.http11.Http11NioProtocol",
  "message" : "Starting ProtocolHandler [\"http-nio-8080\"]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:17:39.901Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.springframework.boot.web.embedded.tomcat.TomcatWebServer",
  "message" : "Tomcat started on port(s): 8080 (http) with context path ''",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:17:39.903Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "br.com.arthur.implementacaoh2.App",
  "message" : "Started App in 4.96 seconds (JVM running for 5.501)",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:17:49.551Z",
  "level" : "INFO",
  "thread" : "http-nio-8080-exec-1",
  "logger" : "org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]",
  "message" : "Initializing Spring DispatcherServlet 'dispatcherServlet'",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:17:49.552Z",
  "level" : "INFO",
  "thread" : "http-nio-8080-exec-1",
  "logger" : "org.springframework.web.servlet.DispatcherServlet",
  "message" : "Initializing Servlet 'dispatcherServlet'",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:17:49.560Z",
  "level" : "INFO",
  "thread" : "http-nio-8080-exec-1",
  "logger" : "org.springframework.web.servlet.DispatcherServlet",
  "message" : "Completed initialization in 8 ms",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:17:49.573Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-1",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "Before request [uri=/acordos_comerciais]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:17:49.853Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-1",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "After request [uri=/acordos_comerciais;payload={\n    \"id_acordo_comercial\": 1,\n    \"id_versao_acordo_comercial\": 1,\n    \"id_parceiro\": 1,\n    \"id_produto\": 1,\n    \"situacao\": \"ativo\",\n    \"data_inicio_vigencia\": \"2020-12-01\",\n    \"vigencia_indeterminada\": false,\n    \"data_fim_vigencia\": \"2020-12-02\",\n    \"configuracoes_canal\": [\n        {\n            \"id_canal\": \"C1\"\n        },\n        {\n            \"id_canal\": \"71\"\n        }\n    ],\n    \"contas_repasse\": [\n        {\n            \"id_conta\": 1,\n            \"codigo_finalidade_spb\": \"12345\",\n            \"percentual_raterio\": 50\n        },\n        {\n            \"id_conta\": 2,\n            \"codigo_finalidade_spb\": \"12345\",\n            \"percentual_raterio\": 50\n        }\n    ]\n}]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:17:52.512Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-3",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "Before request [uri=/acordos_comerciais]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:17:52.538Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-3",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "After request [uri=/acordos_comerciais;payload={\n    \"id_acordo_comercial\": 1,\n    \"id_versao_acordo_comercial\": 2,\n    \"id_parceiro\": 1,\n    \"id_produto\": 1,\n    \"situacao\": \"ativo\",\n    \"data_inicio_vigencia\": \"2020-12-01\",\n    \"vigencia_indeterminada\": false,\n    \"data_fim_vigencia\": \"2020-12-02\",\n    \"configuracoes_canal\": [\n        {\n            \"id_canal\": \"C1\"\n        },\n        {\n            \"id_canal\": \"71\"\n        }\n    ],\n    \"contas_repasse\": [\n        {\n            \"id_conta\": 1,\n            \"codigo_finalidade_spb\": \"12345\",\n            \"percentual_raterio\": 50\n        },\n        {\n            \"id_conta\": 2,\n            \"codigo_finalidade_spb\": \"12345\",\n            \"percentual_raterio\": 50\n        }\n    ]\n}]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:17:54.987Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-4",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "Before request [uri=/acordos_comerciais]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:17:55.046Z",
  "level" : "WARN",
  "thread" : "http-nio-8080-exec-4",
  "logger" : "org.hibernate.engine.jdbc.spi.SqlExceptionHelper",
  "message" : "SQL Error: 42122, SQLState: 42S22",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:17:55.047Z",
  "level" : "ERROR",
  "thread" : "http-nio-8080-exec-4",
  "logger" : "org.hibernate.engine.jdbc.spi.SqlExceptionHelper",
  "message" : "Column \"data_fim_vigencia\" not found [42122-199]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:17:55.054Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-4",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "After request [uri=/acordos_comerciais]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:17:55.056Z",
  "level" : "ERROR",
  "thread" : "http-nio-8080-exec-4",
  "logger" : "org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]",
  "message" : "Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.dao.InvalidDataAccessResourceUsageException: could not execute query; SQL [SELECT AC.ID_ACORDO_COMERCIAL, AC.ID_VERSAO_ACORDO_COMERCIAL FROM (SELECT ID_ACORDO_COMERCIAL, MAX(ID_VERSAO_ACORDO_COMERCIAL) AS MAIOR_VERSAO FROM ACORDO_COMERCIAL GROUP BY ID_ACORDO_COMERCIAL) as x INNER JOIN ACORDO_COMERCIAL as AC ON x.ID_ACORDO_COMERCIAL = AC.ID_ACORDO_COMERCIAL AND x.MAIOR_VERSAO = AC.ID_VERSAO_ACORDO_COMERCIAL ORDER BY DATA_INCLUSAO DESC]; nested exception is org.hibernate.exception.SQLGrammarException: could not execute query] with root cause",
  "context" : "default",
  "exception" : "org.h2.jdbc.JdbcSQLSyntaxErrorException: Column \"data_fim_vigencia\" not found [42122-199]\r\n\tat org.h2.message.DbException.getJdbcSQLException(DbException.java:451)\r\n\tat org.h2.message.DbException.getJdbcSQLException(DbException.java:427)\r\n\tat org.h2.message.DbException.get(DbException.java:205)\r\n\tat org.h2.message.DbException.get(DbException.java:181)\r\n\tat org.h2.jdbc.JdbcResultSet.getColumnIndex(JdbcResultSet.java:3214)\r\n\tat org.h2.jdbc.JdbcResultSet.get(JdbcResultSet.java:3287)\r\n\tat org.h2.jdbc.JdbcResultSet.getTimestamp(JdbcResultSet.java:494)\r\n\tat com.zaxxer.hikari.pool.HikariProxyResultSet.getTimestamp(HikariProxyResultSet.java)\r\n\tat org.hibernate.type.descriptor.sql.TimestampTypeDescriptor$2.doExtract(TimestampTypeDescriptor.java:84)\r\n\tat org.hibernate.type.descriptor.sql.BasicExtractor.extract(BasicExtractor.java:47)\r\n\tat org.hibernate.type.AbstractStandardBasicType.nullSafeGet(AbstractStandardBasicType.java:257)\r\n\tat org.hibernate.type.AbstractStandardBasicType.nullSafeGet(AbstractStandardBasicType.java:253)\r\n\tat org.hibernate.type.AbstractStandardBasicType.nullSafeGet(AbstractStandardBasicType.java:243)\r\n\tat org.hibernate.type.AbstractStandardBasicType.hydrate(AbstractStandardBasicType.java:329)\r\n\tat org.hibernate.persister.entity.AbstractEntityPersister.hydrate(AbstractEntityPersister.java:3012)\r\n\tat org.hibernate.loader.Loader.loadFromResultSet(Loader.java:1746)\r\n\tat org.hibernate.loader.Loader.instanceNotYetLoaded(Loader.java:1672)\r\n\tat org.hibernate.loader.Loader.getRow(Loader.java:1561)\r\n\tat org.hibernate.loader.Loader.getRowFromResultSet(Loader.java:731)\r\n\tat org.hibernate.loader.Loader.processResultSet(Loader.java:990)\r\n\tat org.hibernate.loader.Loader.doQuery(Loader.java:948)\r\n\tat org.hibernate.loader.Loader.doQueryAndInitializeNonLazyCollections(Loader.java:340)\r\n\tat org.hibernate.loader.Loader.doList(Loader.java:2689)\r\n\tat org.hibernate.loader.Loader.doList(Loader.java:2672)\r\n\tat org.hibernate.loader.Loader.listIgnoreQueryCache(Loader.java:2506)\r\n\tat org.hibernate.loader.Loader.list(Loader.java:2501)\r\n\tat org.hibernate.loader.custom.CustomLoader.list(CustomLoader.java:338)\r\n\tat org.hibernate.internal.SessionImpl.listCustomQuery(SessionImpl.java:2223)\r\n\tat org.hibernate.internal.AbstractSharedSessionContract.list(AbstractSharedSessionContract.java:1069)\r\n\tat org.hibernate.query.internal.NativeQueryImpl.doList(NativeQueryImpl.java:170)\r\n\tat org.hibernate.query.internal.AbstractProducedQuery.list(AbstractProducedQuery.java:1505)\r\n\tat org.hibernate.query.Query.getResultList(Query.java:132)\r\n\tat org.springframework.data.jpa.repository.query.JpaQueryExecution$CollectionExecution.doExecute(JpaQueryExecution.java:129)\r\n\tat org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:91)\r\n\tat org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:136)\r\n\tat org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:125)\r\n\tat org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.doInvoke(RepositoryFactorySupport.java:605)\r\n\tat org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.lambda$invoke$3(RepositoryFactorySupport.java:595)\r\n\tat org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.invoke(RepositoryFactorySupport.java:595)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\r\n\tat org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:59)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\r\n\tat org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:295)\r\n\tat org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\r\n\tat org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\r\n\tat org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:144)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\r\n\tat org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$ExposeRepositoryInvocationInterceptor.invoke(CrudMethodMetadataPostProcessor.java:364)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\r\n\tat org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\r\n\tat org.springframework.data.repository.core.support.SurroundingTransactionDetectorMethodInterceptor.invoke(SurroundingTransactionDetectorMethodInterceptor.java:61)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\r\n\tat org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)\r\n\tat com.sun.proxy.$Proxy97.consultarAcordosComerciais(Unknown Source)\r\n\tat br.com.arthur.implementacaoh2.services.AcordoComercialRepositoryImpl.consultaAcordosComerciais(AcordoComercialRepositoryImpl.java:46)\r\n\tat br.com.arthur.implementacaoh2.services.AcordoComercialRepositoryImpl$$FastClassBySpringCGLIB$$96d08d3b.invoke(<generated>)\r\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\r\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\r\n\tat org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\r\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)\r\n\tat br.com.arthur.implementacaoh2.services.AcordoComercialRepositoryImpl$$EnhancerBySpringCGLIB$$d66f1bc7.consultaAcordosComerciais(<generated>)\r\n\tat br.com.arthur.implementacaoh2.entrypoints.AcordosComerciaisController.consulta(AcordosComerciaisController.java:34)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)\r\n\tat org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)\r\n\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)\r\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)\r\n\tat org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:897)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:634)\r\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:741)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.web.filter.AbstractRequestLoggingFilter.doFilterInternal(AbstractRequestLoggingFilter.java:262)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)\r\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)\r\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)\r\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)\r\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\r\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)\r\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)\r\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)\r\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)\r\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)\r\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)\r\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"
}{
  "timestamp" : "2020-03-12T02:18:21.953Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-5",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "Before request [uri=/h2-console/login.do?jsessionid=d14e9c8ccaeab105256eb1e46c57f302]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:18:21.972Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-5",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "After request [uri=/h2-console/login.do?jsessionid=d14e9c8ccaeab105256eb1e46c57f302;payload=jsessionid=d14e9c8ccaeab105256eb1e46c57f302&language=en&setting=Generic+H2+%28Embedded%29&name=Generic+H2+%28Embedded%29&driver=org.h2.Driver&url=jdbc%3Ah2%3Amem%3Atestdb&user=sa&password=password]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:18:21.991Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-6",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "Before request [uri=/h2-console/stylesheet.css]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:18:21.996Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-6",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "After request [uri=/h2-console/stylesheet.css]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:18:22.008Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-7",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "Before request [uri=/h2-console/login.jsp?jsessionid=756d4979c51afa90d54ed46bf66999b0]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:18:22.012Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-7",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "After request [uri=/h2-console/login.jsp?jsessionid=756d4979c51afa90d54ed46bf66999b0]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:18:22.030Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-8",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "Before request [uri=/h2-console/background.gif]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:18:22.034Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-8",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "After request [uri=/h2-console/background.gif]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:18:23.221Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-9",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "Before request [uri=/h2-console/login.do?jsessionid=756d4979c51afa90d54ed46bf66999b0]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:18:23.227Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-9",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "After request [uri=/h2-console/login.do?jsessionid=756d4979c51afa90d54ed46bf66999b0;payload=jsessionid=756d4979c51afa90d54ed46bf66999b0&language=en&setting=Generic+H2+%28Embedded%29&name=Generic+H2+%28Embedded%29&driver=org.h2.Driver&url=jdbc%3Ah2%3Amem%3Atestdb&user=sa&password=password]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:18:23.251Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-10",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "Before request [uri=/h2-console/header.jsp?jsessionid=756d4979c51afa90d54ed46bf66999b0]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:18:23.252Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-2",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "Before request [uri=/h2-console/tables.do?jsessionid=756d4979c51afa90d54ed46bf66999b0]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:18:23.254Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-1",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "Before request [uri=/h2-console/query.jsp?jsessionid=756d4979c51afa90d54ed46bf66999b0]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:18:23.255Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-3",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "Before request [uri=/h2-console/help.jsp?jsessionid=756d4979c51afa90d54ed46bf66999b0]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:18:23.255Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-10",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "After request [uri=/h2-console/header.jsp?jsessionid=756d4979c51afa90d54ed46bf66999b0]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:18:23.258Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-3",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "After request [uri=/h2-console/help.jsp?jsessionid=756d4979c51afa90d54ed46bf66999b0]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:18:23.260Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-1",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "After request [uri=/h2-console/query.jsp?jsessionid=756d4979c51afa90d54ed46bf66999b0]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:18:23.283Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-5",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "Before request [uri=/h2-console/icon_line.gif]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:18:23.284Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-4",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "Before request [uri=/h2-console/icon_disconnect.gif]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:18:23.289Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-7",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "Before request [uri=/h2-console/icon_rollback.gif]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:18:23.290Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-6",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "Before request [uri=/h2-console/icon_refresh.gif]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:18:23.291Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-5",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "After request [uri=/h2-console/icon_line.gif]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:18:23.296Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-6",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "After request [uri=/h2-console/icon_refresh.gif]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:18:23.296Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-4",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "After request [uri=/h2-console/icon_disconnect.gif]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:18:23.296Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-7",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "After request [uri=/h2-console/icon_rollback.gif]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:18:23.299Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-4",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "Before request [uri=/h2-console/icon_run.gif]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:18:23.303Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-8",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "Before request [uri=/h2-console/icon_commit.gif]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:18:23.303Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-9",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "Before request [uri=/h2-console/icon_run_selected.gif]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:18:23.305Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-3",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "Before request [uri=/h2-console/icon_stop.gif]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:18:23.308Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-9",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "After request [uri=/h2-console/icon_run_selected.gif]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:18:23.309Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-4",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "After request [uri=/h2-console/icon_run.gif]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:18:23.311Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-8",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "After request [uri=/h2-console/icon_commit.gif]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:18:23.311Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-3",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "After request [uri=/h2-console/icon_stop.gif]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:18:23.314Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-5",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "Before request [uri=/h2-console/icon_help.gif]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:18:23.315Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-1",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "Before request [uri=/h2-console/icon_history.gif]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:18:23.321Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-5",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "After request [uri=/h2-console/icon_help.gif]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:18:23.321Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-1",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "After request [uri=/h2-console/icon_history.gif]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:18:23.368Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-2",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "After request [uri=/h2-console/tables.do?jsessionid=756d4979c51afa90d54ed46bf66999b0]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:18:23.377Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-6",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "Before request [uri=/h2-console/tree.js]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:18:23.380Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-6",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "After request [uri=/h2-console/tree.js]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:18:23.385Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-7",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "Before request [uri=/h2-console/tree_minus.gif]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:18:23.386Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-10",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "Before request [uri=/h2-console/tree_plus.gif]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:18:23.387Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-8",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "Before request [uri=/h2-console/tree_table.gif]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:18:23.386Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-9",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "Before request [uri=/h2-console/tree_database.gif]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:18:23.388Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-3",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "Before request [uri=/h2-console/tree_column.gif]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:18:23.388Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-4",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "Before request [uri=/h2-console/tree_empty.gif]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:18:23.390Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-7",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "After request [uri=/h2-console/tree_minus.gif]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:18:23.391Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-8",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "After request [uri=/h2-console/tree_table.gif]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:18:23.391Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-9",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "After request [uri=/h2-console/tree_database.gif]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:18:23.392Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-10",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "After request [uri=/h2-console/tree_plus.gif]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:18:23.392Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-4",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "After request [uri=/h2-console/tree_empty.gif]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:18:23.393Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-3",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "After request [uri=/h2-console/tree_column.gif]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:18:23.398Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-5",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "Before request [uri=/h2-console/tree_type.gif]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:18:23.398Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-1",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "Before request [uri=/h2-console/tree_index_az.gif]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:18:23.399Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-2",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "Before request [uri=/h2-console/tree_index.gif]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:18:23.400Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-2",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "After request [uri=/h2-console/tree_index.gif]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:18:23.401Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-1",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "After request [uri=/h2-console/tree_index_az.gif]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:18:23.401Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-5",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "After request [uri=/h2-console/tree_type.gif]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:18:23.420Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-6",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "Before request [uri=/h2-console/tree_folder.gif]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:18:23.424Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-6",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "After request [uri=/h2-console/tree_folder.gif]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:18:23.427Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-8",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "Before request [uri=/h2-console/tree_user.gif]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:18:23.427Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-7",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "Before request [uri=/h2-console/tree_users.gif]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:18:23.428Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-9",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "Before request [uri=/h2-console/tree_info.gif]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:18:23.431Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-8",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "After request [uri=/h2-console/tree_user.gif]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:18:23.431Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-9",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "After request [uri=/h2-console/tree_info.gif]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:18:23.431Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-7",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "After request [uri=/h2-console/tree_users.gif]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:18:24.979Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-4",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "Before request [uri=/h2-console/query.do?jsessionid=756d4979c51afa90d54ed46bf66999b0]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:18:24.988Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-4",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "After request [uri=/h2-console/query.do?jsessionid=756d4979c51afa90d54ed46bf66999b0;payload=jsessionid=756d4979c51afa90d54ed46bf66999b0&sql=SELECT%0D%0A++++++++AC.ID_ACORDO_COMERCIAL%2C%0D%0A++++++++AC.ID_VERSAO_ACORDO_COMERCIAL+%0D%0A++++FROM%0D%0A++++++++%28SELECT%0D%0A++++++++++++ID_ACORDO_COMERCIAL%2C%0D%0A++++++++++++MAX%28ID_VERSAO_ACORDO_COMERCIAL%29+AS+MAIOR_VERSAO+%0D%0A++++++++FROM%0D%0A++++++++++++ACORDO_COMERCIAL+%0D%0A++++++++GROUP+BY%0D%0A++++++++++++ID_ACORDO_COMERCIAL%29+as+x+%0D%0A++++INNER+JOIN%0D%0A++++++++ACORDO_COMERCIAL+as+AC+%0D%0A++++++++++++ON+x.ID_ACORDO_COMERCIAL+%3D+AC.ID_ACORDO_COMERCIAL+%0D%0A++++++++++++AND+x.MAIOR_VERSAO+%3D+AC.ID_VERSAO_ACORDO_COMERCIAL+%0D%0A++++ORDER+BY%0D%0A++++++++DATA_INCLUSAO+DESC]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:18:25.001Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-10",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "Before request [uri=/h2-console/table.js]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:18:25.005Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-10",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "After request [uri=/h2-console/table.js]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:21:07.017Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "br.com.arthur.implementacaoh2.App",
  "message" : "Starting App on DESKTOP-JGRRF34 with PID 6408 (C:\\Users\\nakag\\Documents\\workspace-spring-tool-suite-4-4.3.2.RELEASE\\implementacaoh2\\target\\classes started by nakag in C:\\Users\\nakag\\Documents\\workspace-spring-tool-suite-4-4.3.2.RELEASE\\implementacaoh2)",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:21:07.033Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "br.com.arthur.implementacaoh2.App",
  "message" : "No active profile set, falling back to default profiles: default",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:21:18.268Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "br.com.arthur.implementacaoh2.App",
  "message" : "Starting App on DESKTOP-JGRRF34 with PID 6036 (C:\\Users\\nakag\\Documents\\workspace-spring-tool-suite-4-4.3.2.RELEASE\\implementacaoh2\\target\\classes started by nakag in C:\\Users\\nakag\\Documents\\workspace-spring-tool-suite-4-4.3.2.RELEASE\\implementacaoh2)",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:21:18.286Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "br.com.arthur.implementacaoh2.App",
  "message" : "No active profile set, falling back to default profiles: default",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:21:18.888Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.springframework.data.repository.config.RepositoryConfigurationDelegate",
  "message" : "Bootstrapping Spring Data repositories in DEFAULT mode.",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:21:18.984Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.springframework.data.repository.config.RepositoryConfigurationDelegate",
  "message" : "Finished Spring Data repository scanning in 88ms. Found 6 repository interfaces.",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:21:19.309Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
  "message" : "Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$539065a5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:21:19.810Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.springframework.boot.web.embedded.tomcat.TomcatWebServer",
  "message" : "Tomcat initialized with port(s): 8080 (http)",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:21:19.823Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.apache.coyote.http11.Http11NioProtocol",
  "message" : "Initializing ProtocolHandler [\"http-nio-8080\"]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:21:19.833Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.apache.catalina.core.StandardService",
  "message" : "Starting service [Tomcat]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:21:19.834Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.apache.catalina.core.StandardEngine",
  "message" : "Starting Servlet engine: [Apache Tomcat/9.0.22]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:21:19.940Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]",
  "message" : "Initializing Spring embedded WebApplicationContext",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:21:19.940Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.springframework.web.context.ContextLoader",
  "message" : "Root WebApplicationContext: initialization completed in 1615 ms",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:21:20.001Z",
  "level" : "DEBUG",
  "thread" : "main",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "Filter 'logFilter' configured for use",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:21:20.146Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "com.zaxxer.hikari.HikariDataSource",
  "message" : "HikariPool-1 - Starting...",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:21:20.308Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "com.zaxxer.hikari.HikariDataSource",
  "message" : "HikariPool-1 - Start completed.",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:21:20.372Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.hibernate.jpa.internal.util.LogHelper",
  "message" : "HHH000204: Processing PersistenceUnitInfo [\n\tname: default\n\t...]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:21:20.434Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.hibernate.Version",
  "message" : "HHH000412: Hibernate Core {5.3.10.Final}",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:21:20.435Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.hibernate.cfg.Environment",
  "message" : "HHH000206: hibernate.properties not found",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:21:20.565Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.hibernate.annotations.common.Version",
  "message" : "HCANN000001: Hibernate Commons Annotations {5.0.4.Final}",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:21:20.713Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.hibernate.dialect.Dialect",
  "message" : "HHH000400: Using dialect: org.hibernate.dialect.H2Dialect",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:21:20.962Z",
  "level" : "WARN",
  "thread" : "main",
  "logger" : "org.hibernate.mapping.RootClass",
  "message" : "HHH000038: Composite-id class does not override equals(): br.com.arthur.implementacaoh2.entities.ContaRepasseId",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:21:20.962Z",
  "level" : "WARN",
  "thread" : "main",
  "logger" : "org.hibernate.mapping.RootClass",
  "message" : "HHH000039: Composite-id class does not override hashCode(): br.com.arthur.implementacaoh2.entities.ContaRepasseId",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:21:21.435Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.hibernate.tool.schema.internal.SchemaCreatorImpl",
  "message" : "HHH000476: Executing import script 'org.hibernate.tool.schema.internal.exec.ScriptSourceInputNonExistentImpl@8eb6f9a'",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:21:21.437Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean",
  "message" : "Initialized JPA EntityManagerFactory for persistence unit 'default'",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:21:21.720Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.hibernate.hql.internal.QueryTranslatorFactoryInitiator",
  "message" : "HHH000397: Using ASTQueryTranslatorFactory",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:21:22.307Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor",
  "message" : "Initializing ExecutorService 'applicationTaskExecutor'",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:21:22.353Z",
  "level" : "WARN",
  "thread" : "main",
  "logger" : "org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration$JpaWebMvcConfiguration",
  "message" : "spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:21:22.509Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.apache.coyote.http11.Http11NioProtocol",
  "message" : "Starting ProtocolHandler [\"http-nio-8080\"]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:21:22.532Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.springframework.boot.web.embedded.tomcat.TomcatWebServer",
  "message" : "Tomcat started on port(s): 8080 (http) with context path ''",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:21:22.533Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "br.com.arthur.implementacaoh2.App",
  "message" : "Started App in 4.56 seconds (JVM running for 5.166)",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:21:30.928Z",
  "level" : "INFO",
  "thread" : "http-nio-8080-exec-2",
  "logger" : "org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]",
  "message" : "Initializing Spring DispatcherServlet 'dispatcherServlet'",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:21:30.929Z",
  "level" : "INFO",
  "thread" : "http-nio-8080-exec-2",
  "logger" : "org.springframework.web.servlet.DispatcherServlet",
  "message" : "Initializing Servlet 'dispatcherServlet'",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:21:30.937Z",
  "level" : "INFO",
  "thread" : "http-nio-8080-exec-2",
  "logger" : "org.springframework.web.servlet.DispatcherServlet",
  "message" : "Completed initialization in 8 ms",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:21:30.952Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-2",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "Before request [uri=/acordos_comerciais]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:21:31.220Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-2",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "After request [uri=/acordos_comerciais;payload={\n    \"id_acordo_comercial\": 1,\n    \"id_versao_acordo_comercial\": 1,\n    \"id_parceiro\": 1,\n    \"id_produto\": 1,\n    \"situacao\": \"ativo\",\n    \"data_inicio_vigencia\": \"2020-12-01\",\n    \"vigencia_indeterminada\": false,\n    \"data_fim_vigencia\": \"2020-12-02\",\n    \"configuracoes_canal\": [\n        {\n            \"id_canal\": \"C1\"\n        },\n        {\n            \"id_canal\": \"71\"\n        }\n    ],\n    \"contas_repasse\": [\n        {\n            \"id_conta\": 1,\n            \"codigo_finalidade_spb\": \"12345\",\n            \"percentual_raterio\": 50\n        },\n        {\n            \"id_conta\": 2,\n            \"codigo_finalidade_spb\": \"12345\",\n            \"percentual_raterio\": 50\n        }\n    ]\n}]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:21:33.715Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-3",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "Before request [uri=/acordos_comerciais]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:21:33.731Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-3",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "After request [uri=/acordos_comerciais;payload={\n    \"id_acordo_comercial\": 1,\n    \"id_versao_acordo_comercial\": 2,\n    \"id_parceiro\": 1,\n    \"id_produto\": 1,\n    \"situacao\": \"ativo\",\n    \"data_inicio_vigencia\": \"2020-12-01\",\n    \"vigencia_indeterminada\": false,\n    \"data_fim_vigencia\": \"2020-12-02\",\n    \"configuracoes_canal\": [\n        {\n            \"id_canal\": \"C1\"\n        },\n        {\n            \"id_canal\": \"71\"\n        }\n    ],\n    \"contas_repasse\": [\n        {\n            \"id_conta\": 1,\n            \"codigo_finalidade_spb\": \"12345\",\n            \"percentual_raterio\": 50\n        },\n        {\n            \"id_conta\": 2,\n            \"codigo_finalidade_spb\": \"12345\",\n            \"percentual_raterio\": 50\n        }\n    ]\n}]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:21:36.526Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-4",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "Before request [uri=/acordos_comerciais]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:21:36.596Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-4",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "After request [uri=/acordos_comerciais]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:21:36.598Z",
  "level" : "ERROR",
  "thread" : "http-nio-8080-exec-4",
  "logger" : "org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]",
  "message" : "Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.core.convert.ConversionFailedException: Failed to convert from type [java.lang.Object[]] to type [br.com.arthur.implementacaoh2.entities.AcordoComercialId] for value '{1, 2}'; nested exception is org.springframework.core.convert.ConverterNotFoundException: No converter found capable of converting from type [java.math.BigInteger] to type [br.com.arthur.implementacaoh2.entities.AcordoComercialId]] with root cause",
  "context" : "default",
  "exception" : "org.springframework.core.convert.ConverterNotFoundException: No converter found capable of converting from type [java.math.BigInteger] to type [br.com.arthur.implementacaoh2.entities.AcordoComercialId]\r\n\tat org.springframework.core.convert.support.GenericConversionService.handleConverterNotFound(GenericConversionService.java:321)\r\n\tat org.springframework.core.convert.support.GenericConversionService.convert(GenericConversionService.java:194)\r\n\tat org.springframework.core.convert.support.ArrayToObjectConverter.convert(ArrayToObjectConverter.java:68)\r\n\tat org.springframework.core.convert.support.ConversionUtils.invokeConverter(ConversionUtils.java:41)\r\n\tat org.springframework.core.convert.support.GenericConversionService.convert(GenericConversionService.java:191)\r\n\tat org.springframework.core.convert.support.GenericConversionService.convert(GenericConversionService.java:174)\r\n\tat org.springframework.data.repository.query.ResultProcessor$ProjectingConverter.convert(ResultProcessor.java:293)\r\n\tat org.springframework.data.repository.query.ResultProcessor$ChainingConverter.lambda$and$0(ResultProcessor.java:213)\r\n\tat org.springframework.data.repository.query.ResultProcessor$ChainingConverter.convert(ResultProcessor.java:224)\r\n\tat org.springframework.data.repository.query.ResultProcessor.processResult(ResultProcessor.java:152)\r\n\tat org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:141)\r\n\tat org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:125)\r\n\tat org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.doInvoke(RepositoryFactorySupport.java:605)\r\n\tat org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.lambda$invoke$3(RepositoryFactorySupport.java:595)\r\n\tat org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.invoke(RepositoryFactorySupport.java:595)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\r\n\tat org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:59)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\r\n\tat org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:295)\r\n\tat org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\r\n\tat org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\r\n\tat org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:144)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\r\n\tat org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$ExposeRepositoryInvocationInterceptor.invoke(CrudMethodMetadataPostProcessor.java:364)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\r\n\tat org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\r\n\tat org.springframework.data.repository.core.support.SurroundingTransactionDetectorMethodInterceptor.invoke(SurroundingTransactionDetectorMethodInterceptor.java:61)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\r\n\tat org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)\r\n\tat com.sun.proxy.$Proxy97.consultarAcordosComerciais(Unknown Source)\r\n\tat br.com.arthur.implementacaoh2.services.AcordoComercialRepositoryImpl.consultaAcordosComerciais(AcordoComercialRepositoryImpl.java:47)\r\n\tat br.com.arthur.implementacaoh2.services.AcordoComercialRepositoryImpl$$FastClassBySpringCGLIB$$96d08d3b.invoke(<generated>)\r\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\r\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\r\n\tat org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\r\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)\r\n\tat br.com.arthur.implementacaoh2.services.AcordoComercialRepositoryImpl$$EnhancerBySpringCGLIB$$f9e057c8.consultaAcordosComerciais(<generated>)\r\n\tat br.com.arthur.implementacaoh2.entrypoints.AcordosComerciaisController.consulta(AcordosComerciaisController.java:34)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)\r\n\tat org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)\r\n\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)\r\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)\r\n\tat org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:897)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:634)\r\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:741)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.web.filter.AbstractRequestLoggingFilter.doFilterInternal(AbstractRequestLoggingFilter.java:262)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)\r\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)\r\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)\r\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)\r\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\r\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)\r\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)\r\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)\r\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)\r\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)\r\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)\r\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"
}{
  "timestamp" : "2020-03-12T02:24:22.057Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "br.com.arthur.implementacaoh2.App",
  "message" : "Starting App on DESKTOP-JGRRF34 with PID 11800 (C:\\Users\\nakag\\Documents\\workspace-spring-tool-suite-4-4.3.2.RELEASE\\implementacaoh2\\target\\classes started by nakag in C:\\Users\\nakag\\Documents\\workspace-spring-tool-suite-4-4.3.2.RELEASE\\implementacaoh2)",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:24:22.074Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "br.com.arthur.implementacaoh2.App",
  "message" : "No active profile set, falling back to default profiles: default",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:24:27.956Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "br.com.arthur.implementacaoh2.App",
  "message" : "Starting App on DESKTOP-JGRRF34 with PID 12420 (C:\\Users\\nakag\\Documents\\workspace-spring-tool-suite-4-4.3.2.RELEASE\\implementacaoh2\\target\\classes started by nakag in C:\\Users\\nakag\\Documents\\workspace-spring-tool-suite-4-4.3.2.RELEASE\\implementacaoh2)",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:24:27.971Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "br.com.arthur.implementacaoh2.App",
  "message" : "No active profile set, falling back to default profiles: default",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:24:28.553Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.springframework.data.repository.config.RepositoryConfigurationDelegate",
  "message" : "Bootstrapping Spring Data repositories in DEFAULT mode.",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:24:28.643Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.springframework.data.repository.config.RepositoryConfigurationDelegate",
  "message" : "Finished Spring Data repository scanning in 83ms. Found 6 repository interfaces.",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:24:28.966Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
  "message" : "Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$cd774351] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:24:29.451Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.springframework.boot.web.embedded.tomcat.TomcatWebServer",
  "message" : "Tomcat initialized with port(s): 8080 (http)",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:24:29.465Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.apache.coyote.http11.Http11NioProtocol",
  "message" : "Initializing ProtocolHandler [\"http-nio-8080\"]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:24:29.474Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.apache.catalina.core.StandardService",
  "message" : "Starting service [Tomcat]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:24:29.475Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.apache.catalina.core.StandardEngine",
  "message" : "Starting Servlet engine: [Apache Tomcat/9.0.22]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:24:29.598Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]",
  "message" : "Initializing Spring embedded WebApplicationContext",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:24:29.598Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.springframework.web.context.ContextLoader",
  "message" : "Root WebApplicationContext: initialization completed in 1588 ms",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:24:29.657Z",
  "level" : "DEBUG",
  "thread" : "main",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "Filter 'logFilter' configured for use",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:24:29.814Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "com.zaxxer.hikari.HikariDataSource",
  "message" : "HikariPool-1 - Starting...",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:24:29.960Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "com.zaxxer.hikari.HikariDataSource",
  "message" : "HikariPool-1 - Start completed.",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:24:30.031Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.hibernate.jpa.internal.util.LogHelper",
  "message" : "HHH000204: Processing PersistenceUnitInfo [\n\tname: default\n\t...]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:24:30.104Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.hibernate.Version",
  "message" : "HHH000412: Hibernate Core {5.3.10.Final}",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:24:30.105Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.hibernate.cfg.Environment",
  "message" : "HHH000206: hibernate.properties not found",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:24:30.236Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.hibernate.annotations.common.Version",
  "message" : "HCANN000001: Hibernate Commons Annotations {5.0.4.Final}",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:24:30.381Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.hibernate.dialect.Dialect",
  "message" : "HHH000400: Using dialect: org.hibernate.dialect.H2Dialect",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:24:30.610Z",
  "level" : "WARN",
  "thread" : "main",
  "logger" : "org.hibernate.mapping.RootClass",
  "message" : "HHH000038: Composite-id class does not override equals(): br.com.arthur.implementacaoh2.entities.ContaRepasseId",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:24:30.610Z",
  "level" : "WARN",
  "thread" : "main",
  "logger" : "org.hibernate.mapping.RootClass",
  "message" : "HHH000039: Composite-id class does not override hashCode(): br.com.arthur.implementacaoh2.entities.ContaRepasseId",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:24:31.103Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.hibernate.tool.schema.internal.SchemaCreatorImpl",
  "message" : "HHH000476: Executing import script 'org.hibernate.tool.schema.internal.exec.ScriptSourceInputNonExistentImpl@5cc1bf20'",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:24:31.106Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean",
  "message" : "Initialized JPA EntityManagerFactory for persistence unit 'default'",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:24:31.408Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.hibernate.hql.internal.QueryTranslatorFactoryInitiator",
  "message" : "HHH000397: Using ASTQueryTranslatorFactory",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:24:32.084Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor",
  "message" : "Initializing ExecutorService 'applicationTaskExecutor'",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:24:32.132Z",
  "level" : "WARN",
  "thread" : "main",
  "logger" : "org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration$JpaWebMvcConfiguration",
  "message" : "spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:24:32.310Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.apache.coyote.http11.Http11NioProtocol",
  "message" : "Starting ProtocolHandler [\"http-nio-8080\"]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:24:32.343Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.springframework.boot.web.embedded.tomcat.TomcatWebServer",
  "message" : "Tomcat started on port(s): 8080 (http) with context path ''",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:24:32.346Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "br.com.arthur.implementacaoh2.App",
  "message" : "Started App in 4.661 seconds (JVM running for 5.2)",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:24:40.367Z",
  "level" : "INFO",
  "thread" : "http-nio-8080-exec-2",
  "logger" : "org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]",
  "message" : "Initializing Spring DispatcherServlet 'dispatcherServlet'",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:24:40.368Z",
  "level" : "INFO",
  "thread" : "http-nio-8080-exec-2",
  "logger" : "org.springframework.web.servlet.DispatcherServlet",
  "message" : "Initializing Servlet 'dispatcherServlet'",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:24:40.377Z",
  "level" : "INFO",
  "thread" : "http-nio-8080-exec-2",
  "logger" : "org.springframework.web.servlet.DispatcherServlet",
  "message" : "Completed initialization in 9 ms",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:24:40.391Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-2",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "Before request [uri=/acordos_comerciais]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:24:40.658Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-2",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "After request [uri=/acordos_comerciais;payload={\n    \"id_acordo_comercial\": 1,\n    \"id_versao_acordo_comercial\": 1,\n    \"id_parceiro\": 1,\n    \"id_produto\": 1,\n    \"situacao\": \"ativo\",\n    \"data_inicio_vigencia\": \"2020-12-01\",\n    \"vigencia_indeterminada\": false,\n    \"data_fim_vigencia\": \"2020-12-02\",\n    \"configuracoes_canal\": [\n        {\n            \"id_canal\": \"C1\"\n        },\n        {\n            \"id_canal\": \"71\"\n        }\n    ],\n    \"contas_repasse\": [\n        {\n            \"id_conta\": 1,\n            \"codigo_finalidade_spb\": \"12345\",\n            \"percentual_raterio\": 50\n        },\n        {\n            \"id_conta\": 2,\n            \"codigo_finalidade_spb\": \"12345\",\n            \"percentual_raterio\": 50\n        }\n    ]\n}]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:24:43.579Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-3",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "Before request [uri=/acordos_comerciais]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:24:43.594Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-3",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "After request [uri=/acordos_comerciais;payload={\n    \"id_acordo_comercial\": 1,\n    \"id_versao_acordo_comercial\": 2,\n    \"id_parceiro\": 1,\n    \"id_produto\": 1,\n    \"situacao\": \"ativo\",\n    \"data_inicio_vigencia\": \"2020-12-01\",\n    \"vigencia_indeterminada\": false,\n    \"data_fim_vigencia\": \"2020-12-02\",\n    \"configuracoes_canal\": [\n        {\n            \"id_canal\": \"C1\"\n        },\n        {\n            \"id_canal\": \"71\"\n        }\n    ],\n    \"contas_repasse\": [\n        {\n            \"id_conta\": 1,\n            \"codigo_finalidade_spb\": \"12345\",\n            \"percentual_raterio\": 50\n        },\n        {\n            \"id_conta\": 2,\n            \"codigo_finalidade_spb\": \"12345\",\n            \"percentual_raterio\": 50\n        }\n    ]\n}]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:24:45.466Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-4",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "Before request [uri=/acordos_comerciais]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:24:45.523Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-4",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "After request [uri=/acordos_comerciais]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:24:45.526Z",
  "level" : "ERROR",
  "thread" : "http-nio-8080-exec-4",
  "logger" : "org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]",
  "message" : "Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.core.convert.ConversionFailedException: Failed to convert from type [java.lang.Object[]] to type [br.com.arthur.implementacaoh2.entities.AcordoComercialId] for value '{1, 2}'; nested exception is org.springframework.core.convert.ConverterNotFoundException: No converter found capable of converting from type [java.math.BigInteger] to type [br.com.arthur.implementacaoh2.entities.AcordoComercialId]] with root cause",
  "context" : "default",
  "exception" : "org.springframework.core.convert.ConverterNotFoundException: No converter found capable of converting from type [java.math.BigInteger] to type [br.com.arthur.implementacaoh2.entities.AcordoComercialId]\r\n\tat org.springframework.core.convert.support.GenericConversionService.handleConverterNotFound(GenericConversionService.java:321)\r\n\tat org.springframework.core.convert.support.GenericConversionService.convert(GenericConversionService.java:194)\r\n\tat org.springframework.core.convert.support.ArrayToObjectConverter.convert(ArrayToObjectConverter.java:68)\r\n\tat org.springframework.core.convert.support.ConversionUtils.invokeConverter(ConversionUtils.java:41)\r\n\tat org.springframework.core.convert.support.GenericConversionService.convert(GenericConversionService.java:191)\r\n\tat org.springframework.core.convert.support.GenericConversionService.convert(GenericConversionService.java:174)\r\n\tat org.springframework.data.repository.query.ResultProcessor$ProjectingConverter.convert(ResultProcessor.java:293)\r\n\tat org.springframework.data.repository.query.ResultProcessor$ChainingConverter.lambda$and$0(ResultProcessor.java:213)\r\n\tat org.springframework.data.repository.query.ResultProcessor$ChainingConverter.convert(ResultProcessor.java:224)\r\n\tat org.springframework.data.repository.query.ResultProcessor.processResult(ResultProcessor.java:152)\r\n\tat org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:141)\r\n\tat org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:125)\r\n\tat org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.doInvoke(RepositoryFactorySupport.java:605)\r\n\tat org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.lambda$invoke$3(RepositoryFactorySupport.java:595)\r\n\tat org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.invoke(RepositoryFactorySupport.java:595)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\r\n\tat org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:59)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\r\n\tat org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:295)\r\n\tat org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\r\n\tat org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\r\n\tat org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:144)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\r\n\tat org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$ExposeRepositoryInvocationInterceptor.invoke(CrudMethodMetadataPostProcessor.java:364)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\r\n\tat org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\r\n\tat org.springframework.data.repository.core.support.SurroundingTransactionDetectorMethodInterceptor.invoke(SurroundingTransactionDetectorMethodInterceptor.java:61)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\r\n\tat org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)\r\n\tat com.sun.proxy.$Proxy97.consultarAcordosComerciais(Unknown Source)\r\n\tat br.com.arthur.implementacaoh2.services.AcordoComercialRepositoryImpl.consultaAcordosComerciais(AcordoComercialRepositoryImpl.java:47)\r\n\tat br.com.arthur.implementacaoh2.services.AcordoComercialRepositoryImpl$$FastClassBySpringCGLIB$$96d08d3b.invoke(<generated>)\r\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\r\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\r\n\tat org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\r\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)\r\n\tat br.com.arthur.implementacaoh2.services.AcordoComercialRepositoryImpl$$EnhancerBySpringCGLIB$$9f89f913.consultaAcordosComerciais(<generated>)\r\n\tat br.com.arthur.implementacaoh2.entrypoints.AcordosComerciaisController.consulta(AcordosComerciaisController.java:34)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)\r\n\tat org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)\r\n\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)\r\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)\r\n\tat org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:897)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:634)\r\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:741)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.web.filter.AbstractRequestLoggingFilter.doFilterInternal(AbstractRequestLoggingFilter.java:262)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)\r\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)\r\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)\r\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)\r\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\r\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)\r\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)\r\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)\r\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)\r\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)\r\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)\r\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"
}{
  "timestamp" : "2020-03-12T02:26:37.000Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "br.com.arthur.implementacaoh2.App",
  "message" : "Starting App on DESKTOP-JGRRF34 with PID 8960 (C:\\Users\\nakag\\Documents\\workspace-spring-tool-suite-4-4.3.2.RELEASE\\implementacaoh2\\target\\classes started by nakag in C:\\Users\\nakag\\Documents\\workspace-spring-tool-suite-4-4.3.2.RELEASE\\implementacaoh2)",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:26:37.016Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "br.com.arthur.implementacaoh2.App",
  "message" : "No active profile set, falling back to default profiles: default",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:26:37.603Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.springframework.data.repository.config.RepositoryConfigurationDelegate",
  "message" : "Bootstrapping Spring Data repositories in DEFAULT mode.",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:26:37.700Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.springframework.data.repository.config.RepositoryConfigurationDelegate",
  "message" : "Finished Spring Data repository scanning in 89ms. Found 6 repository interfaces.",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:26:38.043Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
  "message" : "Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$5673c307] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:26:38.519Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.springframework.boot.web.embedded.tomcat.TomcatWebServer",
  "message" : "Tomcat initialized with port(s): 8080 (http)",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:26:38.533Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.apache.coyote.http11.Http11NioProtocol",
  "message" : "Initializing ProtocolHandler [\"http-nio-8080\"]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:26:38.543Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.apache.catalina.core.StandardService",
  "message" : "Starting service [Tomcat]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:26:38.544Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.apache.catalina.core.StandardEngine",
  "message" : "Starting Servlet engine: [Apache Tomcat/9.0.22]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:26:38.656Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]",
  "message" : "Initializing Spring embedded WebApplicationContext",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:26:38.657Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.springframework.web.context.ContextLoader",
  "message" : "Root WebApplicationContext: initialization completed in 1603 ms",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:26:38.729Z",
  "level" : "DEBUG",
  "thread" : "main",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "Filter 'logFilter' configured for use",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:26:38.896Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "com.zaxxer.hikari.HikariDataSource",
  "message" : "HikariPool-1 - Starting...",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:26:39.056Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "com.zaxxer.hikari.HikariDataSource",
  "message" : "HikariPool-1 - Start completed.",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:26:39.139Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.hibernate.jpa.internal.util.LogHelper",
  "message" : "HHH000204: Processing PersistenceUnitInfo [\n\tname: default\n\t...]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:26:39.207Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.hibernate.Version",
  "message" : "HHH000412: Hibernate Core {5.3.10.Final}",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:26:39.208Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.hibernate.cfg.Environment",
  "message" : "HHH000206: hibernate.properties not found",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:26:39.337Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.hibernate.annotations.common.Version",
  "message" : "HCANN000001: Hibernate Commons Annotations {5.0.4.Final}",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:26:39.478Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.hibernate.dialect.Dialect",
  "message" : "HHH000400: Using dialect: org.hibernate.dialect.H2Dialect",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:26:39.734Z",
  "level" : "WARN",
  "thread" : "main",
  "logger" : "org.hibernate.mapping.RootClass",
  "message" : "HHH000038: Composite-id class does not override equals(): br.com.arthur.implementacaoh2.entities.ContaRepasseId",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:26:39.734Z",
  "level" : "WARN",
  "thread" : "main",
  "logger" : "org.hibernate.mapping.RootClass",
  "message" : "HHH000039: Composite-id class does not override hashCode(): br.com.arthur.implementacaoh2.entities.ContaRepasseId",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:26:40.211Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.hibernate.tool.schema.internal.SchemaCreatorImpl",
  "message" : "HHH000476: Executing import script 'org.hibernate.tool.schema.internal.exec.ScriptSourceInputNonExistentImpl@35c8be21'",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:26:40.214Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean",
  "message" : "Initialized JPA EntityManagerFactory for persistence unit 'default'",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:26:40.537Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.hibernate.hql.internal.QueryTranslatorFactoryInitiator",
  "message" : "HHH000397: Using ASTQueryTranslatorFactory",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:26:41.167Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor",
  "message" : "Initializing ExecutorService 'applicationTaskExecutor'",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:26:41.217Z",
  "level" : "WARN",
  "thread" : "main",
  "logger" : "org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration$JpaWebMvcConfiguration",
  "message" : "spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:26:41.399Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.apache.coyote.http11.Http11NioProtocol",
  "message" : "Starting ProtocolHandler [\"http-nio-8080\"]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:26:41.411Z",
  "level" : "ERROR",
  "thread" : "main",
  "logger" : "org.apache.catalina.util.LifecycleBase",
  "message" : "Failed to start component [Connector[HTTP/1.1-8080]]",
  "context" : "default",
  "exception" : "org.apache.catalina.LifecycleException: Protocol handler start failed\r\n\tat org.apache.catalina.connector.Connector.startInternal(Connector.java:1008)\r\n\tat org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)\r\n\tat org.apache.catalina.core.StandardService.addConnector(StandardService.java:227)\r\n\tat org.springframework.boot.web.embedded.tomcat.TomcatWebServer.addPreviouslyRemovedConnectors(TomcatWebServer.java:263)\r\n\tat org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:195)\r\n\tat org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.startWebServer(ServletWebServerApplicationContext.java:297)\r\n\tat org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.finishRefresh(ServletWebServerApplicationContext.java:163)\r\n\tat org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:552)\r\n\tat org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141)\r\n\tat org.springframework.boot.SpringApplication.refresh(SpringApplication.java:743)\r\n\tat org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:390)\r\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:312)\r\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:1214)\r\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:1203)\r\n\tat br.com.arthur.implementacaoh2.App.main(App.java:10)\r\nCaused by: java.net.BindException: Address already in use: bind\r\n\tat sun.nio.ch.Net.bind0(Native Method)\r\n\tat sun.nio.ch.Net.bind(Net.java:433)\r\n\tat sun.nio.ch.Net.bind(Net.java:425)\r\n\tat sun.nio.ch.ServerSocketChannelImpl.bind(ServerSocketChannelImpl.java:223)\r\n\tat sun.nio.ch.ServerSocketAdaptor.bind(ServerSocketAdaptor.java:74)\r\n\tat org.apache.tomcat.util.net.NioEndpoint.initServerSocket(NioEndpoint.java:230)\r\n\tat org.apache.tomcat.util.net.NioEndpoint.bind(NioEndpoint.java:213)\r\n\tat org.apache.tomcat.util.net.AbstractEndpoint.bindWithCleanup(AbstractEndpoint.java:1124)\r\n\tat org.apache.tomcat.util.net.AbstractEndpoint.start(AbstractEndpoint.java:1210)\r\n\tat org.apache.coyote.AbstractProtocol.start(AbstractProtocol.java:585)\r\n\tat org.apache.catalina.connector.Connector.startInternal(Connector.java:1005)\r\n\t... 14 common frames omitted\r\n"
}{
  "timestamp" : "2020-03-12T02:26:41.417Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.apache.coyote.http11.Http11NioProtocol",
  "message" : "Pausing ProtocolHandler [\"http-nio-8080\"]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:26:41.417Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.apache.catalina.core.StandardService",
  "message" : "Stopping service [Tomcat]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:26:41.424Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.apache.catalina.util.LifecycleBase",
  "message" : "The stop() method was called on component [StandardServer[-1]] after stop() had already been called. The second call will be ignored.",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:26:41.424Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.apache.coyote.http11.Http11NioProtocol",
  "message" : "Stopping ProtocolHandler [\"http-nio-8080\"]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:26:41.425Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.apache.coyote.http11.Http11NioProtocol",
  "message" : "Destroying ProtocolHandler [\"http-nio-8080\"]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:26:41.428Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener",
  "message" : "\r\n\r\nError starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:26:41.431Z",
  "level" : "ERROR",
  "thread" : "main",
  "logger" : "org.springframework.boot.diagnostics.LoggingFailureAnalysisReporter",
  "message" : "\r\n\r\n***************************\r\nAPPLICATION FAILED TO START\r\n***************************\r\n\r\nDescription:\r\n\r\nThe Tomcat connector configured to listen on port 8080 failed to start. The port may already be in use or the connector may be misconfigured.\r\n\r\nAction:\r\n\r\nVerify the connector's configuration, identify and stop any process that's listening on port 8080, or configure this application to listen on another port.\r\n",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:26:41.434Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor",
  "message" : "Shutting down ExecutorService 'applicationTaskExecutor'",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:26:41.436Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean",
  "message" : "Closing JPA EntityManagerFactory for persistence unit 'default'",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:26:41.437Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl",
  "message" : "HHH000477: Starting delayed evictData of schema as part of SessionFactory shut-down'",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:26:41.450Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "com.zaxxer.hikari.HikariDataSource",
  "message" : "HikariPool-1 - Shutdown initiated...",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:26:41.453Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "com.zaxxer.hikari.HikariDataSource",
  "message" : "HikariPool-1 - Shutdown completed.",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:26:50.858Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "br.com.arthur.implementacaoh2.App",
  "message" : "Starting App on DESKTOP-JGRRF34 with PID 4968 (C:\\Users\\nakag\\Documents\\workspace-spring-tool-suite-4-4.3.2.RELEASE\\implementacaoh2\\target\\classes started by nakag in C:\\Users\\nakag\\Documents\\workspace-spring-tool-suite-4-4.3.2.RELEASE\\implementacaoh2)",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:26:50.874Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "br.com.arthur.implementacaoh2.App",
  "message" : "No active profile set, falling back to default profiles: default",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:26:51.487Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.springframework.data.repository.config.RepositoryConfigurationDelegate",
  "message" : "Bootstrapping Spring Data repositories in DEFAULT mode.",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:26:51.584Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.springframework.data.repository.config.RepositoryConfigurationDelegate",
  "message" : "Finished Spring Data repository scanning in 89ms. Found 6 repository interfaces.",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:26:51.893Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
  "message" : "Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$1cf12532] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:26:52.357Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.springframework.boot.web.embedded.tomcat.TomcatWebServer",
  "message" : "Tomcat initialized with port(s): 8080 (http)",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:26:52.372Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.apache.coyote.http11.Http11NioProtocol",
  "message" : "Initializing ProtocolHandler [\"http-nio-8080\"]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:26:52.383Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.apache.catalina.core.StandardService",
  "message" : "Starting service [Tomcat]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:26:52.384Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.apache.catalina.core.StandardEngine",
  "message" : "Starting Servlet engine: [Apache Tomcat/9.0.22]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:26:52.489Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]",
  "message" : "Initializing Spring embedded WebApplicationContext",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:26:52.489Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.springframework.web.context.ContextLoader",
  "message" : "Root WebApplicationContext: initialization completed in 1579 ms",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:26:52.543Z",
  "level" : "DEBUG",
  "thread" : "main",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "Filter 'logFilter' configured for use",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:26:52.689Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "com.zaxxer.hikari.HikariDataSource",
  "message" : "HikariPool-1 - Starting...",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:26:52.836Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "com.zaxxer.hikari.HikariDataSource",
  "message" : "HikariPool-1 - Start completed.",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:26:52.918Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.hibernate.jpa.internal.util.LogHelper",
  "message" : "HHH000204: Processing PersistenceUnitInfo [\n\tname: default\n\t...]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:26:53.003Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.hibernate.Version",
  "message" : "HHH000412: Hibernate Core {5.3.10.Final}",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:26:53.005Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.hibernate.cfg.Environment",
  "message" : "HHH000206: hibernate.properties not found",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:26:53.146Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.hibernate.annotations.common.Version",
  "message" : "HCANN000001: Hibernate Commons Annotations {5.0.4.Final}",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:26:53.305Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.hibernate.dialect.Dialect",
  "message" : "HHH000400: Using dialect: org.hibernate.dialect.H2Dialect",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:26:53.571Z",
  "level" : "WARN",
  "thread" : "main",
  "logger" : "org.hibernate.mapping.RootClass",
  "message" : "HHH000038: Composite-id class does not override equals(): br.com.arthur.implementacaoh2.entities.ContaRepasseId",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:26:53.572Z",
  "level" : "WARN",
  "thread" : "main",
  "logger" : "org.hibernate.mapping.RootClass",
  "message" : "HHH000039: Composite-id class does not override hashCode(): br.com.arthur.implementacaoh2.entities.ContaRepasseId",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:26:54.095Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.hibernate.tool.schema.internal.SchemaCreatorImpl",
  "message" : "HHH000476: Executing import script 'org.hibernate.tool.schema.internal.exec.ScriptSourceInputNonExistentImpl@17176b18'",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:26:54.097Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean",
  "message" : "Initialized JPA EntityManagerFactory for persistence unit 'default'",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:26:54.414Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.hibernate.hql.internal.QueryTranslatorFactoryInitiator",
  "message" : "HHH000397: Using ASTQueryTranslatorFactory",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:26:55.138Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor",
  "message" : "Initializing ExecutorService 'applicationTaskExecutor'",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:26:55.193Z",
  "level" : "WARN",
  "thread" : "main",
  "logger" : "org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration$JpaWebMvcConfiguration",
  "message" : "spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:26:55.404Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.apache.coyote.http11.Http11NioProtocol",
  "message" : "Starting ProtocolHandler [\"http-nio-8080\"]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:26:55.435Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.springframework.boot.web.embedded.tomcat.TomcatWebServer",
  "message" : "Tomcat started on port(s): 8080 (http) with context path ''",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:26:55.437Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "br.com.arthur.implementacaoh2.App",
  "message" : "Started App in 4.856 seconds (JVM running for 5.399)",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:27:01.361Z",
  "level" : "INFO",
  "thread" : "http-nio-8080-exec-1",
  "logger" : "org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]",
  "message" : "Initializing Spring DispatcherServlet 'dispatcherServlet'",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:27:01.361Z",
  "level" : "INFO",
  "thread" : "http-nio-8080-exec-1",
  "logger" : "org.springframework.web.servlet.DispatcherServlet",
  "message" : "Initializing Servlet 'dispatcherServlet'",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:27:01.368Z",
  "level" : "INFO",
  "thread" : "http-nio-8080-exec-1",
  "logger" : "org.springframework.web.servlet.DispatcherServlet",
  "message" : "Completed initialization in 6 ms",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:27:01.384Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-1",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "Before request [uri=/acordos_comerciais]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:27:01.666Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-1",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "After request [uri=/acordos_comerciais;payload={\n    \"id_acordo_comercial\": 1,\n    \"id_versao_acordo_comercial\": 1,\n    \"id_parceiro\": 1,\n    \"id_produto\": 1,\n    \"situacao\": \"ativo\",\n    \"data_inicio_vigencia\": \"2020-12-01\",\n    \"vigencia_indeterminada\": false,\n    \"data_fim_vigencia\": \"2020-12-02\",\n    \"configuracoes_canal\": [\n        {\n            \"id_canal\": \"C1\"\n        },\n        {\n            \"id_canal\": \"71\"\n        }\n    ],\n    \"contas_repasse\": [\n        {\n            \"id_conta\": 1,\n            \"codigo_finalidade_spb\": \"12345\",\n            \"percentual_raterio\": 50\n        },\n        {\n            \"id_conta\": 2,\n            \"codigo_finalidade_spb\": \"12345\",\n            \"percentual_raterio\": 50\n        }\n    ]\n}]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:27:04.725Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-3",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "Before request [uri=/acordos_comerciais]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:27:04.745Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-3",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "After request [uri=/acordos_comerciais;payload={\n    \"id_acordo_comercial\": 1,\n    \"id_versao_acordo_comercial\": 2,\n    \"id_parceiro\": 1,\n    \"id_produto\": 1,\n    \"situacao\": \"ativo\",\n    \"data_inicio_vigencia\": \"2020-12-01\",\n    \"vigencia_indeterminada\": false,\n    \"data_fim_vigencia\": \"2020-12-02\",\n    \"configuracoes_canal\": [\n        {\n            \"id_canal\": \"C1\"\n        },\n        {\n            \"id_canal\": \"71\"\n        }\n    ],\n    \"contas_repasse\": [\n        {\n            \"id_conta\": 1,\n            \"codigo_finalidade_spb\": \"12345\",\n            \"percentual_raterio\": 50\n        },\n        {\n            \"id_conta\": 2,\n            \"codigo_finalidade_spb\": \"12345\",\n            \"percentual_raterio\": 50\n        }\n    ]\n}]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:27:07.135Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-4",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "Before request [uri=/acordos_comerciais]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:27:07.169Z",
  "level" : "WARN",
  "thread" : "http-nio-8080-exec-4",
  "logger" : "org.hibernate.engine.jdbc.spi.SqlExceptionHelper",
  "message" : "SQL Error: 42000, SQLState: 42000",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:27:07.170Z",
  "level" : "ERROR",
  "thread" : "http-nio-8080-exec-4",
  "logger" : "org.hibernate.engine.jdbc.spi.SqlExceptionHelper",
  "message" : "Syntax error in SQL statement \"SELECT NEW BR.[*]COM.ARTHUR.IMPLEMENTACAOH2.ENTITIES.ACORDOCOMERCIALID(AC.ID_ACORDO_COMERCIAL, AC.ID_VERSAO_ACORDO_COMERCIAL) FROM (SELECT ID_ACORDO_COMERCIAL, MAX(ID_VERSAO_ACORDO_COMERCIAL) AS MAIOR_VERSAO FROM ACORDO_COMERCIAL GROUP BY ID_ACORDO_COMERCIAL) AS X INNER JOIN ACORDO_COMERCIAL AS AC ON X.ID_ACORDO_COMERCIAL = AC.ID_ACORDO_COMERCIAL AND X.MAIOR_VERSAO = AC.ID_VERSAO_ACORDO_COMERCIAL ORDER BY DATA_INCLUSAO DESC \"; SQL statement:\nSELECT new br.com.arthur.implementacaoh2.entities.AcordoComercialId(AC.ID_ACORDO_COMERCIAL, AC.ID_VERSAO_ACORDO_COMERCIAL) FROM (SELECT ID_ACORDO_COMERCIAL, MAX(ID_VERSAO_ACORDO_COMERCIAL) AS MAIOR_VERSAO FROM ACORDO_COMERCIAL GROUP BY ID_ACORDO_COMERCIAL) as x INNER JOIN ACORDO_COMERCIAL as AC ON x.ID_ACORDO_COMERCIAL = AC.ID_ACORDO_COMERCIAL AND x.MAIOR_VERSAO = AC.ID_VERSAO_ACORDO_COMERCIAL ORDER BY DATA_INCLUSAO DESC [42000-199]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:27:07.176Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-4",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "After request [uri=/acordos_comerciais]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:27:07.179Z",
  "level" : "ERROR",
  "thread" : "http-nio-8080-exec-4",
  "logger" : "org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]",
  "message" : "Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.dao.InvalidDataAccessResourceUsageException: could not prepare statement; SQL [SELECT new br.com.arthur.implementacaoh2.entities.AcordoComercialId(AC.ID_ACORDO_COMERCIAL, AC.ID_VERSAO_ACORDO_COMERCIAL) FROM (SELECT ID_ACORDO_COMERCIAL, MAX(ID_VERSAO_ACORDO_COMERCIAL) AS MAIOR_VERSAO FROM ACORDO_COMERCIAL GROUP BY ID_ACORDO_COMERCIAL) as x INNER JOIN ACORDO_COMERCIAL as AC ON x.ID_ACORDO_COMERCIAL = AC.ID_ACORDO_COMERCIAL AND x.MAIOR_VERSAO = AC.ID_VERSAO_ACORDO_COMERCIAL ORDER BY DATA_INCLUSAO DESC]; nested exception is org.hibernate.exception.SQLGrammarException: could not prepare statement] with root cause",
  "context" : "default",
  "exception" : "org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement \"SELECT NEW BR.[*]COM.ARTHUR.IMPLEMENTACAOH2.ENTITIES.ACORDOCOMERCIALID(AC.ID_ACORDO_COMERCIAL, AC.ID_VERSAO_ACORDO_COMERCIAL) FROM (SELECT ID_ACORDO_COMERCIAL, MAX(ID_VERSAO_ACORDO_COMERCIAL) AS MAIOR_VERSAO FROM ACORDO_COMERCIAL GROUP BY ID_ACORDO_COMERCIAL) AS X INNER JOIN ACORDO_COMERCIAL AS AC ON X.ID_ACORDO_COMERCIAL = AC.ID_ACORDO_COMERCIAL AND X.MAIOR_VERSAO = AC.ID_VERSAO_ACORDO_COMERCIAL ORDER BY DATA_INCLUSAO DESC \"; SQL statement:\nSELECT new br.com.arthur.implementacaoh2.entities.AcordoComercialId(AC.ID_ACORDO_COMERCIAL, AC.ID_VERSAO_ACORDO_COMERCIAL) FROM (SELECT ID_ACORDO_COMERCIAL, MAX(ID_VERSAO_ACORDO_COMERCIAL) AS MAIOR_VERSAO FROM ACORDO_COMERCIAL GROUP BY ID_ACORDO_COMERCIAL) as x INNER JOIN ACORDO_COMERCIAL as AC ON x.ID_ACORDO_COMERCIAL = AC.ID_ACORDO_COMERCIAL AND x.MAIOR_VERSAO = AC.ID_VERSAO_ACORDO_COMERCIAL ORDER BY DATA_INCLUSAO DESC [42000-199]\r\n\tat org.h2.message.DbException.getJdbcSQLException(DbException.java:451)\r\n\tat org.h2.message.DbException.getJdbcSQLException(DbException.java:427)\r\n\tat org.h2.message.DbException.get(DbException.java:205)\r\n\tat org.h2.message.DbException.get(DbException.java:181)\r\n\tat org.h2.message.DbException.getSyntaxError(DbException.java:229)\r\n\tat org.h2.command.Parser.getSyntaxError(Parser.java:989)\r\n\tat org.h2.command.Parser.prepareCommand(Parser.java:686)\r\n\tat org.h2.engine.Session.prepareLocal(Session.java:627)\r\n\tat org.h2.engine.Session.prepareCommand(Session.java:565)\r\n\tat org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1292)\r\n\tat org.h2.jdbc.JdbcPreparedStatement.<init>(JdbcPreparedStatement.java:77)\r\n\tat org.h2.jdbc.JdbcConnection.prepareStatement(JdbcConnection.java:349)\r\n\tat com.zaxxer.hikari.pool.ProxyConnection.prepareStatement(ProxyConnection.java:311)\r\n\tat com.zaxxer.hikari.pool.HikariProxyConnection.prepareStatement(HikariProxyConnection.java)\r\n\tat org.hibernate.engine.jdbc.internal.StatementPreparerImpl$5.doPrepare(StatementPreparerImpl.java:146)\r\n\tat org.hibernate.engine.jdbc.internal.StatementPreparerImpl$StatementPreparationTemplate.prepareStatement(StatementPreparerImpl.java:172)\r\n\tat org.hibernate.engine.jdbc.internal.StatementPreparerImpl.prepareQueryStatement(StatementPreparerImpl.java:148)\r\n\tat org.hibernate.loader.Loader.prepareQueryStatement(Loader.java:1984)\r\n\tat org.hibernate.loader.Loader.executeQueryStatement(Loader.java:1914)\r\n\tat org.hibernate.loader.Loader.executeQueryStatement(Loader.java:1892)\r\n\tat org.hibernate.loader.Loader.doQuery(Loader.java:937)\r\n\tat org.hibernate.loader.Loader.doQueryAndInitializeNonLazyCollections(Loader.java:340)\r\n\tat org.hibernate.loader.Loader.doList(Loader.java:2689)\r\n\tat org.hibernate.loader.Loader.doList(Loader.java:2672)\r\n\tat org.hibernate.loader.Loader.listIgnoreQueryCache(Loader.java:2506)\r\n\tat org.hibernate.loader.Loader.list(Loader.java:2501)\r\n\tat org.hibernate.loader.custom.CustomLoader.list(CustomLoader.java:338)\r\n\tat org.hibernate.internal.SessionImpl.listCustomQuery(SessionImpl.java:2223)\r\n\tat org.hibernate.internal.AbstractSharedSessionContract.list(AbstractSharedSessionContract.java:1069)\r\n\tat org.hibernate.query.internal.NativeQueryImpl.doList(NativeQueryImpl.java:170)\r\n\tat org.hibernate.query.internal.AbstractProducedQuery.list(AbstractProducedQuery.java:1505)\r\n\tat org.hibernate.query.Query.getResultList(Query.java:132)\r\n\tat org.springframework.data.jpa.repository.query.JpaQueryExecution$CollectionExecution.doExecute(JpaQueryExecution.java:129)\r\n\tat org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:91)\r\n\tat org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:136)\r\n\tat org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:125)\r\n\tat org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.doInvoke(RepositoryFactorySupport.java:605)\r\n\tat org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.lambda$invoke$3(RepositoryFactorySupport.java:595)\r\n\tat org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.invoke(RepositoryFactorySupport.java:595)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\r\n\tat org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:59)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\r\n\tat org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:295)\r\n\tat org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\r\n\tat org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\r\n\tat org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:144)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\r\n\tat org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$ExposeRepositoryInvocationInterceptor.invoke(CrudMethodMetadataPostProcessor.java:364)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\r\n\tat org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\r\n\tat org.springframework.data.repository.core.support.SurroundingTransactionDetectorMethodInterceptor.invoke(SurroundingTransactionDetectorMethodInterceptor.java:61)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\r\n\tat org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)\r\n\tat com.sun.proxy.$Proxy97.consultarAcordosComerciais(Unknown Source)\r\n\tat br.com.arthur.implementacaoh2.services.AcordoComercialRepositoryImpl.consultaAcordosComerciais(AcordoComercialRepositoryImpl.java:47)\r\n\tat br.com.arthur.implementacaoh2.services.AcordoComercialRepositoryImpl$$FastClassBySpringCGLIB$$96d08d3b.invoke(<generated>)\r\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\r\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\r\n\tat org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\r\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)\r\n\tat br.com.arthur.implementacaoh2.services.AcordoComercialRepositoryImpl$$EnhancerBySpringCGLIB$$6d619736.consultaAcordosComerciais(<generated>)\r\n\tat br.com.arthur.implementacaoh2.entrypoints.AcordosComerciaisController.consulta(AcordosComerciaisController.java:34)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)\r\n\tat org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)\r\n\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)\r\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)\r\n\tat org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:897)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:634)\r\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:741)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.web.filter.AbstractRequestLoggingFilter.doFilterInternal(AbstractRequestLoggingFilter.java:262)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)\r\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)\r\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)\r\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)\r\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\r\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)\r\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)\r\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)\r\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)\r\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)\r\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)\r\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"
}{
  "timestamp" : "2020-03-12T02:46:45.449Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "br.com.arthur.implementacaoh2.App",
  "message" : "Starting App on DESKTOP-JGRRF34 with PID 1348 (C:\\Users\\nakag\\Documents\\workspace-spring-tool-suite-4-4.3.2.RELEASE\\implementacaoh2\\target\\classes started by nakag in C:\\Users\\nakag\\Documents\\workspace-spring-tool-suite-4-4.3.2.RELEASE\\implementacaoh2)",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:46:45.465Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "br.com.arthur.implementacaoh2.App",
  "message" : "No active profile set, falling back to default profiles: default",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:46:46.063Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.springframework.data.repository.config.RepositoryConfigurationDelegate",
  "message" : "Bootstrapping Spring Data repositories in DEFAULT mode.",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:46:46.154Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.springframework.data.repository.config.RepositoryConfigurationDelegate",
  "message" : "Finished Spring Data repository scanning in 83ms. Found 6 repository interfaces.",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:46:46.477Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
  "message" : "Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$67466329] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:46:46.950Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.springframework.boot.web.embedded.tomcat.TomcatWebServer",
  "message" : "Tomcat initialized with port(s): 8080 (http)",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:46:46.963Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.apache.coyote.http11.Http11NioProtocol",
  "message" : "Initializing ProtocolHandler [\"http-nio-8080\"]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:46:46.972Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.apache.catalina.core.StandardService",
  "message" : "Starting service [Tomcat]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:46:46.973Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.apache.catalina.core.StandardEngine",
  "message" : "Starting Servlet engine: [Apache Tomcat/9.0.22]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:46:47.075Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]",
  "message" : "Initializing Spring embedded WebApplicationContext",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:46:47.076Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.springframework.web.context.ContextLoader",
  "message" : "Root WebApplicationContext: initialization completed in 1571 ms",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:46:47.131Z",
  "level" : "DEBUG",
  "thread" : "main",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "Filter 'logFilter' configured for use",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:46:47.283Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "com.zaxxer.hikari.HikariDataSource",
  "message" : "HikariPool-1 - Starting...",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:46:47.428Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "com.zaxxer.hikari.HikariDataSource",
  "message" : "HikariPool-1 - Start completed.",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:46:47.500Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.hibernate.jpa.internal.util.LogHelper",
  "message" : "HHH000204: Processing PersistenceUnitInfo [\n\tname: default\n\t...]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:46:47.574Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.hibernate.Version",
  "message" : "HHH000412: Hibernate Core {5.3.10.Final}",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:46:47.576Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.hibernate.cfg.Environment",
  "message" : "HHH000206: hibernate.properties not found",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:46:47.719Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.hibernate.annotations.common.Version",
  "message" : "HCANN000001: Hibernate Commons Annotations {5.0.4.Final}",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:46:47.865Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.hibernate.dialect.Dialect",
  "message" : "HHH000400: Using dialect: org.hibernate.dialect.H2Dialect",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:46:48.129Z",
  "level" : "WARN",
  "thread" : "main",
  "logger" : "org.hibernate.mapping.RootClass",
  "message" : "HHH000038: Composite-id class does not override equals(): br.com.arthur.implementacaoh2.entities.ContaRepasseId",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:46:48.129Z",
  "level" : "WARN",
  "thread" : "main",
  "logger" : "org.hibernate.mapping.RootClass",
  "message" : "HHH000039: Composite-id class does not override hashCode(): br.com.arthur.implementacaoh2.entities.ContaRepasseId",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:46:48.625Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.hibernate.tool.schema.internal.SchemaCreatorImpl",
  "message" : "HHH000476: Executing import script 'org.hibernate.tool.schema.internal.exec.ScriptSourceInputNonExistentImpl@727986ad'",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:46:48.628Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean",
  "message" : "Initialized JPA EntityManagerFactory for persistence unit 'default'",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:46:48.901Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.hibernate.hql.internal.QueryTranslatorFactoryInitiator",
  "message" : "HHH000397: Using ASTQueryTranslatorFactory",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:46:49.560Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor",
  "message" : "Initializing ExecutorService 'applicationTaskExecutor'",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:46:49.617Z",
  "level" : "WARN",
  "thread" : "main",
  "logger" : "org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration$JpaWebMvcConfiguration",
  "message" : "spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:46:49.880Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.apache.coyote.http11.Http11NioProtocol",
  "message" : "Starting ProtocolHandler [\"http-nio-8080\"]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:46:49.893Z",
  "level" : "ERROR",
  "thread" : "main",
  "logger" : "org.apache.catalina.util.LifecycleBase",
  "message" : "Failed to start component [Connector[HTTP/1.1-8080]]",
  "context" : "default",
  "exception" : "org.apache.catalina.LifecycleException: Protocol handler start failed\r\n\tat org.apache.catalina.connector.Connector.startInternal(Connector.java:1008)\r\n\tat org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)\r\n\tat org.apache.catalina.core.StandardService.addConnector(StandardService.java:227)\r\n\tat org.springframework.boot.web.embedded.tomcat.TomcatWebServer.addPreviouslyRemovedConnectors(TomcatWebServer.java:263)\r\n\tat org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:195)\r\n\tat org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.startWebServer(ServletWebServerApplicationContext.java:297)\r\n\tat org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.finishRefresh(ServletWebServerApplicationContext.java:163)\r\n\tat org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:552)\r\n\tat org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141)\r\n\tat org.springframework.boot.SpringApplication.refresh(SpringApplication.java:743)\r\n\tat org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:390)\r\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:312)\r\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:1214)\r\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:1203)\r\n\tat br.com.arthur.implementacaoh2.App.main(App.java:10)\r\nCaused by: java.net.BindException: Address already in use: bind\r\n\tat sun.nio.ch.Net.bind0(Native Method)\r\n\tat sun.nio.ch.Net.bind(Net.java:433)\r\n\tat sun.nio.ch.Net.bind(Net.java:425)\r\n\tat sun.nio.ch.ServerSocketChannelImpl.bind(ServerSocketChannelImpl.java:223)\r\n\tat sun.nio.ch.ServerSocketAdaptor.bind(ServerSocketAdaptor.java:74)\r\n\tat org.apache.tomcat.util.net.NioEndpoint.initServerSocket(NioEndpoint.java:230)\r\n\tat org.apache.tomcat.util.net.NioEndpoint.bind(NioEndpoint.java:213)\r\n\tat org.apache.tomcat.util.net.AbstractEndpoint.bindWithCleanup(AbstractEndpoint.java:1124)\r\n\tat org.apache.tomcat.util.net.AbstractEndpoint.start(AbstractEndpoint.java:1210)\r\n\tat org.apache.coyote.AbstractProtocol.start(AbstractProtocol.java:585)\r\n\tat org.apache.catalina.connector.Connector.startInternal(Connector.java:1005)\r\n\t... 14 common frames omitted\r\n"
}{
  "timestamp" : "2020-03-12T02:46:49.899Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.apache.coyote.http11.Http11NioProtocol",
  "message" : "Pausing ProtocolHandler [\"http-nio-8080\"]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:46:49.899Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.apache.catalina.core.StandardService",
  "message" : "Stopping service [Tomcat]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:46:49.903Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.apache.catalina.util.LifecycleBase",
  "message" : "The stop() method was called on component [StandardServer[-1]] after stop() had already been called. The second call will be ignored.",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:46:49.904Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.apache.coyote.http11.Http11NioProtocol",
  "message" : "Stopping ProtocolHandler [\"http-nio-8080\"]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:46:49.904Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.apache.coyote.http11.Http11NioProtocol",
  "message" : "Destroying ProtocolHandler [\"http-nio-8080\"]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:46:49.907Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener",
  "message" : "\r\n\r\nError starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:46:49.908Z",
  "level" : "ERROR",
  "thread" : "main",
  "logger" : "org.springframework.boot.diagnostics.LoggingFailureAnalysisReporter",
  "message" : "\r\n\r\n***************************\r\nAPPLICATION FAILED TO START\r\n***************************\r\n\r\nDescription:\r\n\r\nThe Tomcat connector configured to listen on port 8080 failed to start. The port may already be in use or the connector may be misconfigured.\r\n\r\nAction:\r\n\r\nVerify the connector's configuration, identify and stop any process that's listening on port 8080, or configure this application to listen on another port.\r\n",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:46:49.911Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor",
  "message" : "Shutting down ExecutorService 'applicationTaskExecutor'",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:46:49.913Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean",
  "message" : "Closing JPA EntityManagerFactory for persistence unit 'default'",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:46:49.914Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl",
  "message" : "HHH000477: Starting delayed evictData of schema as part of SessionFactory shut-down'",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:46:49.924Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "com.zaxxer.hikari.HikariDataSource",
  "message" : "HikariPool-1 - Shutdown initiated...",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:46:49.927Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "com.zaxxer.hikari.HikariDataSource",
  "message" : "HikariPool-1 - Shutdown completed.",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:46:58.790Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "br.com.arthur.implementacaoh2.App",
  "message" : "Starting App on DESKTOP-JGRRF34 with PID 5432 (C:\\Users\\nakag\\Documents\\workspace-spring-tool-suite-4-4.3.2.RELEASE\\implementacaoh2\\target\\classes started by nakag in C:\\Users\\nakag\\Documents\\workspace-spring-tool-suite-4-4.3.2.RELEASE\\implementacaoh2)",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:46:58.813Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "br.com.arthur.implementacaoh2.App",
  "message" : "No active profile set, falling back to default profiles: default",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:46:59.481Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.springframework.data.repository.config.RepositoryConfigurationDelegate",
  "message" : "Bootstrapping Spring Data repositories in DEFAULT mode.",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:46:59.584Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.springframework.data.repository.config.RepositoryConfigurationDelegate",
  "message" : "Finished Spring Data repository scanning in 95ms. Found 6 repository interfaces.",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:46:59.952Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
  "message" : "Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$6d15c281] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:47:00.466Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.springframework.boot.web.embedded.tomcat.TomcatWebServer",
  "message" : "Tomcat initialized with port(s): 8080 (http)",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:47:00.480Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.apache.coyote.http11.Http11NioProtocol",
  "message" : "Initializing ProtocolHandler [\"http-nio-8080\"]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:47:00.491Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.apache.catalina.core.StandardService",
  "message" : "Starting service [Tomcat]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:47:00.492Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.apache.catalina.core.StandardEngine",
  "message" : "Starting Servlet engine: [Apache Tomcat/9.0.22]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:47:00.607Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]",
  "message" : "Initializing Spring embedded WebApplicationContext",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:47:00.608Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.springframework.web.context.ContextLoader",
  "message" : "Root WebApplicationContext: initialization completed in 1753 ms",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:47:00.698Z",
  "level" : "DEBUG",
  "thread" : "main",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "Filter 'logFilter' configured for use",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:47:00.869Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "com.zaxxer.hikari.HikariDataSource",
  "message" : "HikariPool-1 - Starting...",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:47:01.017Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "com.zaxxer.hikari.HikariDataSource",
  "message" : "HikariPool-1 - Start completed.",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:47:01.088Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.hibernate.jpa.internal.util.LogHelper",
  "message" : "HHH000204: Processing PersistenceUnitInfo [\n\tname: default\n\t...]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:47:01.156Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.hibernate.Version",
  "message" : "HHH000412: Hibernate Core {5.3.10.Final}",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:47:01.157Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.hibernate.cfg.Environment",
  "message" : "HHH000206: hibernate.properties not found",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:47:01.287Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.hibernate.annotations.common.Version",
  "message" : "HCANN000001: Hibernate Commons Annotations {5.0.4.Final}",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:47:01.456Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.hibernate.dialect.Dialect",
  "message" : "HHH000400: Using dialect: org.hibernate.dialect.H2Dialect",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:47:01.719Z",
  "level" : "WARN",
  "thread" : "main",
  "logger" : "org.hibernate.mapping.RootClass",
  "message" : "HHH000038: Composite-id class does not override equals(): br.com.arthur.implementacaoh2.entities.ContaRepasseId",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:47:01.720Z",
  "level" : "WARN",
  "thread" : "main",
  "logger" : "org.hibernate.mapping.RootClass",
  "message" : "HHH000039: Composite-id class does not override hashCode(): br.com.arthur.implementacaoh2.entities.ContaRepasseId",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:47:02.241Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.hibernate.tool.schema.internal.SchemaCreatorImpl",
  "message" : "HHH000476: Executing import script 'org.hibernate.tool.schema.internal.exec.ScriptSourceInputNonExistentImpl@2b44605c'",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:47:02.244Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean",
  "message" : "Initialized JPA EntityManagerFactory for persistence unit 'default'",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:47:02.538Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.hibernate.hql.internal.QueryTranslatorFactoryInitiator",
  "message" : "HHH000397: Using ASTQueryTranslatorFactory",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:47:03.262Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor",
  "message" : "Initializing ExecutorService 'applicationTaskExecutor'",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:47:03.328Z",
  "level" : "WARN",
  "thread" : "main",
  "logger" : "org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration$JpaWebMvcConfiguration",
  "message" : "spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:47:03.508Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.apache.coyote.http11.Http11NioProtocol",
  "message" : "Starting ProtocolHandler [\"http-nio-8080\"]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:47:03.533Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.springframework.boot.web.embedded.tomcat.TomcatWebServer",
  "message" : "Tomcat started on port(s): 8080 (http) with context path ''",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:47:03.535Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "br.com.arthur.implementacaoh2.App",
  "message" : "Started App in 5.055 seconds (JVM running for 5.708)",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:47:05.283Z",
  "level" : "INFO",
  "thread" : "http-nio-8080-exec-1",
  "logger" : "org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]",
  "message" : "Initializing Spring DispatcherServlet 'dispatcherServlet'",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:47:05.283Z",
  "level" : "INFO",
  "thread" : "http-nio-8080-exec-1",
  "logger" : "org.springframework.web.servlet.DispatcherServlet",
  "message" : "Initializing Servlet 'dispatcherServlet'",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:47:05.294Z",
  "level" : "INFO",
  "thread" : "http-nio-8080-exec-1",
  "logger" : "org.springframework.web.servlet.DispatcherServlet",
  "message" : "Completed initialization in 10 ms",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:47:05.310Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-1",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "Before request [uri=/acordos_comerciais]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:47:05.605Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-1",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "After request [uri=/acordos_comerciais;payload={\n    \"id_acordo_comercial\": 1,\n    \"id_versao_acordo_comercial\": 1,\n    \"id_parceiro\": 1,\n    \"id_produto\": 1,\n    \"situacao\": \"ativo\",\n    \"data_inicio_vigencia\": \"2020-12-01\",\n    \"vigencia_indeterminada\": false,\n    \"data_fim_vigencia\": \"2020-12-02\",\n    \"configuracoes_canal\": [\n        {\n            \"id_canal\": \"C1\"\n        },\n        {\n            \"id_canal\": \"71\"\n        }\n    ],\n    \"contas_repasse\": [\n        {\n            \"id_conta\": 1,\n            \"codigo_finalidade_spb\": \"12345\",\n            \"percentual_raterio\": 50\n        },\n        {\n            \"id_conta\": 2,\n            \"codigo_finalidade_spb\": \"12345\",\n            \"percentual_raterio\": 50\n        }\n    ]\n}]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:47:08.298Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-3",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "Before request [uri=/acordos_comerciais]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:47:08.322Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-3",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "After request [uri=/acordos_comerciais;payload={\n    \"id_acordo_comercial\": 1,\n    \"id_versao_acordo_comercial\": 2,\n    \"id_parceiro\": 1,\n    \"id_produto\": 1,\n    \"situacao\": \"ativo\",\n    \"data_inicio_vigencia\": \"2020-12-01\",\n    \"vigencia_indeterminada\": false,\n    \"data_fim_vigencia\": \"2020-12-02\",\n    \"configuracoes_canal\": [\n        {\n            \"id_canal\": \"C1\"\n        },\n        {\n            \"id_canal\": \"71\"\n        }\n    ],\n    \"contas_repasse\": [\n        {\n            \"id_conta\": 1,\n            \"codigo_finalidade_spb\": \"12345\",\n            \"percentual_raterio\": 50\n        },\n        {\n            \"id_conta\": 2,\n            \"codigo_finalidade_spb\": \"12345\",\n            \"percentual_raterio\": 50\n        }\n    ]\n}]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:47:10.203Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-4",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "Before request [uri=/acordos_comerciais]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:47:10.255Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-4",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "After request [uri=/acordos_comerciais]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:47:10.257Z",
  "level" : "ERROR",
  "thread" : "http-nio-8080-exec-4",
  "logger" : "org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]",
  "message" : "Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.core.convert.ConversionFailedException: Failed to convert from type [java.lang.Object[]] to type [br.com.arthur.implementacaoh2.entities.AcordoComercialId] for value '{1, 2}'; nested exception is org.springframework.core.convert.ConverterNotFoundException: No converter found capable of converting from type [java.lang.Integer] to type [br.com.arthur.implementacaoh2.entities.AcordoComercialId]] with root cause",
  "context" : "default",
  "exception" : "org.springframework.core.convert.ConverterNotFoundException: No converter found capable of converting from type [java.lang.Integer] to type [br.com.arthur.implementacaoh2.entities.AcordoComercialId]\r\n\tat org.springframework.core.convert.support.GenericConversionService.handleConverterNotFound(GenericConversionService.java:321)\r\n\tat org.springframework.core.convert.support.GenericConversionService.convert(GenericConversionService.java:194)\r\n\tat org.springframework.core.convert.support.ArrayToObjectConverter.convert(ArrayToObjectConverter.java:68)\r\n\tat org.springframework.core.convert.support.ConversionUtils.invokeConverter(ConversionUtils.java:41)\r\n\tat org.springframework.core.convert.support.GenericConversionService.convert(GenericConversionService.java:191)\r\n\tat org.springframework.core.convert.support.GenericConversionService.convert(GenericConversionService.java:174)\r\n\tat org.springframework.data.repository.query.ResultProcessor$ProjectingConverter.convert(ResultProcessor.java:293)\r\n\tat org.springframework.data.repository.query.ResultProcessor$ChainingConverter.lambda$and$0(ResultProcessor.java:213)\r\n\tat org.springframework.data.repository.query.ResultProcessor$ChainingConverter.convert(ResultProcessor.java:224)\r\n\tat org.springframework.data.repository.query.ResultProcessor.processResult(ResultProcessor.java:152)\r\n\tat org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:141)\r\n\tat org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:125)\r\n\tat org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.doInvoke(RepositoryFactorySupport.java:605)\r\n\tat org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.lambda$invoke$3(RepositoryFactorySupport.java:595)\r\n\tat org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.invoke(RepositoryFactorySupport.java:595)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\r\n\tat org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:59)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\r\n\tat org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:295)\r\n\tat org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\r\n\tat org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\r\n\tat org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:144)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\r\n\tat org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$ExposeRepositoryInvocationInterceptor.invoke(CrudMethodMetadataPostProcessor.java:364)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\r\n\tat org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\r\n\tat org.springframework.data.repository.core.support.SurroundingTransactionDetectorMethodInterceptor.invoke(SurroundingTransactionDetectorMethodInterceptor.java:61)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\r\n\tat org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)\r\n\tat com.sun.proxy.$Proxy97.consultarAcordosComerciais(Unknown Source)\r\n\tat br.com.arthur.implementacaoh2.services.AcordoComercialRepositoryImpl.consultaAcordosComerciais(AcordoComercialRepositoryImpl.java:47)\r\n\tat br.com.arthur.implementacaoh2.services.AcordoComercialRepositoryImpl$$FastClassBySpringCGLIB$$96d08d3b.invoke(<generated>)\r\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\r\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\r\n\tat org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\r\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)\r\n\tat br.com.arthur.implementacaoh2.services.AcordoComercialRepositoryImpl$$EnhancerBySpringCGLIB$$a322731.consultaAcordosComerciais(<generated>)\r\n\tat br.com.arthur.implementacaoh2.entrypoints.AcordosComerciaisController.consulta(AcordosComerciaisController.java:34)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)\r\n\tat org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)\r\n\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)\r\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)\r\n\tat org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:897)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:634)\r\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:741)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.web.filter.AbstractRequestLoggingFilter.doFilterInternal(AbstractRequestLoggingFilter.java:262)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)\r\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)\r\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)\r\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)\r\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\r\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)\r\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)\r\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)\r\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)\r\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)\r\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)\r\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"
}{
  "timestamp" : "2020-03-12T02:57:38.665Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "br.com.arthur.implementacaoh2.App",
  "message" : "Starting App on DESKTOP-JGRRF34 with PID 12712 (C:\\Users\\nakag\\Documents\\workspace-spring-tool-suite-4-4.3.2.RELEASE\\implementacaoh2\\target\\classes started by nakag in C:\\Users\\nakag\\Documents\\workspace-spring-tool-suite-4-4.3.2.RELEASE\\implementacaoh2)",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:57:38.680Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "br.com.arthur.implementacaoh2.App",
  "message" : "No active profile set, falling back to default profiles: default",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:57:39.291Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.springframework.data.repository.config.RepositoryConfigurationDelegate",
  "message" : "Bootstrapping Spring Data repositories in DEFAULT mode.",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:57:39.387Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.springframework.data.repository.config.RepositoryConfigurationDelegate",
  "message" : "Finished Spring Data repository scanning in 87ms. Found 6 repository interfaces.",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:57:39.727Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
  "message" : "Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$ba1f176d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:57:40.193Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.springframework.boot.web.embedded.tomcat.TomcatWebServer",
  "message" : "Tomcat initialized with port(s): 8080 (http)",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:57:40.207Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.apache.coyote.http11.Http11NioProtocol",
  "message" : "Initializing ProtocolHandler [\"http-nio-8080\"]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:57:40.219Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.apache.catalina.core.StandardService",
  "message" : "Starting service [Tomcat]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:57:40.219Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.apache.catalina.core.StandardEngine",
  "message" : "Starting Servlet engine: [Apache Tomcat/9.0.22]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:57:40.318Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]",
  "message" : "Initializing Spring embedded WebApplicationContext",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:57:40.319Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.springframework.web.context.ContextLoader",
  "message" : "Root WebApplicationContext: initialization completed in 1600 ms",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:57:40.375Z",
  "level" : "DEBUG",
  "thread" : "main",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "Filter 'logFilter' configured for use",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:57:40.529Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "com.zaxxer.hikari.HikariDataSource",
  "message" : "HikariPool-1 - Starting...",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:57:40.683Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "com.zaxxer.hikari.HikariDataSource",
  "message" : "HikariPool-1 - Start completed.",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:57:40.758Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.hibernate.jpa.internal.util.LogHelper",
  "message" : "HHH000204: Processing PersistenceUnitInfo [\n\tname: default\n\t...]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:57:40.831Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.hibernate.Version",
  "message" : "HHH000412: Hibernate Core {5.3.10.Final}",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:57:40.832Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.hibernate.cfg.Environment",
  "message" : "HHH000206: hibernate.properties not found",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:57:40.962Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.hibernate.annotations.common.Version",
  "message" : "HCANN000001: Hibernate Commons Annotations {5.0.4.Final}",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:57:41.110Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.hibernate.dialect.Dialect",
  "message" : "HHH000400: Using dialect: org.hibernate.dialect.H2Dialect",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:57:41.357Z",
  "level" : "WARN",
  "thread" : "main",
  "logger" : "org.hibernate.mapping.RootClass",
  "message" : "HHH000038: Composite-id class does not override equals(): br.com.arthur.implementacaoh2.entities.ContaRepasseId",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:57:41.358Z",
  "level" : "WARN",
  "thread" : "main",
  "logger" : "org.hibernate.mapping.RootClass",
  "message" : "HHH000039: Composite-id class does not override hashCode(): br.com.arthur.implementacaoh2.entities.ContaRepasseId",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:57:41.829Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.hibernate.tool.schema.internal.SchemaCreatorImpl",
  "message" : "HHH000476: Executing import script 'org.hibernate.tool.schema.internal.exec.ScriptSourceInputNonExistentImpl@6b25ef1c'",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:57:41.832Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean",
  "message" : "Initialized JPA EntityManagerFactory for persistence unit 'default'",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:57:42.105Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.hibernate.hql.internal.QueryTranslatorFactoryInitiator",
  "message" : "HHH000397: Using ASTQueryTranslatorFactory",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:57:42.697Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor",
  "message" : "Initializing ExecutorService 'applicationTaskExecutor'",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:57:42.741Z",
  "level" : "WARN",
  "thread" : "main",
  "logger" : "org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration$JpaWebMvcConfiguration",
  "message" : "spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:57:42.912Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.apache.coyote.http11.Http11NioProtocol",
  "message" : "Starting ProtocolHandler [\"http-nio-8080\"]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:57:42.924Z",
  "level" : "ERROR",
  "thread" : "main",
  "logger" : "org.apache.catalina.util.LifecycleBase",
  "message" : "Failed to start component [Connector[HTTP/1.1-8080]]",
  "context" : "default",
  "exception" : "org.apache.catalina.LifecycleException: Protocol handler start failed\r\n\tat org.apache.catalina.connector.Connector.startInternal(Connector.java:1008)\r\n\tat org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)\r\n\tat org.apache.catalina.core.StandardService.addConnector(StandardService.java:227)\r\n\tat org.springframework.boot.web.embedded.tomcat.TomcatWebServer.addPreviouslyRemovedConnectors(TomcatWebServer.java:263)\r\n\tat org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:195)\r\n\tat org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.startWebServer(ServletWebServerApplicationContext.java:297)\r\n\tat org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.finishRefresh(ServletWebServerApplicationContext.java:163)\r\n\tat org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:552)\r\n\tat org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141)\r\n\tat org.springframework.boot.SpringApplication.refresh(SpringApplication.java:743)\r\n\tat org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:390)\r\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:312)\r\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:1214)\r\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:1203)\r\n\tat br.com.arthur.implementacaoh2.App.main(App.java:10)\r\nCaused by: java.net.BindException: Address already in use: bind\r\n\tat sun.nio.ch.Net.bind0(Native Method)\r\n\tat sun.nio.ch.Net.bind(Net.java:433)\r\n\tat sun.nio.ch.Net.bind(Net.java:425)\r\n\tat sun.nio.ch.ServerSocketChannelImpl.bind(ServerSocketChannelImpl.java:223)\r\n\tat sun.nio.ch.ServerSocketAdaptor.bind(ServerSocketAdaptor.java:74)\r\n\tat org.apache.tomcat.util.net.NioEndpoint.initServerSocket(NioEndpoint.java:230)\r\n\tat org.apache.tomcat.util.net.NioEndpoint.bind(NioEndpoint.java:213)\r\n\tat org.apache.tomcat.util.net.AbstractEndpoint.bindWithCleanup(AbstractEndpoint.java:1124)\r\n\tat org.apache.tomcat.util.net.AbstractEndpoint.start(AbstractEndpoint.java:1210)\r\n\tat org.apache.coyote.AbstractProtocol.start(AbstractProtocol.java:585)\r\n\tat org.apache.catalina.connector.Connector.startInternal(Connector.java:1005)\r\n\t... 14 common frames omitted\r\n"
}{
  "timestamp" : "2020-03-12T02:57:42.928Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.apache.coyote.http11.Http11NioProtocol",
  "message" : "Pausing ProtocolHandler [\"http-nio-8080\"]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:57:42.928Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.apache.catalina.core.StandardService",
  "message" : "Stopping service [Tomcat]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:57:42.932Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.apache.catalina.util.LifecycleBase",
  "message" : "The stop() method was called on component [StandardServer[-1]] after stop() had already been called. The second call will be ignored.",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:57:42.933Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.apache.coyote.http11.Http11NioProtocol",
  "message" : "Stopping ProtocolHandler [\"http-nio-8080\"]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:57:42.933Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.apache.coyote.http11.Http11NioProtocol",
  "message" : "Destroying ProtocolHandler [\"http-nio-8080\"]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:57:42.936Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener",
  "message" : "\r\n\r\nError starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:57:42.937Z",
  "level" : "ERROR",
  "thread" : "main",
  "logger" : "org.springframework.boot.diagnostics.LoggingFailureAnalysisReporter",
  "message" : "\r\n\r\n***************************\r\nAPPLICATION FAILED TO START\r\n***************************\r\n\r\nDescription:\r\n\r\nThe Tomcat connector configured to listen on port 8080 failed to start. The port may already be in use or the connector may be misconfigured.\r\n\r\nAction:\r\n\r\nVerify the connector's configuration, identify and stop any process that's listening on port 8080, or configure this application to listen on another port.\r\n",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:57:42.940Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor",
  "message" : "Shutting down ExecutorService 'applicationTaskExecutor'",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:57:42.942Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean",
  "message" : "Closing JPA EntityManagerFactory for persistence unit 'default'",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:57:42.942Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl",
  "message" : "HHH000477: Starting delayed evictData of schema as part of SessionFactory shut-down'",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:57:42.951Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "com.zaxxer.hikari.HikariDataSource",
  "message" : "HikariPool-1 - Shutdown initiated...",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:57:42.953Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "com.zaxxer.hikari.HikariDataSource",
  "message" : "HikariPool-1 - Shutdown completed.",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:57:49.439Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "br.com.arthur.implementacaoh2.App",
  "message" : "Starting App on DESKTOP-JGRRF34 with PID 11556 (C:\\Users\\nakag\\Documents\\workspace-spring-tool-suite-4-4.3.2.RELEASE\\implementacaoh2\\target\\classes started by nakag in C:\\Users\\nakag\\Documents\\workspace-spring-tool-suite-4-4.3.2.RELEASE\\implementacaoh2)",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:57:49.456Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "br.com.arthur.implementacaoh2.App",
  "message" : "No active profile set, falling back to default profiles: default",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:57:50.065Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.springframework.data.repository.config.RepositoryConfigurationDelegate",
  "message" : "Bootstrapping Spring Data repositories in DEFAULT mode.",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:57:50.168Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.springframework.data.repository.config.RepositoryConfigurationDelegate",
  "message" : "Finished Spring Data repository scanning in 94ms. Found 6 repository interfaces.",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:57:50.494Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
  "message" : "Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$ce6f28] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:57:50.956Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.springframework.boot.web.embedded.tomcat.TomcatWebServer",
  "message" : "Tomcat initialized with port(s): 8080 (http)",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:57:50.971Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.apache.coyote.http11.Http11NioProtocol",
  "message" : "Initializing ProtocolHandler [\"http-nio-8080\"]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:57:50.983Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.apache.catalina.core.StandardService",
  "message" : "Starting service [Tomcat]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:57:50.983Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.apache.catalina.core.StandardEngine",
  "message" : "Starting Servlet engine: [Apache Tomcat/9.0.22]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:57:51.088Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]",
  "message" : "Initializing Spring embedded WebApplicationContext",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:57:51.089Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.springframework.web.context.ContextLoader",
  "message" : "Root WebApplicationContext: initialization completed in 1596 ms",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:57:51.153Z",
  "level" : "DEBUG",
  "thread" : "main",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "Filter 'logFilter' configured for use",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:57:51.299Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "com.zaxxer.hikari.HikariDataSource",
  "message" : "HikariPool-1 - Starting...",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:57:51.441Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "com.zaxxer.hikari.HikariDataSource",
  "message" : "HikariPool-1 - Start completed.",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:57:51.512Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.hibernate.jpa.internal.util.LogHelper",
  "message" : "HHH000204: Processing PersistenceUnitInfo [\n\tname: default\n\t...]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:57:51.599Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.hibernate.Version",
  "message" : "HHH000412: Hibernate Core {5.3.10.Final}",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:57:51.601Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.hibernate.cfg.Environment",
  "message" : "HHH000206: hibernate.properties not found",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:57:51.748Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.hibernate.annotations.common.Version",
  "message" : "HCANN000001: Hibernate Commons Annotations {5.0.4.Final}",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:57:51.895Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.hibernate.dialect.Dialect",
  "message" : "HHH000400: Using dialect: org.hibernate.dialect.H2Dialect",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:57:52.147Z",
  "level" : "WARN",
  "thread" : "main",
  "logger" : "org.hibernate.mapping.RootClass",
  "message" : "HHH000038: Composite-id class does not override equals(): br.com.arthur.implementacaoh2.entities.ContaRepasseId",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:57:52.148Z",
  "level" : "WARN",
  "thread" : "main",
  "logger" : "org.hibernate.mapping.RootClass",
  "message" : "HHH000039: Composite-id class does not override hashCode(): br.com.arthur.implementacaoh2.entities.ContaRepasseId",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:57:52.609Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.hibernate.tool.schema.internal.SchemaCreatorImpl",
  "message" : "HHH000476: Executing import script 'org.hibernate.tool.schema.internal.exec.ScriptSourceInputNonExistentImpl@56b1e527'",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:57:52.612Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean",
  "message" : "Initialized JPA EntityManagerFactory for persistence unit 'default'",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:57:52.892Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.hibernate.hql.internal.QueryTranslatorFactoryInitiator",
  "message" : "HHH000397: Using ASTQueryTranslatorFactory",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:57:53.492Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor",
  "message" : "Initializing ExecutorService 'applicationTaskExecutor'",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:57:53.536Z",
  "level" : "WARN",
  "thread" : "main",
  "logger" : "org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration$JpaWebMvcConfiguration",
  "message" : "spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:57:53.716Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.apache.coyote.http11.Http11NioProtocol",
  "message" : "Starting ProtocolHandler [\"http-nio-8080\"]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:57:53.740Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.springframework.boot.web.embedded.tomcat.TomcatWebServer",
  "message" : "Tomcat started on port(s): 8080 (http) with context path ''",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:57:53.742Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "br.com.arthur.implementacaoh2.App",
  "message" : "Started App in 4.581 seconds (JVM running for 5.132)",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:57:59.930Z",
  "level" : "INFO",
  "thread" : "http-nio-8080-exec-1",
  "logger" : "org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]",
  "message" : "Initializing Spring DispatcherServlet 'dispatcherServlet'",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:57:59.931Z",
  "level" : "INFO",
  "thread" : "http-nio-8080-exec-1",
  "logger" : "org.springframework.web.servlet.DispatcherServlet",
  "message" : "Initializing Servlet 'dispatcherServlet'",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:57:59.940Z",
  "level" : "INFO",
  "thread" : "http-nio-8080-exec-1",
  "logger" : "org.springframework.web.servlet.DispatcherServlet",
  "message" : "Completed initialization in 9 ms",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:57:59.956Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-1",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "Before request [uri=/acordos_comerciais]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:58:00.227Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-1",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "After request [uri=/acordos_comerciais;payload={\n    \"id_acordo_comercial\": 1,\n    \"id_versao_acordo_comercial\": 1,\n    \"id_parceiro\": 1,\n    \"id_produto\": 1,\n    \"situacao\": \"ativo\",\n    \"data_inicio_vigencia\": \"2020-12-01\",\n    \"vigencia_indeterminada\": false,\n    \"data_fim_vigencia\": \"2020-12-02\",\n    \"configuracoes_canal\": [\n        {\n            \"id_canal\": \"C1\"\n        },\n        {\n            \"id_canal\": \"71\"\n        }\n    ],\n    \"contas_repasse\": [\n        {\n            \"id_conta\": 1,\n            \"codigo_finalidade_spb\": \"12345\",\n            \"percentual_raterio\": 50\n        },\n        {\n            \"id_conta\": 2,\n            \"codigo_finalidade_spb\": \"12345\",\n            \"percentual_raterio\": 50\n        }\n    ]\n}]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:58:02.905Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-3",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "Before request [uri=/acordos_comerciais]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:58:02.918Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-3",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "After request [uri=/acordos_comerciais;payload={\n    \"id_acordo_comercial\": 1,\n    \"id_versao_acordo_comercial\": 2,\n    \"id_parceiro\": 1,\n    \"id_produto\": 1,\n    \"situacao\": \"ativo\",\n    \"data_inicio_vigencia\": \"2020-12-01\",\n    \"vigencia_indeterminada\": false,\n    \"data_fim_vigencia\": \"2020-12-02\",\n    \"configuracoes_canal\": [\n        {\n            \"id_canal\": \"C1\"\n        },\n        {\n            \"id_canal\": \"71\"\n        }\n    ],\n    \"contas_repasse\": [\n        {\n            \"id_conta\": 1,\n            \"codigo_finalidade_spb\": \"12345\",\n            \"percentual_raterio\": 50\n        },\n        {\n            \"id_conta\": 2,\n            \"codigo_finalidade_spb\": \"12345\",\n            \"percentual_raterio\": 50\n        }\n    ]\n}]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:58:06.101Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-4",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "Before request [uri=/acordos_comerciais]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:58:06.170Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-4",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "After request [uri=/acordos_comerciais]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:58:06.172Z",
  "level" : "ERROR",
  "thread" : "http-nio-8080-exec-4",
  "logger" : "org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]",
  "message" : "Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.RuntimeException] with root cause",
  "context" : "default",
  "exception" : "java.lang.RuntimeException: null\r\n\tat br.com.arthur.implementacaoh2.services.AcordoComercialRepositoryImpl.lambda$0(AcordoComercialRepositoryImpl.java:27)\r\n\tat java.util.Optional.orElseThrow(Optional.java:290)\r\n\tat br.com.arthur.implementacaoh2.services.AcordoComercialRepositoryImpl.consultaAcordoComercial(AcordoComercialRepositoryImpl.java:27)\r\n\tat br.com.arthur.implementacaoh2.services.AcordoComercialRepositoryImpl.lambda$1(AcordoComercialRepositoryImpl.java:49)\r\n\tat java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)\r\n\tat java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1382)\r\n\tat java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:482)\r\n\tat java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:472)\r\n\tat java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:708)\r\n\tat java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\r\n\tat java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:499)\r\n\tat br.com.arthur.implementacaoh2.services.AcordoComercialRepositoryImpl.consultaAcordosComerciais(AcordoComercialRepositoryImpl.java:51)\r\n\tat br.com.arthur.implementacaoh2.services.AcordoComercialRepositoryImpl$$FastClassBySpringCGLIB$$96d08d3b.invoke(<generated>)\r\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\r\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\r\n\tat org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\r\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)\r\n\tat br.com.arthur.implementacaoh2.services.AcordoComercialRepositoryImpl$$EnhancerBySpringCGLIB$$b0497a1d.consultaAcordosComerciais(<generated>)\r\n\tat br.com.arthur.implementacaoh2.entrypoints.AcordosComerciaisController.consulta(AcordosComerciaisController.java:34)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)\r\n\tat org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)\r\n\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)\r\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)\r\n\tat org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:897)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:634)\r\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:741)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.web.filter.AbstractRequestLoggingFilter.doFilterInternal(AbstractRequestLoggingFilter.java:262)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)\r\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)\r\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)\r\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)\r\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\r\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)\r\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)\r\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)\r\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)\r\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)\r\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)\r\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"
}{
  "timestamp" : "2020-03-12T02:58:38.413Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "br.com.arthur.implementacaoh2.App",
  "message" : "Starting App on DESKTOP-JGRRF34 with PID 7060 (C:\\Users\\nakag\\Documents\\workspace-spring-tool-suite-4-4.3.2.RELEASE\\implementacaoh2\\target\\classes started by nakag in C:\\Users\\nakag\\Documents\\workspace-spring-tool-suite-4-4.3.2.RELEASE\\implementacaoh2)",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:58:38.443Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "br.com.arthur.implementacaoh2.App",
  "message" : "No active profile set, falling back to default profiles: default",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:58:39.368Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.springframework.data.repository.config.RepositoryConfigurationDelegate",
  "message" : "Bootstrapping Spring Data repositories in DEFAULT mode.",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:58:39.515Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.springframework.data.repository.config.RepositoryConfigurationDelegate",
  "message" : "Finished Spring Data repository scanning in 134ms. Found 6 repository interfaces.",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:58:40.030Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
  "message" : "Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$dcc2bdea] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:58:40.636Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.springframework.boot.web.embedded.tomcat.TomcatWebServer",
  "message" : "Tomcat initialized with port(s): 8080 (http)",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:58:40.716Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.apache.coyote.http11.Http11NioProtocol",
  "message" : "Initializing ProtocolHandler [\"http-nio-8080\"]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:58:40.732Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.apache.catalina.core.StandardService",
  "message" : "Starting service [Tomcat]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:58:40.732Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.apache.catalina.core.StandardEngine",
  "message" : "Starting Servlet engine: [Apache Tomcat/9.0.22]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:58:40.893Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]",
  "message" : "Initializing Spring embedded WebApplicationContext",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:58:40.894Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.springframework.web.context.ContextLoader",
  "message" : "Root WebApplicationContext: initialization completed in 2351 ms",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:58:40.990Z",
  "level" : "DEBUG",
  "thread" : "main",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "Filter 'logFilter' configured for use",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:58:41.140Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "com.zaxxer.hikari.HikariDataSource",
  "message" : "HikariPool-1 - Starting...",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:58:41.429Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "com.zaxxer.hikari.HikariDataSource",
  "message" : "HikariPool-1 - Start completed.",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:58:41.547Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.hibernate.jpa.internal.util.LogHelper",
  "message" : "HHH000204: Processing PersistenceUnitInfo [\n\tname: default\n\t...]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:58:41.684Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.hibernate.Version",
  "message" : "HHH000412: Hibernate Core {5.3.10.Final}",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:58:41.687Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.hibernate.cfg.Environment",
  "message" : "HHH000206: hibernate.properties not found",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:58:41.908Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.hibernate.annotations.common.Version",
  "message" : "HCANN000001: Hibernate Commons Annotations {5.0.4.Final}",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:58:42.181Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.hibernate.dialect.Dialect",
  "message" : "HHH000400: Using dialect: org.hibernate.dialect.H2Dialect",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:58:42.668Z",
  "level" : "WARN",
  "thread" : "main",
  "logger" : "org.hibernate.mapping.RootClass",
  "message" : "HHH000038: Composite-id class does not override equals(): br.com.arthur.implementacaoh2.entities.ContaRepasseId",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:58:42.668Z",
  "level" : "WARN",
  "thread" : "main",
  "logger" : "org.hibernate.mapping.RootClass",
  "message" : "HHH000039: Composite-id class does not override hashCode(): br.com.arthur.implementacaoh2.entities.ContaRepasseId",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:58:43.461Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.hibernate.tool.schema.internal.SchemaCreatorImpl",
  "message" : "HHH000476: Executing import script 'org.hibernate.tool.schema.internal.exec.ScriptSourceInputNonExistentImpl@7ebaf0d'",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:58:43.465Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean",
  "message" : "Initialized JPA EntityManagerFactory for persistence unit 'default'",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:58:43.920Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.hibernate.hql.internal.QueryTranslatorFactoryInitiator",
  "message" : "HHH000397: Using ASTQueryTranslatorFactory",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:58:44.681Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor",
  "message" : "Initializing ExecutorService 'applicationTaskExecutor'",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:58:44.748Z",
  "level" : "WARN",
  "thread" : "main",
  "logger" : "org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration$JpaWebMvcConfiguration",
  "message" : "spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:58:45.006Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.apache.coyote.http11.Http11NioProtocol",
  "message" : "Starting ProtocolHandler [\"http-nio-8080\"]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:58:45.048Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.springframework.boot.web.embedded.tomcat.TomcatWebServer",
  "message" : "Tomcat started on port(s): 8080 (http) with context path ''",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:58:45.051Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "br.com.arthur.implementacaoh2.App",
  "message" : "Started App in 7.073 seconds (JVM running for 8.273)",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:58:51.285Z",
  "level" : "INFO",
  "thread" : "http-nio-8080-exec-2",
  "logger" : "org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]",
  "message" : "Initializing Spring DispatcherServlet 'dispatcherServlet'",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:58:51.285Z",
  "level" : "INFO",
  "thread" : "http-nio-8080-exec-2",
  "logger" : "org.springframework.web.servlet.DispatcherServlet",
  "message" : "Initializing Servlet 'dispatcherServlet'",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:58:51.297Z",
  "level" : "INFO",
  "thread" : "http-nio-8080-exec-2",
  "logger" : "org.springframework.web.servlet.DispatcherServlet",
  "message" : "Completed initialization in 12 ms",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:58:58.665Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-2",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "Before request [uri=/acordos_comerciais]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:58:59.063Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-2",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "After request [uri=/acordos_comerciais;payload={\n    \"id_acordo_comercial\": 1,\n    \"id_versao_acordo_comercial\": 1,\n    \"id_parceiro\": 1,\n    \"id_produto\": 1,\n    \"situacao\": \"ativo\",\n    \"data_inicio_vigencia\": \"2020-12-01\",\n    \"vigencia_indeterminada\": false,\n    \"data_fim_vigencia\": \"2020-12-02\",\n    \"configuracoes_canal\": [\n        {\n            \"id_canal\": \"C1\"\n        },\n        {\n            \"id_canal\": \"71\"\n        }\n    ],\n    \"contas_repasse\": [\n        {\n            \"id_conta\": 1,\n            \"codigo_finalidade_spb\": \"12345\",\n            \"percentual_raterio\": 50\n        },\n        {\n            \"id_conta\": 2,\n            \"codigo_finalidade_spb\": \"12345\",\n            \"percentual_raterio\": 50\n        }\n    ]\n}]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:59:10.367Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-4",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "Before request [uri=/acordos_comerciais]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:59:10.384Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-4",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "After request [uri=/acordos_comerciais;payload={\n    \"id_acordo_comercial\": 1,\n    \"id_versao_acordo_comercial\": 2,\n    \"id_parceiro\": 1,\n    \"id_produto\": 1,\n    \"situacao\": \"ativo\",\n    \"data_inicio_vigencia\": \"2020-12-01\",\n    \"vigencia_indeterminada\": false,\n    \"data_fim_vigencia\": \"2020-12-02\",\n    \"configuracoes_canal\": [\n        {\n            \"id_canal\": \"C1\"\n        },\n        {\n            \"id_canal\": \"71\"\n        }\n    ],\n    \"contas_repasse\": [\n        {\n            \"id_conta\": 1,\n            \"codigo_finalidade_spb\": \"12345\",\n            \"percentual_raterio\": 50\n        },\n        {\n            \"id_conta\": 2,\n            \"codigo_finalidade_spb\": \"12345\",\n            \"percentual_raterio\": 50\n        }\n    ]\n}]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T02:59:24.976Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-5",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "Before request [uri=/acordos_comerciais]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:00:11.785Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "br.com.arthur.implementacaoh2.App",
  "message" : "Starting App on DESKTOP-JGRRF34 with PID 9104 (C:\\Users\\nakag\\Documents\\workspace-spring-tool-suite-4-4.3.2.RELEASE\\implementacaoh2\\target\\classes started by nakag in C:\\Users\\nakag\\Documents\\workspace-spring-tool-suite-4-4.3.2.RELEASE\\implementacaoh2)",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:00:11.816Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "br.com.arthur.implementacaoh2.App",
  "message" : "No active profile set, falling back to default profiles: default",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:00:12.767Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.springframework.data.repository.config.RepositoryConfigurationDelegate",
  "message" : "Bootstrapping Spring Data repositories in DEFAULT mode.",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:00:12.915Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.springframework.data.repository.config.RepositoryConfigurationDelegate",
  "message" : "Finished Spring Data repository scanning in 137ms. Found 6 repository interfaces.",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:00:13.415Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
  "message" : "Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$d91896a9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:00:14.036Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.springframework.boot.web.embedded.tomcat.TomcatWebServer",
  "message" : "Tomcat initialized with port(s): 8080 (http)",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:00:14.118Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.apache.coyote.http11.Http11NioProtocol",
  "message" : "Initializing ProtocolHandler [\"http-nio-8080\"]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:00:14.131Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.apache.catalina.core.StandardService",
  "message" : "Starting service [Tomcat]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:00:14.132Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.apache.catalina.core.StandardEngine",
  "message" : "Starting Servlet engine: [Apache Tomcat/9.0.22]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:00:14.293Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]",
  "message" : "Initializing Spring embedded WebApplicationContext",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:00:14.294Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.springframework.web.context.ContextLoader",
  "message" : "Root WebApplicationContext: initialization completed in 2377 ms",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:00:14.386Z",
  "level" : "DEBUG",
  "thread" : "main",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "Filter 'logFilter' configured for use",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:00:14.529Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "com.zaxxer.hikari.HikariDataSource",
  "message" : "HikariPool-1 - Starting...",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:00:14.876Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "com.zaxxer.hikari.HikariDataSource",
  "message" : "HikariPool-1 - Start completed.",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:00:14.964Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.hibernate.jpa.internal.util.LogHelper",
  "message" : "HHH000204: Processing PersistenceUnitInfo [\n\tname: default\n\t...]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:00:15.079Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.hibernate.Version",
  "message" : "HHH000412: Hibernate Core {5.3.10.Final}",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:00:15.081Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.hibernate.cfg.Environment",
  "message" : "HHH000206: hibernate.properties not found",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:00:15.282Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.hibernate.annotations.common.Version",
  "message" : "HCANN000001: Hibernate Commons Annotations {5.0.4.Final}",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:00:15.538Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.hibernate.dialect.Dialect",
  "message" : "HHH000400: Using dialect: org.hibernate.dialect.H2Dialect",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:00:15.946Z",
  "level" : "WARN",
  "thread" : "main",
  "logger" : "org.hibernate.mapping.RootClass",
  "message" : "HHH000038: Composite-id class does not override equals(): br.com.arthur.implementacaoh2.entities.ContaRepasseId",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:00:15.947Z",
  "level" : "WARN",
  "thread" : "main",
  "logger" : "org.hibernate.mapping.RootClass",
  "message" : "HHH000039: Composite-id class does not override hashCode(): br.com.arthur.implementacaoh2.entities.ContaRepasseId",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:00:16.580Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.hibernate.tool.schema.internal.SchemaCreatorImpl",
  "message" : "HHH000476: Executing import script 'org.hibernate.tool.schema.internal.exec.ScriptSourceInputNonExistentImpl@6549ce71'",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:00:16.583Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean",
  "message" : "Initialized JPA EntityManagerFactory for persistence unit 'default'",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:00:16.983Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.hibernate.hql.internal.QueryTranslatorFactoryInitiator",
  "message" : "HHH000397: Using ASTQueryTranslatorFactory",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:00:17.672Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor",
  "message" : "Initializing ExecutorService 'applicationTaskExecutor'",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:00:17.735Z",
  "level" : "WARN",
  "thread" : "main",
  "logger" : "org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration$JpaWebMvcConfiguration",
  "message" : "spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:00:17.947Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.apache.coyote.http11.Http11NioProtocol",
  "message" : "Starting ProtocolHandler [\"http-nio-8080\"]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:00:17.982Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.springframework.boot.web.embedded.tomcat.TomcatWebServer",
  "message" : "Tomcat started on port(s): 8080 (http) with context path ''",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:00:17.985Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "br.com.arthur.implementacaoh2.App",
  "message" : "Started App in 6.654 seconds (JVM running for 7.71)",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:00:31.437Z",
  "level" : "INFO",
  "thread" : "http-nio-8080-exec-1",
  "logger" : "org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]",
  "message" : "Initializing Spring DispatcherServlet 'dispatcherServlet'",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:00:31.438Z",
  "level" : "INFO",
  "thread" : "http-nio-8080-exec-1",
  "logger" : "org.springframework.web.servlet.DispatcherServlet",
  "message" : "Initializing Servlet 'dispatcherServlet'",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:00:31.455Z",
  "level" : "INFO",
  "thread" : "http-nio-8080-exec-1",
  "logger" : "org.springframework.web.servlet.DispatcherServlet",
  "message" : "Completed initialization in 14 ms",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:00:31.478Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-1",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "Before request [uri=/acordos_comerciais]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:00:31.914Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-1",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "After request [uri=/acordos_comerciais;payload={\n    \"id_acordo_comercial\": 1,\n    \"id_versao_acordo_comercial\": 1,\n    \"id_parceiro\": 1,\n    \"id_produto\": 1,\n    \"situacao\": \"ativo\",\n    \"data_inicio_vigencia\": \"2020-12-01\",\n    \"vigencia_indeterminada\": false,\n    \"data_fim_vigencia\": \"2020-12-02\",\n    \"configuracoes_canal\": [\n        {\n            \"id_canal\": \"C1\"\n        },\n        {\n            \"id_canal\": \"71\"\n        }\n    ],\n    \"contas_repasse\": [\n        {\n            \"id_conta\": 1,\n            \"codigo_finalidade_spb\": \"12345\",\n            \"percentual_raterio\": 50\n        },\n        {\n            \"id_conta\": 2,\n            \"codigo_finalidade_spb\": \"12345\",\n            \"percentual_raterio\": 50\n        }\n    ]\n}]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:00:34.875Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-3",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "Before request [uri=/acordos_comerciais]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:00:34.902Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-3",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "After request [uri=/acordos_comerciais;payload={\n    \"id_acordo_comercial\": 1,\n    \"id_versao_acordo_comercial\": 2,\n    \"id_parceiro\": 1,\n    \"id_produto\": 1,\n    \"situacao\": \"ativo\",\n    \"data_inicio_vigencia\": \"2020-12-01\",\n    \"vigencia_indeterminada\": false,\n    \"data_fim_vigencia\": \"2020-12-02\",\n    \"configuracoes_canal\": [\n        {\n            \"id_canal\": \"C1\"\n        },\n        {\n            \"id_canal\": \"71\"\n        }\n    ],\n    \"contas_repasse\": [\n        {\n            \"id_conta\": 1,\n            \"codigo_finalidade_spb\": \"12345\",\n            \"percentual_raterio\": 50\n        },\n        {\n            \"id_conta\": 2,\n            \"codigo_finalidade_spb\": \"12345\",\n            \"percentual_raterio\": 50\n        }\n    ]\n}]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:00:47.415Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-5",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "Before request [uri=/acordos_comerciais]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:02:35.733Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-5",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "After request [uri=/acordos_comerciais]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:02:35.736Z",
  "level" : "ERROR",
  "thread" : "http-nio-8080-exec-5",
  "logger" : "org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]",
  "message" : "Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.RuntimeException] with root cause",
  "context" : "default",
  "exception" : "java.lang.RuntimeException: null\r\n\tat br.com.arthur.implementacaoh2.services.AcordoComercialRepositoryImpl.lambda$0(AcordoComercialRepositoryImpl.java:28)\r\n\tat java.util.Optional.orElseThrow(Optional.java:290)\r\n\tat br.com.arthur.implementacaoh2.services.AcordoComercialRepositoryImpl.consultaAcordoComercial(AcordoComercialRepositoryImpl.java:28)\r\n\tat br.com.arthur.implementacaoh2.services.AcordoComercialRepositoryImpl.lambda$1(AcordoComercialRepositoryImpl.java:53)\r\n\tat java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)\r\n\tat java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1382)\r\n\tat java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:482)\r\n\tat java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:472)\r\n\tat java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:708)\r\n\tat java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\r\n\tat java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:499)\r\n\tat br.com.arthur.implementacaoh2.services.AcordoComercialRepositoryImpl.consultaAcordosComerciais(AcordoComercialRepositoryImpl.java:55)\r\n\tat br.com.arthur.implementacaoh2.services.AcordoComercialRepositoryImpl$$FastClassBySpringCGLIB$$96d08d3b.invoke(<generated>)\r\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\r\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\r\n\tat org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\r\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)\r\n\tat br.com.arthur.implementacaoh2.services.AcordoComercialRepositoryImpl$$EnhancerBySpringCGLIB$$7d9b28cc.consultaAcordosComerciais(<generated>)\r\n\tat br.com.arthur.implementacaoh2.entrypoints.AcordosComerciaisController.consulta(AcordosComerciaisController.java:34)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)\r\n\tat org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)\r\n\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)\r\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)\r\n\tat org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:897)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:634)\r\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:741)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.web.filter.AbstractRequestLoggingFilter.doFilterInternal(AbstractRequestLoggingFilter.java:262)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)\r\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)\r\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)\r\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)\r\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\r\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)\r\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)\r\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)\r\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)\r\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)\r\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)\r\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"
}{
  "timestamp" : "2020-03-12T03:02:40.530Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-4",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "Before request [uri=/h2-console/login.do?jsessionid=756d4979c51afa90d54ed46bf66999b0]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:02:40.555Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-4",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "After request [uri=/h2-console/login.do?jsessionid=756d4979c51afa90d54ed46bf66999b0;payload=jsessionid=756d4979c51afa90d54ed46bf66999b0&language=en&setting=Generic+H2+%28Embedded%29&name=Generic+H2+%28Embedded%29&driver=org.h2.Driver&url=jdbc%3Ah2%3Amem%3Atestdb&user=sa&password=password]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:02:40.573Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-6",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "Before request [uri=/h2-console/stylesheet.css]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:02:40.576Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-6",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "After request [uri=/h2-console/stylesheet.css]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:02:40.584Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-7",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "Before request [uri=/h2-console/login.jsp?jsessionid=a32d13c6d1081d285b9cfd86fa51e00e]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:02:40.588Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-7",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "After request [uri=/h2-console/login.jsp?jsessionid=a32d13c6d1081d285b9cfd86fa51e00e]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:02:40.603Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-9",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "Before request [uri=/h2-console/background.gif]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:02:40.607Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-9",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "After request [uri=/h2-console/background.gif]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:02:41.807Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-8",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "Before request [uri=/h2-console/login.do?jsessionid=a32d13c6d1081d285b9cfd86fa51e00e]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:02:41.812Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-8",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "After request [uri=/h2-console/login.do?jsessionid=a32d13c6d1081d285b9cfd86fa51e00e;payload=jsessionid=a32d13c6d1081d285b9cfd86fa51e00e&language=en&setting=Generic+H2+%28Embedded%29&name=Generic+H2+%28Embedded%29&driver=org.h2.Driver&url=jdbc%3Ah2%3Amem%3Atestdb&user=sa&password=password]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:02:41.832Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-10",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "Before request [uri=/h2-console/header.jsp?jsessionid=a32d13c6d1081d285b9cfd86fa51e00e]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:02:41.835Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-2",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "Before request [uri=/h2-console/tables.do?jsessionid=a32d13c6d1081d285b9cfd86fa51e00e]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:02:41.835Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-10",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "After request [uri=/h2-console/header.jsp?jsessionid=a32d13c6d1081d285b9cfd86fa51e00e]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:02:41.836Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-1",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "Before request [uri=/h2-console/query.jsp?jsessionid=a32d13c6d1081d285b9cfd86fa51e00e]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:02:41.837Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-3",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "Before request [uri=/h2-console/help.jsp?jsessionid=a32d13c6d1081d285b9cfd86fa51e00e]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:02:41.840Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-3",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "After request [uri=/h2-console/help.jsp?jsessionid=a32d13c6d1081d285b9cfd86fa51e00e]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:02:41.841Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-1",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "After request [uri=/h2-console/query.jsp?jsessionid=a32d13c6d1081d285b9cfd86fa51e00e]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:02:41.854Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-5",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "Before request [uri=/h2-console/icon_disconnect.gif]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:02:41.854Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-4",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "Before request [uri=/h2-console/icon_line.gif]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:02:41.858Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-7",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "Before request [uri=/h2-console/icon_rollback.gif]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:02:41.859Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-9",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "Before request [uri=/h2-console/icon_commit.gif]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:02:41.858Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-6",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "Before request [uri=/h2-console/icon_refresh.gif]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:02:41.865Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-9",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "After request [uri=/h2-console/icon_commit.gif]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:02:41.865Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-5",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "After request [uri=/h2-console/icon_disconnect.gif]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:02:41.868Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-7",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "After request [uri=/h2-console/icon_rollback.gif]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:02:41.867Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-4",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "After request [uri=/h2-console/icon_line.gif]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:02:41.870Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-6",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "After request [uri=/h2-console/icon_refresh.gif]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:02:41.874Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-8",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "Before request [uri=/h2-console/icon_run.gif]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:02:41.879Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-10",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "Before request [uri=/h2-console/icon_run_selected.gif]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:02:41.880Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-3",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "Before request [uri=/h2-console/icon_stop.gif]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:02:41.882Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-8",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "After request [uri=/h2-console/icon_run.gif]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:02:41.884Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-3",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "After request [uri=/h2-console/icon_stop.gif]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:02:41.885Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-1",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "Before request [uri=/h2-console/icon_history.gif]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:02:41.887Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-9",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "Before request [uri=/h2-console/icon_help.gif]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:02:41.888Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-10",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "After request [uri=/h2-console/icon_run_selected.gif]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:02:41.890Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-1",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "After request [uri=/h2-console/icon_history.gif]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:02:41.896Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-9",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "After request [uri=/h2-console/icon_help.gif]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:02:41.972Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-2",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "After request [uri=/h2-console/tables.do?jsessionid=a32d13c6d1081d285b9cfd86fa51e00e]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:02:41.982Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-7",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "Before request [uri=/h2-console/tree.js]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:02:41.986Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-7",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "After request [uri=/h2-console/tree.js]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:02:41.992Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-4",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "Before request [uri=/h2-console/tree_plus.gif]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:02:41.992Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-5",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "Before request [uri=/h2-console/tree_minus.gif]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:02:41.993Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-6",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "Before request [uri=/h2-console/tree_database.gif]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:02:41.994Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-8",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "Before request [uri=/h2-console/tree_table.gif]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:02:41.994Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-3",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "Before request [uri=/h2-console/tree_empty.gif]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:02:41.995Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-1",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "Before request [uri=/h2-console/tree_column.gif]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:02:41.998Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-5",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "After request [uri=/h2-console/tree_minus.gif]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:02:41.998Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-6",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "After request [uri=/h2-console/tree_database.gif]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:02:42.000Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-8",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "After request [uri=/h2-console/tree_table.gif]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:02:42.001Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-1",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "After request [uri=/h2-console/tree_column.gif]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:02:42.000Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-3",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "After request [uri=/h2-console/tree_empty.gif]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:02:42.004Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-4",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "After request [uri=/h2-console/tree_plus.gif]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:02:42.006Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-10",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "Before request [uri=/h2-console/tree_type.gif]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:02:42.010Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-10",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "After request [uri=/h2-console/tree_type.gif]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:02:42.014Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-9",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "Before request [uri=/h2-console/tree_index_az.gif]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:02:42.015Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-2",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "Before request [uri=/h2-console/tree_index.gif]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:02:42.017Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-9",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "After request [uri=/h2-console/tree_index_az.gif]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:02:42.017Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-2",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "After request [uri=/h2-console/tree_index.gif]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:02:42.039Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-7",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "Before request [uri=/h2-console/tree_folder.gif]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:02:42.042Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-7",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "After request [uri=/h2-console/tree_folder.gif]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:02:42.045Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-6",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "Before request [uri=/h2-console/tree_users.gif]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:02:42.046Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-5",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "Before request [uri=/h2-console/tree_user.gif]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:02:42.046Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-8",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "Before request [uri=/h2-console/tree_info.gif]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:02:42.050Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-6",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "After request [uri=/h2-console/tree_users.gif]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:02:42.051Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-5",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "After request [uri=/h2-console/tree_user.gif]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:02:42.051Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-8",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "After request [uri=/h2-console/tree_info.gif]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:02:43.768Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-1",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "Before request [uri=/h2-console/query.do?jsessionid=a32d13c6d1081d285b9cfd86fa51e00e]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:02:43.775Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-1",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "After request [uri=/h2-console/query.do?jsessionid=a32d13c6d1081d285b9cfd86fa51e00e;payload=jsessionid=a32d13c6d1081d285b9cfd86fa51e00e&sql=SELECT+*+FROM+ACORDO_COMERCIAL+]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:02:43.790Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-3",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "Before request [uri=/h2-console/table.js]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:02:43.794Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-3",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "After request [uri=/h2-console/table.js]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:02:56.512Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-10",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "Before request [uri=/acordos_comerciais]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:02:56.524Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-10",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "After request [uri=/acordos_comerciais;payload={\n    \"id_acordo_comercial\": 2,\n    \"id_versao_acordo_comercial\": 1,\n    \"id_parceiro\": 1,\n    \"id_produto\": 1,\n    \"situacao\": \"ativo\",\n    \"data_inicio_vigencia\": \"2020-12-01\",\n    \"vigencia_indeterminada\": false,\n    \"data_fim_vigencia\": \"2020-12-02\",\n    \"configuracoes_canal\": [\n        {\n            \"id_canal\": \"C1\"\n        },\n        {\n            \"id_canal\": \"71\"\n        }\n    ],\n    \"contas_repasse\": [\n        {\n            \"id_conta\": 1,\n            \"codigo_finalidade_spb\": \"12345\",\n            \"percentual_raterio\": 50\n        },\n        {\n            \"id_conta\": 2,\n            \"codigo_finalidade_spb\": \"12345\",\n            \"percentual_raterio\": 50\n        }\n    ]\n}]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:03:06.243Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-9",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "Before request [uri=/acordos_comerciais]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:05:44.670Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "br.com.arthur.implementacaoh2.App",
  "message" : "Starting App on DESKTOP-JGRRF34 with PID 5028 (C:\\Users\\nakag\\Documents\\workspace-spring-tool-suite-4-4.3.2.RELEASE\\implementacaoh2\\target\\classes started by nakag in C:\\Users\\nakag\\Documents\\workspace-spring-tool-suite-4-4.3.2.RELEASE\\implementacaoh2)",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:05:44.695Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "br.com.arthur.implementacaoh2.App",
  "message" : "No active profile set, falling back to default profiles: default",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:05:45.694Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.springframework.data.repository.config.RepositoryConfigurationDelegate",
  "message" : "Bootstrapping Spring Data repositories in DEFAULT mode.",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:05:45.856Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.springframework.data.repository.config.RepositoryConfigurationDelegate",
  "message" : "Finished Spring Data repository scanning in 149ms. Found 6 repository interfaces.",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:05:46.340Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
  "message" : "Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$d55b608] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:05:47.036Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.springframework.boot.web.embedded.tomcat.TomcatWebServer",
  "message" : "Tomcat initialized with port(s): 8080 (http)",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:05:47.131Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.apache.coyote.http11.Http11NioProtocol",
  "message" : "Initializing ProtocolHandler [\"http-nio-8080\"]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:05:47.141Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.apache.catalina.core.StandardService",
  "message" : "Starting service [Tomcat]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:05:47.142Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.apache.catalina.core.StandardEngine",
  "message" : "Starting Servlet engine: [Apache Tomcat/9.0.22]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:05:47.299Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]",
  "message" : "Initializing Spring embedded WebApplicationContext",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:05:47.299Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.springframework.web.context.ContextLoader",
  "message" : "Root WebApplicationContext: initialization completed in 2507 ms",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:05:47.386Z",
  "level" : "DEBUG",
  "thread" : "main",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "Filter 'logFilter' configured for use",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:05:47.539Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "com.zaxxer.hikari.HikariDataSource",
  "message" : "HikariPool-1 - Starting...",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:05:47.812Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "com.zaxxer.hikari.HikariDataSource",
  "message" : "HikariPool-1 - Start completed.",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:05:47.926Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.hibernate.jpa.internal.util.LogHelper",
  "message" : "HHH000204: Processing PersistenceUnitInfo [\n\tname: default\n\t...]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:05:48.043Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.hibernate.Version",
  "message" : "HHH000412: Hibernate Core {5.3.10.Final}",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:05:48.045Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.hibernate.cfg.Environment",
  "message" : "HHH000206: hibernate.properties not found",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:05:48.231Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.hibernate.annotations.common.Version",
  "message" : "HCANN000001: Hibernate Commons Annotations {5.0.4.Final}",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:05:48.458Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.hibernate.dialect.Dialect",
  "message" : "HHH000400: Using dialect: org.hibernate.dialect.H2Dialect",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:05:48.851Z",
  "level" : "WARN",
  "thread" : "main",
  "logger" : "org.hibernate.mapping.RootClass",
  "message" : "HHH000038: Composite-id class does not override equals(): br.com.arthur.implementacaoh2.entities.ContaRepasseId",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:05:48.851Z",
  "level" : "WARN",
  "thread" : "main",
  "logger" : "org.hibernate.mapping.RootClass",
  "message" : "HHH000039: Composite-id class does not override hashCode(): br.com.arthur.implementacaoh2.entities.ContaRepasseId",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:05:49.561Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.hibernate.tool.schema.internal.SchemaCreatorImpl",
  "message" : "HHH000476: Executing import script 'org.hibernate.tool.schema.internal.exec.ScriptSourceInputNonExistentImpl@61c145cb'",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:05:49.565Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean",
  "message" : "Initialized JPA EntityManagerFactory for persistence unit 'default'",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:05:49.978Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.hibernate.hql.internal.QueryTranslatorFactoryInitiator",
  "message" : "HHH000397: Using ASTQueryTranslatorFactory",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:05:50.748Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor",
  "message" : "Initializing ExecutorService 'applicationTaskExecutor'",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:05:50.818Z",
  "level" : "WARN",
  "thread" : "main",
  "logger" : "org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration$JpaWebMvcConfiguration",
  "message" : "spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:05:51.056Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.apache.coyote.http11.Http11NioProtocol",
  "message" : "Starting ProtocolHandler [\"http-nio-8080\"]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:05:51.091Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.springframework.boot.web.embedded.tomcat.TomcatWebServer",
  "message" : "Tomcat started on port(s): 8080 (http) with context path ''",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:05:51.093Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "br.com.arthur.implementacaoh2.App",
  "message" : "Started App in 6.894 seconds (JVM running for 8.029)",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:05:58.069Z",
  "level" : "INFO",
  "thread" : "http-nio-8080-exec-2",
  "logger" : "org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]",
  "message" : "Initializing Spring DispatcherServlet 'dispatcherServlet'",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:05:58.070Z",
  "level" : "INFO",
  "thread" : "http-nio-8080-exec-2",
  "logger" : "org.springframework.web.servlet.DispatcherServlet",
  "message" : "Initializing Servlet 'dispatcherServlet'",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:05:58.084Z",
  "level" : "INFO",
  "thread" : "http-nio-8080-exec-2",
  "logger" : "org.springframework.web.servlet.DispatcherServlet",
  "message" : "Completed initialization in 14 ms",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:05:58.111Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-2",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "Before request [uri=/acordos_comerciais]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:05:58.542Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-2",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "After request [uri=/acordos_comerciais;payload={\n    \"id_acordo_comercial\": 1,\n    \"id_versao_acordo_comercial\": 1,\n    \"id_parceiro\": 1,\n    \"id_produto\": 1,\n    \"situacao\": \"ativo\",\n    \"data_inicio_vigencia\": \"2020-12-01\",\n    \"vigencia_indeterminada\": false,\n    \"data_fim_vigencia\": \"2020-12-02\",\n    \"configuracoes_canal\": [\n        {\n            \"id_canal\": \"C1\"\n        },\n        {\n            \"id_canal\": \"71\"\n        }\n    ],\n    \"contas_repasse\": [\n        {\n            \"id_conta\": 1,\n            \"codigo_finalidade_spb\": \"12345\",\n            \"percentual_raterio\": 50\n        },\n        {\n            \"id_conta\": 2,\n            \"codigo_finalidade_spb\": \"12345\",\n            \"percentual_raterio\": 50\n        }\n    ]\n}]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:06:02.029Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-3",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "Before request [uri=/acordos_comerciais]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:06:02.048Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-3",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "After request [uri=/acordos_comerciais;payload={\n    \"id_acordo_comercial\": 1,\n    \"id_versao_acordo_comercial\": 2,\n    \"id_parceiro\": 1,\n    \"id_produto\": 1,\n    \"situacao\": \"ativo\",\n    \"data_inicio_vigencia\": \"2020-12-01\",\n    \"vigencia_indeterminada\": false,\n    \"data_fim_vigencia\": \"2020-12-02\",\n    \"configuracoes_canal\": [\n        {\n            \"id_canal\": \"C1\"\n        },\n        {\n            \"id_canal\": \"71\"\n        }\n    ],\n    \"contas_repasse\": [\n        {\n            \"id_conta\": 1,\n            \"codigo_finalidade_spb\": \"12345\",\n            \"percentual_raterio\": 50\n        },\n        {\n            \"id_conta\": 2,\n            \"codigo_finalidade_spb\": \"12345\",\n            \"percentual_raterio\": 50\n        }\n    ]\n}]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:06:07.239Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-4",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "Before request [uri=/acordos_comerciais]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:06:07.249Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-4",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "After request [uri=/acordos_comerciais;payload={\n    \"id_acordo_comercial\": 2,\n    \"id_versao_acordo_comercial\": 1,\n    \"id_parceiro\": 1,\n    \"id_produto\": 1,\n    \"situacao\": \"ativo\",\n    \"data_inicio_vigencia\": \"2020-12-01\",\n    \"vigencia_indeterminada\": false,\n    \"data_fim_vigencia\": \"2020-12-02\",\n    \"configuracoes_canal\": [\n        {\n            \"id_canal\": \"C1\"\n        },\n        {\n            \"id_canal\": \"71\"\n        }\n    ],\n    \"contas_repasse\": [\n        {\n            \"id_conta\": 1,\n            \"codigo_finalidade_spb\": \"12345\",\n            \"percentual_raterio\": 50\n        },\n        {\n            \"id_conta\": 2,\n            \"codigo_finalidade_spb\": \"12345\",\n            \"percentual_raterio\": 50\n        }\n    ]\n}]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:06:09.890Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-5",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "Before request [uri=/acordos_comerciais]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:06:09.935Z",
  "level" : "WARN",
  "thread" : "http-nio-8080-exec-5",
  "logger" : "org.hibernate.engine.jdbc.spi.SqlExceptionHelper",
  "message" : "SQL Error: 42000, SQLState: 42000",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:06:09.936Z",
  "level" : "ERROR",
  "thread" : "http-nio-8080-exec-5",
  "logger" : "org.hibernate.engine.jdbc.spi.SqlExceptionHelper",
  "message" : "Syntax error in SQL statement \"SELECT AC.ID_ACORDO_COMERCIAL AS IDACORDOCOMERCIAL, AC.ID_VERSAO_ACORDO_COMERCIAL AS IDVERSAOACORDOCOMERCIALFROM ([*]SELECT ID_ACORDO_COMERCIAL, MAX(ID_VERSAO_ACORDO_COMERCIAL) AS MAIOR_VERSAO FROM ACORDO_COMERCIAL GROUP BY ID_ACORDO_COMERCIAL) AS X INNER JOIN ACORDO_COMERCIAL AS AC ON X.ID_ACORDO_COMERCIAL = AC.ID_ACORDO_COMERCIAL AND X.MAIOR_VERSAO = AC.ID_VERSAO_ACORDO_COMERCIAL ORDER BY DATA_INCLUSAO DESC \"; SQL statement:\nSELECT AC.ID_ACORDO_COMERCIAL as idAcordoComercial, AC.ID_VERSAO_ACORDO_COMERCIAL as idVersaoAcordoComercialFROM (SELECT ID_ACORDO_COMERCIAL, MAX(ID_VERSAO_ACORDO_COMERCIAL) AS MAIOR_VERSAO FROM ACORDO_COMERCIAL GROUP BY ID_ACORDO_COMERCIAL) as x INNER JOIN ACORDO_COMERCIAL as AC ON x.ID_ACORDO_COMERCIAL = AC.ID_ACORDO_COMERCIAL AND x.MAIOR_VERSAO = AC.ID_VERSAO_ACORDO_COMERCIAL ORDER BY DATA_INCLUSAO DESC [42000-199]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:06:09.942Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-5",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "After request [uri=/acordos_comerciais]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:06:09.945Z",
  "level" : "ERROR",
  "thread" : "http-nio-8080-exec-5",
  "logger" : "org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]",
  "message" : "Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.dao.InvalidDataAccessResourceUsageException: could not prepare statement; SQL [SELECT AC.ID_ACORDO_COMERCIAL as idAcordoComercial, AC.ID_VERSAO_ACORDO_COMERCIAL as idVersaoAcordoComercialFROM (SELECT ID_ACORDO_COMERCIAL, MAX(ID_VERSAO_ACORDO_COMERCIAL) AS MAIOR_VERSAO FROM ACORDO_COMERCIAL GROUP BY ID_ACORDO_COMERCIAL) as x INNER JOIN ACORDO_COMERCIAL as AC ON x.ID_ACORDO_COMERCIAL = AC.ID_ACORDO_COMERCIAL AND x.MAIOR_VERSAO = AC.ID_VERSAO_ACORDO_COMERCIAL ORDER BY DATA_INCLUSAO DESC]; nested exception is org.hibernate.exception.SQLGrammarException: could not prepare statement] with root cause",
  "context" : "default",
  "exception" : "org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement \"SELECT AC.ID_ACORDO_COMERCIAL AS IDACORDOCOMERCIAL, AC.ID_VERSAO_ACORDO_COMERCIAL AS IDVERSAOACORDOCOMERCIALFROM ([*]SELECT ID_ACORDO_COMERCIAL, MAX(ID_VERSAO_ACORDO_COMERCIAL) AS MAIOR_VERSAO FROM ACORDO_COMERCIAL GROUP BY ID_ACORDO_COMERCIAL) AS X INNER JOIN ACORDO_COMERCIAL AS AC ON X.ID_ACORDO_COMERCIAL = AC.ID_ACORDO_COMERCIAL AND X.MAIOR_VERSAO = AC.ID_VERSAO_ACORDO_COMERCIAL ORDER BY DATA_INCLUSAO DESC \"; SQL statement:\nSELECT AC.ID_ACORDO_COMERCIAL as idAcordoComercial, AC.ID_VERSAO_ACORDO_COMERCIAL as idVersaoAcordoComercialFROM (SELECT ID_ACORDO_COMERCIAL, MAX(ID_VERSAO_ACORDO_COMERCIAL) AS MAIOR_VERSAO FROM ACORDO_COMERCIAL GROUP BY ID_ACORDO_COMERCIAL) as x INNER JOIN ACORDO_COMERCIAL as AC ON x.ID_ACORDO_COMERCIAL = AC.ID_ACORDO_COMERCIAL AND x.MAIOR_VERSAO = AC.ID_VERSAO_ACORDO_COMERCIAL ORDER BY DATA_INCLUSAO DESC [42000-199]\r\n\tat org.h2.message.DbException.getJdbcSQLException(DbException.java:451)\r\n\tat org.h2.message.DbException.getJdbcSQLException(DbException.java:427)\r\n\tat org.h2.message.DbException.get(DbException.java:205)\r\n\tat org.h2.message.DbException.get(DbException.java:181)\r\n\tat org.h2.message.DbException.getSyntaxError(DbException.java:229)\r\n\tat org.h2.command.Parser.getSyntaxError(Parser.java:989)\r\n\tat org.h2.command.Parser.prepareCommand(Parser.java:686)\r\n\tat org.h2.engine.Session.prepareLocal(Session.java:627)\r\n\tat org.h2.engine.Session.prepareCommand(Session.java:565)\r\n\tat org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1292)\r\n\tat org.h2.jdbc.JdbcPreparedStatement.<init>(JdbcPreparedStatement.java:77)\r\n\tat org.h2.jdbc.JdbcConnection.prepareStatement(JdbcConnection.java:349)\r\n\tat com.zaxxer.hikari.pool.ProxyConnection.prepareStatement(ProxyConnection.java:311)\r\n\tat com.zaxxer.hikari.pool.HikariProxyConnection.prepareStatement(HikariProxyConnection.java)\r\n\tat org.hibernate.engine.jdbc.internal.StatementPreparerImpl$5.doPrepare(StatementPreparerImpl.java:146)\r\n\tat org.hibernate.engine.jdbc.internal.StatementPreparerImpl$StatementPreparationTemplate.prepareStatement(StatementPreparerImpl.java:172)\r\n\tat org.hibernate.engine.jdbc.internal.StatementPreparerImpl.prepareQueryStatement(StatementPreparerImpl.java:148)\r\n\tat org.hibernate.loader.Loader.prepareQueryStatement(Loader.java:1984)\r\n\tat org.hibernate.loader.Loader.executeQueryStatement(Loader.java:1914)\r\n\tat org.hibernate.loader.Loader.executeQueryStatement(Loader.java:1892)\r\n\tat org.hibernate.loader.Loader.doQuery(Loader.java:937)\r\n\tat org.hibernate.loader.Loader.doQueryAndInitializeNonLazyCollections(Loader.java:340)\r\n\tat org.hibernate.loader.Loader.doList(Loader.java:2689)\r\n\tat org.hibernate.loader.Loader.doList(Loader.java:2672)\r\n\tat org.hibernate.loader.Loader.listIgnoreQueryCache(Loader.java:2506)\r\n\tat org.hibernate.loader.Loader.list(Loader.java:2501)\r\n\tat org.hibernate.loader.custom.CustomLoader.list(CustomLoader.java:338)\r\n\tat org.hibernate.internal.SessionImpl.listCustomQuery(SessionImpl.java:2223)\r\n\tat org.hibernate.internal.AbstractSharedSessionContract.list(AbstractSharedSessionContract.java:1069)\r\n\tat org.hibernate.query.internal.NativeQueryImpl.doList(NativeQueryImpl.java:170)\r\n\tat org.hibernate.query.internal.AbstractProducedQuery.list(AbstractProducedQuery.java:1505)\r\n\tat org.hibernate.query.Query.getResultList(Query.java:132)\r\n\tat org.springframework.data.jpa.repository.query.JpaQueryExecution$CollectionExecution.doExecute(JpaQueryExecution.java:129)\r\n\tat org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:91)\r\n\tat org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:136)\r\n\tat org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:125)\r\n\tat org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.doInvoke(RepositoryFactorySupport.java:605)\r\n\tat org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.lambda$invoke$3(RepositoryFactorySupport.java:595)\r\n\tat org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.invoke(RepositoryFactorySupport.java:595)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\r\n\tat org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:59)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\r\n\tat org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:295)\r\n\tat org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\r\n\tat org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\r\n\tat org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:144)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\r\n\tat org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$ExposeRepositoryInvocationInterceptor.invoke(CrudMethodMetadataPostProcessor.java:364)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\r\n\tat org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\r\n\tat org.springframework.data.repository.core.support.SurroundingTransactionDetectorMethodInterceptor.invoke(SurroundingTransactionDetectorMethodInterceptor.java:61)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\r\n\tat org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)\r\n\tat com.sun.proxy.$Proxy97.consultarAcordosComerciais(Unknown Source)\r\n\tat br.com.arthur.implementacaoh2.services.AcordoComercialRepositoryImpl.consultaAcordosComerciais(AcordoComercialRepositoryImpl.java:49)\r\n\tat br.com.arthur.implementacaoh2.services.AcordoComercialRepositoryImpl$$FastClassBySpringCGLIB$$96d08d3b.invoke(<generated>)\r\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\r\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\r\n\tat org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\r\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)\r\n\tat br.com.arthur.implementacaoh2.services.AcordoComercialRepositoryImpl$$EnhancerBySpringCGLIB$$8cada443.consultaAcordosComerciais(<generated>)\r\n\tat br.com.arthur.implementacaoh2.entrypoints.AcordosComerciaisController.consulta(AcordosComerciaisController.java:34)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)\r\n\tat org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)\r\n\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)\r\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)\r\n\tat org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:897)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:634)\r\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:741)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.web.filter.AbstractRequestLoggingFilter.doFilterInternal(AbstractRequestLoggingFilter.java:262)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)\r\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)\r\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)\r\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)\r\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\r\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)\r\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)\r\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)\r\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)\r\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)\r\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)\r\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"
}{
  "timestamp" : "2020-03-12T03:06:33.908Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "br.com.arthur.implementacaoh2.App",
  "message" : "Starting App on DESKTOP-JGRRF34 with PID 4224 (C:\\Users\\nakag\\Documents\\workspace-spring-tool-suite-4-4.3.2.RELEASE\\implementacaoh2\\target\\classes started by nakag in C:\\Users\\nakag\\Documents\\workspace-spring-tool-suite-4-4.3.2.RELEASE\\implementacaoh2)",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:06:33.937Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "br.com.arthur.implementacaoh2.App",
  "message" : "No active profile set, falling back to default profiles: default",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:06:34.943Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.springframework.data.repository.config.RepositoryConfigurationDelegate",
  "message" : "Bootstrapping Spring Data repositories in DEFAULT mode.",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:06:35.118Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.springframework.data.repository.config.RepositoryConfigurationDelegate",
  "message" : "Finished Spring Data repository scanning in 158ms. Found 6 repository interfaces.",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:06:35.694Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
  "message" : "Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$a28115a6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:06:36.434Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.springframework.boot.web.embedded.tomcat.TomcatWebServer",
  "message" : "Tomcat initialized with port(s): 8080 (http)",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:06:36.526Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.apache.coyote.http11.Http11NioProtocol",
  "message" : "Initializing ProtocolHandler [\"http-nio-8080\"]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:06:36.543Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.apache.catalina.core.StandardService",
  "message" : "Starting service [Tomcat]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:06:36.544Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.apache.catalina.core.StandardEngine",
  "message" : "Starting Servlet engine: [Apache Tomcat/9.0.22]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:06:36.732Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]",
  "message" : "Initializing Spring embedded WebApplicationContext",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:06:36.732Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.springframework.web.context.ContextLoader",
  "message" : "Root WebApplicationContext: initialization completed in 2686 ms",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:06:36.829Z",
  "level" : "DEBUG",
  "thread" : "main",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "Filter 'logFilter' configured for use",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:06:37.005Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "com.zaxxer.hikari.HikariDataSource",
  "message" : "HikariPool-1 - Starting...",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:06:37.307Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "com.zaxxer.hikari.HikariDataSource",
  "message" : "HikariPool-1 - Start completed.",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:06:37.421Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.hibernate.jpa.internal.util.LogHelper",
  "message" : "HHH000204: Processing PersistenceUnitInfo [\n\tname: default\n\t...]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:06:37.544Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.hibernate.Version",
  "message" : "HHH000412: Hibernate Core {5.3.10.Final}",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:06:37.546Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.hibernate.cfg.Environment",
  "message" : "HHH000206: hibernate.properties not found",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:06:37.791Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.hibernate.annotations.common.Version",
  "message" : "HCANN000001: Hibernate Commons Annotations {5.0.4.Final}",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:06:38.058Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.hibernate.dialect.Dialect",
  "message" : "HHH000400: Using dialect: org.hibernate.dialect.H2Dialect",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:06:38.517Z",
  "level" : "WARN",
  "thread" : "main",
  "logger" : "org.hibernate.mapping.RootClass",
  "message" : "HHH000038: Composite-id class does not override equals(): br.com.arthur.implementacaoh2.entities.ContaRepasseId",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:06:38.517Z",
  "level" : "WARN",
  "thread" : "main",
  "logger" : "org.hibernate.mapping.RootClass",
  "message" : "HHH000039: Composite-id class does not override hashCode(): br.com.arthur.implementacaoh2.entities.ContaRepasseId",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:06:39.377Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.hibernate.tool.schema.internal.SchemaCreatorImpl",
  "message" : "HHH000476: Executing import script 'org.hibernate.tool.schema.internal.exec.ScriptSourceInputNonExistentImpl@652f26da'",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:06:39.384Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean",
  "message" : "Initialized JPA EntityManagerFactory for persistence unit 'default'",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:06:39.822Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.hibernate.hql.internal.QueryTranslatorFactoryInitiator",
  "message" : "HHH000397: Using ASTQueryTranslatorFactory",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:06:40.523Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor",
  "message" : "Initializing ExecutorService 'applicationTaskExecutor'",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:06:40.594Z",
  "level" : "WARN",
  "thread" : "main",
  "logger" : "org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration$JpaWebMvcConfiguration",
  "message" : "spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:06:40.837Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.apache.coyote.http11.Http11NioProtocol",
  "message" : "Starting ProtocolHandler [\"http-nio-8080\"]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:06:40.873Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.springframework.boot.web.embedded.tomcat.TomcatWebServer",
  "message" : "Tomcat started on port(s): 8080 (http) with context path ''",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:06:40.875Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "br.com.arthur.implementacaoh2.App",
  "message" : "Started App in 7.386 seconds (JVM running for 8.438)",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:06:43.584Z",
  "level" : "INFO",
  "thread" : "http-nio-8080-exec-1",
  "logger" : "org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]",
  "message" : "Initializing Spring DispatcherServlet 'dispatcherServlet'",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:06:43.584Z",
  "level" : "INFO",
  "thread" : "http-nio-8080-exec-1",
  "logger" : "org.springframework.web.servlet.DispatcherServlet",
  "message" : "Initializing Servlet 'dispatcherServlet'",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:06:43.600Z",
  "level" : "INFO",
  "thread" : "http-nio-8080-exec-1",
  "logger" : "org.springframework.web.servlet.DispatcherServlet",
  "message" : "Completed initialization in 16 ms",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:06:43.627Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-1",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "Before request [uri=/acordos_comerciais]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:06:44.060Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-1",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "After request [uri=/acordos_comerciais;payload={\n    \"id_acordo_comercial\": 1,\n    \"id_versao_acordo_comercial\": 1,\n    \"id_parceiro\": 1,\n    \"id_produto\": 1,\n    \"situacao\": \"ativo\",\n    \"data_inicio_vigencia\": \"2020-12-01\",\n    \"vigencia_indeterminada\": false,\n    \"data_fim_vigencia\": \"2020-12-02\",\n    \"configuracoes_canal\": [\n        {\n            \"id_canal\": \"C1\"\n        },\n        {\n            \"id_canal\": \"71\"\n        }\n    ],\n    \"contas_repasse\": [\n        {\n            \"id_conta\": 1,\n            \"codigo_finalidade_spb\": \"12345\",\n            \"percentual_raterio\": 50\n        },\n        {\n            \"id_conta\": 2,\n            \"codigo_finalidade_spb\": \"12345\",\n            \"percentual_raterio\": 50\n        }\n    ]\n}]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:06:47.267Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-3",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "Before request [uri=/acordos_comerciais]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:06:47.292Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-3",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "After request [uri=/acordos_comerciais;payload={\n    \"id_acordo_comercial\": 2,\n    \"id_versao_acordo_comercial\": 1,\n    \"id_parceiro\": 1,\n    \"id_produto\": 1,\n    \"situacao\": \"ativo\",\n    \"data_inicio_vigencia\": \"2020-12-01\",\n    \"vigencia_indeterminada\": false,\n    \"data_fim_vigencia\": \"2020-12-02\",\n    \"configuracoes_canal\": [\n        {\n            \"id_canal\": \"C1\"\n        },\n        {\n            \"id_canal\": \"71\"\n        }\n    ],\n    \"contas_repasse\": [\n        {\n            \"id_conta\": 1,\n            \"codigo_finalidade_spb\": \"12345\",\n            \"percentual_raterio\": 50\n        },\n        {\n            \"id_conta\": 2,\n            \"codigo_finalidade_spb\": \"12345\",\n            \"percentual_raterio\": 50\n        }\n    ]\n}]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:06:52.207Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-4",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "Before request [uri=/acordos_comerciais]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:06:52.220Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-4",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "After request [uri=/acordos_comerciais;payload={\n    \"id_acordo_comercial\": 2,\n    \"id_versao_acordo_comercial\": 2,\n    \"id_parceiro\": 1,\n    \"id_produto\": 1,\n    \"situacao\": \"ativo\",\n    \"data_inicio_vigencia\": \"2020-12-01\",\n    \"vigencia_indeterminada\": false,\n    \"data_fim_vigencia\": \"2020-12-02\",\n    \"configuracoes_canal\": [\n        {\n            \"id_canal\": \"C1\"\n        },\n        {\n            \"id_canal\": \"71\"\n        }\n    ],\n    \"contas_repasse\": [\n        {\n            \"id_conta\": 1,\n            \"codigo_finalidade_spb\": \"12345\",\n            \"percentual_raterio\": 50\n        },\n        {\n            \"id_conta\": 2,\n            \"codigo_finalidade_spb\": \"12345\",\n            \"percentual_raterio\": 50\n        }\n    ]\n}]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:07:00.911Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-5",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "Before request [uri=/acordos_comerciais]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:07:18.282Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-5",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "After request [uri=/acordos_comerciais]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:08:09.248Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "br.com.arthur.implementacaoh2.App",
  "message" : "Starting App on DESKTOP-JGRRF34 with PID 9356 (C:\\Users\\nakag\\Documents\\workspace-spring-tool-suite-4-4.3.2.RELEASE\\implementacaoh2\\target\\classes started by nakag in C:\\Users\\nakag\\Documents\\workspace-spring-tool-suite-4-4.3.2.RELEASE\\implementacaoh2)",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:08:09.265Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "br.com.arthur.implementacaoh2.App",
  "message" : "No active profile set, falling back to default profiles: default",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:08:09.893Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.springframework.data.repository.config.RepositoryConfigurationDelegate",
  "message" : "Bootstrapping Spring Data repositories in DEFAULT mode.",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:08:10.009Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.springframework.data.repository.config.RepositoryConfigurationDelegate",
  "message" : "Finished Spring Data repository scanning in 108ms. Found 6 repository interfaces.",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:08:10.324Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
  "message" : "Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$156da9bd] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:08:10.778Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.springframework.boot.web.embedded.tomcat.TomcatWebServer",
  "message" : "Tomcat initialized with port(s): 8080 (http)",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:08:10.791Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.apache.coyote.http11.Http11NioProtocol",
  "message" : "Initializing ProtocolHandler [\"http-nio-8080\"]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:08:10.801Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.apache.catalina.core.StandardService",
  "message" : "Starting service [Tomcat]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:08:10.801Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.apache.catalina.core.StandardEngine",
  "message" : "Starting Servlet engine: [Apache Tomcat/9.0.22]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:08:10.926Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]",
  "message" : "Initializing Spring embedded WebApplicationContext",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:08:10.926Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.springframework.web.context.ContextLoader",
  "message" : "Root WebApplicationContext: initialization completed in 1625 ms",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:08:10.995Z",
  "level" : "DEBUG",
  "thread" : "main",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "Filter 'logFilter' configured for use",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:08:11.156Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "com.zaxxer.hikari.HikariDataSource",
  "message" : "HikariPool-1 - Starting...",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:08:11.304Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "com.zaxxer.hikari.HikariDataSource",
  "message" : "HikariPool-1 - Start completed.",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:08:11.380Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.hibernate.jpa.internal.util.LogHelper",
  "message" : "HHH000204: Processing PersistenceUnitInfo [\n\tname: default\n\t...]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:08:11.454Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.hibernate.Version",
  "message" : "HHH000412: Hibernate Core {5.3.10.Final}",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:08:11.455Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.hibernate.cfg.Environment",
  "message" : "HHH000206: hibernate.properties not found",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:08:11.586Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.hibernate.annotations.common.Version",
  "message" : "HCANN000001: Hibernate Commons Annotations {5.0.4.Final}",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:08:11.732Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.hibernate.dialect.Dialect",
  "message" : "HHH000400: Using dialect: org.hibernate.dialect.H2Dialect",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:08:11.977Z",
  "level" : "WARN",
  "thread" : "main",
  "logger" : "org.hibernate.mapping.RootClass",
  "message" : "HHH000038: Composite-id class does not override equals(): br.com.arthur.implementacaoh2.entities.ContaRepasseId",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:08:11.978Z",
  "level" : "WARN",
  "thread" : "main",
  "logger" : "org.hibernate.mapping.RootClass",
  "message" : "HHH000039: Composite-id class does not override hashCode(): br.com.arthur.implementacaoh2.entities.ContaRepasseId",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:08:12.455Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.hibernate.tool.schema.internal.SchemaCreatorImpl",
  "message" : "HHH000476: Executing import script 'org.hibernate.tool.schema.internal.exec.ScriptSourceInputNonExistentImpl@6c8f4bc7'",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:08:12.458Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean",
  "message" : "Initialized JPA EntityManagerFactory for persistence unit 'default'",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:08:12.764Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.hibernate.hql.internal.QueryTranslatorFactoryInitiator",
  "message" : "HHH000397: Using ASTQueryTranslatorFactory",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:08:13.396Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor",
  "message" : "Initializing ExecutorService 'applicationTaskExecutor'",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:08:13.447Z",
  "level" : "WARN",
  "thread" : "main",
  "logger" : "org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration$JpaWebMvcConfiguration",
  "message" : "spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:08:13.614Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.apache.coyote.http11.Http11NioProtocol",
  "message" : "Starting ProtocolHandler [\"http-nio-8080\"]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:08:13.643Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.springframework.boot.web.embedded.tomcat.TomcatWebServer",
  "message" : "Tomcat started on port(s): 8080 (http) with context path ''",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:08:13.646Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "br.com.arthur.implementacaoh2.App",
  "message" : "Started App in 4.678 seconds (JVM running for 5.222)",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:08:22.899Z",
  "level" : "INFO",
  "thread" : "http-nio-8080-exec-2",
  "logger" : "org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]",
  "message" : "Initializing Spring DispatcherServlet 'dispatcherServlet'",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:08:22.899Z",
  "level" : "INFO",
  "thread" : "http-nio-8080-exec-2",
  "logger" : "org.springframework.web.servlet.DispatcherServlet",
  "message" : "Initializing Servlet 'dispatcherServlet'",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:08:22.907Z",
  "level" : "INFO",
  "thread" : "http-nio-8080-exec-2",
  "logger" : "org.springframework.web.servlet.DispatcherServlet",
  "message" : "Completed initialization in 8 ms",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:08:22.917Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-2",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "Before request [uri=/acordos_comerciais]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:08:23.161Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-2",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "After request [uri=/acordos_comerciais;payload={\n    \"id_acordo_comercial\": 1,\n    \"id_versao_acordo_comercial\": 1,\n    \"id_parceiro\": 1,\n    \"id_produto\": 1,\n    \"situacao\": \"ativo\",\n    \"data_inicio_vigencia\": \"2020-12-01\",\n    \"vigencia_indeterminada\": false,\n    \"data_fim_vigencia\": \"2020-12-02\",\n    \"configuracoes_canal\": [\n        {\n            \"id_canal\": \"C1\"\n        },\n        {\n            \"id_canal\": \"71\"\n        }\n    ],\n    \"contas_repasse\": [\n        {\n            \"id_conta\": 1,\n            \"codigo_finalidade_spb\": \"12345\",\n            \"percentual_raterio\": 50\n        },\n        {\n            \"id_conta\": 2,\n            \"codigo_finalidade_spb\": \"12345\",\n            \"percentual_raterio\": 50\n        }\n    ]\n}]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:08:26.355Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-3",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "Before request [uri=/acordos_comerciais]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:08:26.413Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-3",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "After request [uri=/acordos_comerciais]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:08:26.415Z",
  "level" : "ERROR",
  "thread" : "http-nio-8080-exec-3",
  "logger" : "org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]",
  "message" : "Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.core.convert.ConversionFailedException: Failed to convert from type [java.lang.Object[]] to type [br.com.arthur.implementacaoh2.entities.AcordoComercialId] for value '{1, 1}'; nested exception is org.springframework.core.convert.ConverterNotFoundException: No converter found capable of converting from type [java.lang.Integer] to type [br.com.arthur.implementacaoh2.entities.AcordoComercialId]] with root cause",
  "context" : "default",
  "exception" : "org.springframework.core.convert.ConverterNotFoundException: No converter found capable of converting from type [java.lang.Integer] to type [br.com.arthur.implementacaoh2.entities.AcordoComercialId]\r\n\tat org.springframework.core.convert.support.GenericConversionService.handleConverterNotFound(GenericConversionService.java:321)\r\n\tat org.springframework.core.convert.support.GenericConversionService.convert(GenericConversionService.java:194)\r\n\tat org.springframework.core.convert.support.ArrayToObjectConverter.convert(ArrayToObjectConverter.java:68)\r\n\tat org.springframework.core.convert.support.ConversionUtils.invokeConverter(ConversionUtils.java:41)\r\n\tat org.springframework.core.convert.support.GenericConversionService.convert(GenericConversionService.java:191)\r\n\tat org.springframework.core.convert.support.GenericConversionService.convert(GenericConversionService.java:174)\r\n\tat org.springframework.data.repository.query.ResultProcessor$ProjectingConverter.convert(ResultProcessor.java:293)\r\n\tat org.springframework.data.repository.query.ResultProcessor$ChainingConverter.lambda$and$0(ResultProcessor.java:213)\r\n\tat org.springframework.data.repository.query.ResultProcessor$ChainingConverter.convert(ResultProcessor.java:224)\r\n\tat org.springframework.data.repository.query.ResultProcessor.processResult(ResultProcessor.java:152)\r\n\tat org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:141)\r\n\tat org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:125)\r\n\tat org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.doInvoke(RepositoryFactorySupport.java:605)\r\n\tat org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.lambda$invoke$3(RepositoryFactorySupport.java:595)\r\n\tat org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.invoke(RepositoryFactorySupport.java:595)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\r\n\tat org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:59)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\r\n\tat org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:295)\r\n\tat org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\r\n\tat org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\r\n\tat org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:144)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\r\n\tat org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$ExposeRepositoryInvocationInterceptor.invoke(CrudMethodMetadataPostProcessor.java:364)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\r\n\tat org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\r\n\tat org.springframework.data.repository.core.support.SurroundingTransactionDetectorMethodInterceptor.invoke(SurroundingTransactionDetectorMethodInterceptor.java:61)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\r\n\tat org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)\r\n\tat com.sun.proxy.$Proxy97.consultarAcordosComerciais(Unknown Source)\r\n\tat br.com.arthur.implementacaoh2.services.AcordoComercialRepositoryImpl.consultaAcordosComerciais(AcordoComercialRepositoryImpl.java:48)\r\n\tat br.com.arthur.implementacaoh2.services.AcordoComercialRepositoryImpl$$FastClassBySpringCGLIB$$96d08d3b.invoke(<generated>)\r\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\r\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\r\n\tat org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\r\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)\r\n\tat br.com.arthur.implementacaoh2.services.AcordoComercialRepositoryImpl$$EnhancerBySpringCGLIB$$6ef08275.consultaAcordosComerciais(<generated>)\r\n\tat br.com.arthur.implementacaoh2.entrypoints.AcordosComerciaisController.consulta(AcordosComerciaisController.java:34)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)\r\n\tat org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)\r\n\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)\r\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)\r\n\tat org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:897)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:634)\r\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:741)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.web.filter.AbstractRequestLoggingFilter.doFilterInternal(AbstractRequestLoggingFilter.java:262)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)\r\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)\r\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)\r\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)\r\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\r\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)\r\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)\r\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)\r\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)\r\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)\r\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)\r\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"
}{
  "timestamp" : "2020-03-12T03:08:42.134Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "br.com.arthur.implementacaoh2.App",
  "message" : "Starting App on DESKTOP-JGRRF34 with PID 1072 (C:\\Users\\nakag\\Documents\\workspace-spring-tool-suite-4-4.3.2.RELEASE\\implementacaoh2\\target\\classes started by nakag in C:\\Users\\nakag\\Documents\\workspace-spring-tool-suite-4-4.3.2.RELEASE\\implementacaoh2)",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:08:42.152Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "br.com.arthur.implementacaoh2.App",
  "message" : "No active profile set, falling back to default profiles: default",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:08:47.962Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "br.com.arthur.implementacaoh2.App",
  "message" : "Starting App on DESKTOP-JGRRF34 with PID 5228 (C:\\Users\\nakag\\Documents\\workspace-spring-tool-suite-4-4.3.2.RELEASE\\implementacaoh2\\target\\classes started by nakag in C:\\Users\\nakag\\Documents\\workspace-spring-tool-suite-4-4.3.2.RELEASE\\implementacaoh2)",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:08:47.979Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "br.com.arthur.implementacaoh2.App",
  "message" : "No active profile set, falling back to default profiles: default",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:08:48.601Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.springframework.data.repository.config.RepositoryConfigurationDelegate",
  "message" : "Bootstrapping Spring Data repositories in DEFAULT mode.",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:08:48.714Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.springframework.data.repository.config.RepositoryConfigurationDelegate",
  "message" : "Finished Spring Data repository scanning in 106ms. Found 6 repository interfaces.",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:08:49.005Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
  "message" : "Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$4fca10c8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:08:49.463Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.springframework.boot.web.embedded.tomcat.TomcatWebServer",
  "message" : "Tomcat initialized with port(s): 8080 (http)",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:08:49.477Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.apache.coyote.http11.Http11NioProtocol",
  "message" : "Initializing ProtocolHandler [\"http-nio-8080\"]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:08:49.486Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.apache.catalina.core.StandardService",
  "message" : "Starting service [Tomcat]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:08:49.487Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.apache.catalina.core.StandardEngine",
  "message" : "Starting Servlet engine: [Apache Tomcat/9.0.22]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:08:49.590Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]",
  "message" : "Initializing Spring embedded WebApplicationContext",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:08:49.591Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.springframework.web.context.ContextLoader",
  "message" : "Root WebApplicationContext: initialization completed in 1574 ms",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:08:49.660Z",
  "level" : "DEBUG",
  "thread" : "main",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "Filter 'logFilter' configured for use",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:08:49.808Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "com.zaxxer.hikari.HikariDataSource",
  "message" : "HikariPool-1 - Starting...",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:08:49.950Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "com.zaxxer.hikari.HikariDataSource",
  "message" : "HikariPool-1 - Start completed.",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:08:50.018Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.hibernate.jpa.internal.util.LogHelper",
  "message" : "HHH000204: Processing PersistenceUnitInfo [\n\tname: default\n\t...]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:08:50.079Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.hibernate.Version",
  "message" : "HHH000412: Hibernate Core {5.3.10.Final}",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:08:50.081Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.hibernate.cfg.Environment",
  "message" : "HHH000206: hibernate.properties not found",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:08:50.213Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.hibernate.annotations.common.Version",
  "message" : "HCANN000001: Hibernate Commons Annotations {5.0.4.Final}",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:08:50.358Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.hibernate.dialect.Dialect",
  "message" : "HHH000400: Using dialect: org.hibernate.dialect.H2Dialect",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:08:50.602Z",
  "level" : "WARN",
  "thread" : "main",
  "logger" : "org.hibernate.mapping.RootClass",
  "message" : "HHH000038: Composite-id class does not override equals(): br.com.arthur.implementacaoh2.entities.ContaRepasseId",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:08:50.603Z",
  "level" : "WARN",
  "thread" : "main",
  "logger" : "org.hibernate.mapping.RootClass",
  "message" : "HHH000039: Composite-id class does not override hashCode(): br.com.arthur.implementacaoh2.entities.ContaRepasseId",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:08:51.093Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.hibernate.tool.schema.internal.SchemaCreatorImpl",
  "message" : "HHH000476: Executing import script 'org.hibernate.tool.schema.internal.exec.ScriptSourceInputNonExistentImpl@733f1395'",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:08:51.096Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean",
  "message" : "Initialized JPA EntityManagerFactory for persistence unit 'default'",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:08:51.377Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.hibernate.hql.internal.QueryTranslatorFactoryInitiator",
  "message" : "HHH000397: Using ASTQueryTranslatorFactory",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:08:51.979Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor",
  "message" : "Initializing ExecutorService 'applicationTaskExecutor'",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:08:52.037Z",
  "level" : "WARN",
  "thread" : "main",
  "logger" : "org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration$JpaWebMvcConfiguration",
  "message" : "spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:08:52.239Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.apache.coyote.http11.Http11NioProtocol",
  "message" : "Starting ProtocolHandler [\"http-nio-8080\"]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:08:52.267Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "org.springframework.boot.web.embedded.tomcat.TomcatWebServer",
  "message" : "Tomcat started on port(s): 8080 (http) with context path ''",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:08:52.270Z",
  "level" : "INFO",
  "thread" : "main",
  "logger" : "br.com.arthur.implementacaoh2.App",
  "message" : "Started App in 4.583 seconds (JVM running for 5.128)",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:08:57.159Z",
  "level" : "INFO",
  "thread" : "http-nio-8080-exec-1",
  "logger" : "org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]",
  "message" : "Initializing Spring DispatcherServlet 'dispatcherServlet'",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:08:57.159Z",
  "level" : "INFO",
  "thread" : "http-nio-8080-exec-1",
  "logger" : "org.springframework.web.servlet.DispatcherServlet",
  "message" : "Initializing Servlet 'dispatcherServlet'",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:08:57.170Z",
  "level" : "INFO",
  "thread" : "http-nio-8080-exec-1",
  "logger" : "org.springframework.web.servlet.DispatcherServlet",
  "message" : "Completed initialization in 11 ms",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:08:57.186Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-1",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "Before request [uri=/acordos_comerciais]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:08:57.466Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-1",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "After request [uri=/acordos_comerciais;payload={\n    \"id_acordo_comercial\": 1,\n    \"id_versao_acordo_comercial\": 1,\n    \"id_parceiro\": 1,\n    \"id_produto\": 1,\n    \"situacao\": \"ativo\",\n    \"data_inicio_vigencia\": \"2020-12-01\",\n    \"vigencia_indeterminada\": false,\n    \"data_fim_vigencia\": \"2020-12-02\",\n    \"configuracoes_canal\": [\n        {\n            \"id_canal\": \"C1\"\n        },\n        {\n            \"id_canal\": \"71\"\n        }\n    ],\n    \"contas_repasse\": [\n        {\n            \"id_conta\": 1,\n            \"codigo_finalidade_spb\": \"12345\",\n            \"percentual_raterio\": 50\n        },\n        {\n            \"id_conta\": 2,\n            \"codigo_finalidade_spb\": \"12345\",\n            \"percentual_raterio\": 50\n        }\n    ]\n}]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:08:58.921Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-3",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "Before request [uri=/acordos_comerciais]",
  "context" : "default"
}{
  "timestamp" : "2020-03-12T03:08:59.035Z",
  "level" : "DEBUG",
  "thread" : "http-nio-8080-exec-3",
  "logger" : "org.springframework.web.filter.CommonsRequestLoggingFilter",
  "message" : "After request [uri=/acordos_comerciais]",
  "context" : "default"
}